{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Video.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../redux/actions';\n// import { changeSprite } from '../actions/sprite'\n// import Konva from 'konva';\n\nimport { Stage, Layer } from 'react-konva';\nimport SpriteList from './SpriteList';\nimport ControlBar from './ControlBar';\nimport UploadSound from './UploadSound';\nimport { DiffCamEngine } from './diff-cam-engine'; // import * from './adapter-1.0.7'\n\nvar Video =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Video, _Component);\n\n  function Video() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Video)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      x: 0,\n      y: 0,\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0,\n      captureInterval: null,\n      video: document.createElement('video'),\n      motionCanvas: document.createElement('canvas'),\n      captureIntervalTime: 100,\n      captureWidth: 640,\n      captureHeight: 480,\n      diffWidth: 64,\n      diffHeight: 48,\n      pixelDiffThreshold: 32,\n      scoreThreshold: 16,\n      includeMotionBox: false,\n      includeMotionPixels: false,\n      test: document.createElement('canvas'),\n      // callbacks\n      initSuccessCallback: function initSuccessCallback() {},\n      initErrorCallback: function initErrorCallback() {},\n      // startCompleteCallback : options.startCompleteCallback || function() {},\n      captureCallback: function captureCallback() {},\n      // non-configurable\n      captureCanvas: document.createElement('canvas'),\n      diffCanvas: document.createElement('canvas'),\n      isReadyToDiff: false //\n      // // prep video\n      // video.autoplay : true,\n      //\n      // // prep capture canvas\n      // captureCanvas.width : captureWidth,\n      // captureCanvas.height : captureHeight,\n      // captureContext : captureCanvas.getContext('2d'),\n      //\n      // // prep diff canvas\n      // diffCanvas.width : diffWidth,\n      // diffCanvas.height : diffHeight,\n      // diffContext : diffCanvas.getContext('2d'),\n      //\n      // // prep motion canvas\n      // motionCanvas.width : diffWidth,\n      // motionCanvas.height : diffHeight,\n      // motionContext : motionCanvas.getContext('2d'),\n      //\n      // //test canvas\n      // test.width : diffWidth,\n      // test.height : diffHeight\n      // testContext : test.getContext('2d')\n\n    };\n\n    _this.getMotion = function () {\n      var canvas = document.getElementById('motion');\n      var video = document.getElementById('video');\n      var score = document.getElementById('score');\n      var test = document.getElementById('test'); // var canvas = this.refs.motion;\n      // var video = this.refs.video\n      // var score = document.getElementById('score');\n      // var test = this.refs.test\n      // let captureInterval = setInterval(DiffCamEngine.capture, 100);\n      // console.log('captureinterval',captureInterval)\n      // this.setState({\n      //   captureInterval: captureInterval\n      // })\n\n      function initSuccess() {\n        DiffCamEngine.start();\n      }\n\n      function initError() {\n        alert('Something went wrong.');\n      }\n\n      function capture(payload) {\n        score.textContent = payload.score;\n      }\n\n      DiffCamEngine.init({\n        video: video,\n        test: test,\n        motionCanvas: canvas,\n        initSuccessCallback: initSuccess,\n        initErrorCallback: initError,\n        captureCallback: capture\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      debugger;\n      var spriteCanvas = document.getElementsByClassName('konvajs-content')[0].getBoundingClientRect();\n      var captureCanvas = document.createElement('canvas');\n      captureCanvas.width = spriteCanvas.width;\n      captureCanvas.height = spriteCanvas.height;\n      var diffCanvas = document.createElement('canvas');\n      diffCanvas.width = spriteCanvas.width;\n      diffCanvas.height = spriteCanvas.height;\n      this.setState({\n        x: spriteCanvas.x,\n        y: spriteCanvas.y,\n        bottom: spriteCanvas.bottom,\n        height: spriteCanvas.height,\n        left: spriteCanvas.left,\n        right: spriteCanvas.right,\n        top: spriteCanvas.top,\n        width: spriteCanvas.width\n      });\n      var canvas = this.refs.test;\n      var ctx = canvas.getContext('2d');\n\n      var drawSprites = function drawSprites() {\n        return _this2.props.canvasSprites.map(function (sprite) {\n          var image = new window.Image();\n          image.src = sprite.sprite.url;\n\n          image.onload = function () {\n            ctx.drawImage(image, sprite.position.x, sprite.position.y, 60, 60);\n          };\n        });\n      };\n\n      drawSprites();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {// const canvas = this.refs.test\n      // const ctx = canvas.getContext('2d')\n      // ctx.drawImage(this.state.video,0,0)\n      // this.props.canvasSprites.map(sprite =>{\n      //   const image = new window.Image();\n      //     image.src = sprite.sprite.url\n      //     image.onload = () =>{\n      //       ctx.drawImage(image,sprite.position.x,sprite.position.y, 60, 60)\n      //     }\n      //   }\n      // )\n    }\n  }, {\n    key: \"requestWebcam\",\n    // captureCallback(payload) {\n    //   score.textContent = payload.score;\n    // }\n    value: function requestWebcam() {\n      var constraints = {\n        audio: false,\n        video: {\n          width: this.state.captureWidth,\n          height: this.state.captureHeight\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(this.initSuccess).catch(this.initError);\n    }\n  }, {\n    key: \"initSuccess\",\n    value: function initSuccess(requestedStream) {\n      console.log(requestedStream);\n      stream = requestedStream;\n      console.log(initSuccessCallback);\n      initSuccessCallback();\n    }\n  }, {\n    key: \"initError\",\n    value: function initError(error) {\n      console.log(error);\n      initErrorCallback();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('VIDEO STATE', this.state);\n      var videoStyle = {\n        top: 0,\n        left: 0,\n        position: 'absolute',\n        zIndex: 4 // background: 'gray',\n\n      };\n      var motionStyle = {\n        top: this.state.top,\n        left: this.state.left,\n        position: 'absolute',\n        zIndex: -1 // background: 'gray',\n\n      };\n      var testStyle = {\n        top: this.state.top,\n        left: this.state.left,\n        position: 'absolute',\n        zIndex: 4,\n        background: 'red'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"video\",\n        style: videoStyle,\n        width: this.state.width,\n        height: this.state.height,\n        autoPlay: true,\n        ref: \"video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"motion\",\n        style: motionStyle,\n        width: this.state.width,\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"test\",\n        style: testStyle,\n        width: this.state.width,\n        height: this.state.height,\n        ref: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"script\", {\n        src: \"https://webrtc.github.io/adapter/adapter-1.0.7.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    canvasSprites: state.sprite.canvasSprites\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Video.js"],"names":["React","Component","connect","Stage","Layer","SpriteList","ControlBar","UploadSound","DiffCamEngine","Video","state","x","y","bottom","height","left","right","top","width","captureInterval","video","document","createElement","motionCanvas","captureIntervalTime","captureWidth","captureHeight","diffWidth","diffHeight","pixelDiffThreshold","scoreThreshold","includeMotionBox","includeMotionPixels","test","initSuccessCallback","initErrorCallback","captureCallback","captureCanvas","diffCanvas","isReadyToDiff","getMotion","canvas","getElementById","score","initSuccess","start","initError","alert","capture","payload","textContent","init","spriteCanvas","getElementsByClassName","getBoundingClientRect","setState","refs","ctx","getContext","drawSprites","props","canvasSprites","map","sprite","image","window","Image","src","url","onload","drawImage","position","constraints","audio","navigator","mediaDevices","getUserMedia","then","catch","requestedStream","console","log","stream","error","videoStyle","zIndex","motionStyle","testStyle","background","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,aAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B,C,CACA;;IAGMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,CAAC,EAAE,CADG;AAENC,MAAAA,CAAC,EAAE,CAFG;AAGNC,MAAAA,MAAM,EAAE,CAHF;AAINC,MAAAA,MAAM,EAAE,CAJF;AAKNC,MAAAA,IAAI,EAAE,CALA;AAMNC,MAAAA,KAAK,EAAE,CAND;AAONC,MAAAA,GAAG,EAAE,CAPC;AAQNC,MAAAA,KAAK,EAAE,CARD;AASNC,MAAAA,eAAe,EAAE,IATX;AAUNC,MAAAA,KAAK,EAAEC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAVD;AAWRC,MAAAA,YAAY,EAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAXP;AAYRE,MAAAA,mBAAmB,EAAG,GAZd;AAaRC,MAAAA,YAAY,EAAG,GAbP;AAcRC,MAAAA,aAAa,EAAE,GAdP;AAeRC,MAAAA,SAAS,EAAG,EAfJ;AAgBRC,MAAAA,UAAU,EAAG,EAhBL;AAiBRC,MAAAA,kBAAkB,EAAI,EAjBd;AAkBRC,MAAAA,cAAc,EAAG,EAlBT;AAmBRC,MAAAA,gBAAgB,EAAG,KAnBX;AAoBRC,MAAAA,mBAAmB,EAAG,KApBd;AAqBRC,MAAAA,IAAI,EAAGZ,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CArBC;AAuBR;AACAY,MAAAA,mBAAmB,EAAG,+BAAW,CAAE,CAxB3B;AAyBRC,MAAAA,iBAAiB,EAAG,6BAAW,CAAE,CAzBzB;AA0BR;AACAC,MAAAA,eAAe,EAAG,2BAAW,CAAE,CA3BvB;AA6BR;AACAC,MAAAA,aAAa,EAAGhB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CA9BR;AA+BRgB,MAAAA,UAAU,EAAGjB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CA/BL;AAgCRiB,MAAAA,aAAa,EAAG,KAhCR,CAiCN;AACF;AACA;AACE;AACF;AACA;AACA;AACA;AACE;AACF;AACA;AACA;AACA;AACE;AACF;AACA;AACA;AACA;AACE;AACF;AACA;AACA;AACA;;AAvDQ,K;;UAiHRC,S,GAAY,YAAM;AAChB,UAAIC,MAAM,GAAGpB,QAAQ,CAACqB,cAAT,CAAwB,QAAxB,CAAb;AACA,UAAItB,KAAK,GAAGC,QAAQ,CAACqB,cAAT,CAAwB,OAAxB,CAAZ;AACA,UAAIC,KAAK,GAAGtB,QAAQ,CAACqB,cAAT,CAAwB,OAAxB,CAAZ;AACA,UAAIT,IAAI,GAAGZ,QAAQ,CAACqB,cAAT,CAAwB,MAAxB,CAAX,CAJgB,CAKhB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAASE,WAAT,GAAuB;AACrBpC,QAAAA,aAAa,CAACqC,KAAd;AACD;;AAED,eAASC,SAAT,GAAqB;AACnBC,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;;AAED,eAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxBN,QAAAA,KAAK,CAACO,WAAN,GAAoBD,OAAO,CAACN,KAA5B;AACD;;AAEDnC,MAAAA,aAAa,CAAC2C,IAAd,CAAmB;AACjB/B,QAAAA,KAAK,EAAEA,KADU;AAEjBa,QAAAA,IAAI,EAAEA,IAFW;AAGjBV,QAAAA,YAAY,EAAEkB,MAHG;AAIjBP,QAAAA,mBAAmB,EAAEU,WAJJ;AAKjBT,QAAAA,iBAAiB,EAAEW,SALF;AAMjBV,QAAAA,eAAe,EAAEY;AANA,OAAnB;AAQD,K;;;;;;;wCA1FkB;AAAA;;AACjB;AACA,UAAII,YAAY,GAAG/B,QAAQ,CAACgC,sBAAT,CAAgC,iBAAhC,EAAmD,CAAnD,EAAsDC,qBAAtD,EAAnB;AACA,UAAMjB,aAAa,GAAGhB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAtB;AACAe,MAAAA,aAAa,CAACnB,KAAd,GAAsBkC,YAAY,CAAClC,KAAnC;AACAmB,MAAAA,aAAa,CAACvB,MAAd,GAAuBsC,YAAY,CAACtC,MAApC;AACF,UAAMwB,UAAU,GAAGjB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACEgB,MAAAA,UAAU,CAACpB,KAAX,GAAmBkC,YAAY,CAAClC,KAAhC;AACAoB,MAAAA,UAAU,CAACxB,MAAX,GAAoBsC,YAAY,CAACtC,MAAjC;AAEA,WAAKyC,QAAL,CAAc;AACZ5C,QAAAA,CAAC,EAAEyC,YAAY,CAACzC,CADJ;AAEZC,QAAAA,CAAC,EAAEwC,YAAY,CAACxC,CAFJ;AAGZC,QAAAA,MAAM,EAAEuC,YAAY,CAACvC,MAHT;AAIZC,QAAAA,MAAM,EAAEsC,YAAY,CAACtC,MAJT;AAKZC,QAAAA,IAAI,EAAEqC,YAAY,CAACrC,IALP;AAMZC,QAAAA,KAAK,EAAEoC,YAAY,CAACpC,KANR;AAOZC,QAAAA,GAAG,EAAEmC,YAAY,CAACnC,GAPN;AAQZC,QAAAA,KAAK,EAAEkC,YAAY,CAAClC;AARR,OAAd;AAWA,UAAMuB,MAAM,GAAG,KAAKe,IAAL,CAAUvB,IAAzB;AACA,UAAMwB,GAAG,GAAGhB,MAAM,CAACiB,UAAP,CAAkB,IAAlB,CAAZ;;AAEA,UAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,eAAO,MAAI,CAACC,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA6B,UAAAC,MAAM,EAAG;AAC7C,cAAMC,KAAK,GAAG,IAAIC,MAAM,CAACC,KAAX,EAAd;AACEF,UAAAA,KAAK,CAACG,GAAN,GAAYJ,MAAM,CAACA,MAAP,CAAcK,GAA1B;;AACAJ,UAAAA,KAAK,CAACK,MAAN,GAAe,YAAK;AAClBZ,YAAAA,GAAG,CAACa,SAAJ,CAAcN,KAAd,EAAoBD,MAAM,CAACQ,QAAP,CAAgB5D,CAApC,EAAsCoD,MAAM,CAACQ,QAAP,CAAgB3D,CAAtD,EAAyD,EAAzD,EAA6D,EAA7D;AACD,WAFD;AAGD,SANM,CAAP;AAOA,OARF;;AAUA+C,MAAAA,WAAW;AACZ;;;yCAEmB,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;;;AAyCD;AACA;AACA;oCAEgB;AAChB,UAAIa,WAAW,GAAG;AACjBC,QAAAA,KAAK,EAAE,KADU;AAEjBrD,QAAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWe,YAApB;AAAkCX,UAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWgB;AAArD;AAFU,OAAlB;AAKAgD,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCJ,WAApC,EACEK,IADF,CACO,KAAKjC,WADZ,EAEEkC,KAFF,CAEQ,KAAKhC,SAFb;AAGA;;;gCAEYiC,e,EAAiB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAG,MAAAA,MAAM,GAAGH,eAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY/C,mBAAZ;AACAA,MAAAA,mBAAmB;AACnB;;;8BAESiD,K,EAAO;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAhD,MAAAA,iBAAiB;AACjB;;;6BAEQ;AACN6C,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKvE,KAAhC;AACA,UAAM0E,UAAU,GAAE;AAChBnE,QAAAA,GAAG,EAAE,CADW;AAEhBF,QAAAA,IAAI,EAAE,CAFU;AAGhBwD,QAAAA,QAAQ,EAAE,UAHM;AAIhBc,QAAAA,MAAM,EAAE,CAJQ,CAKhB;;AALgB,OAAlB;AAQA,UAAMC,WAAW,GAAE;AACjBrE,QAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWO,GADC;AAEjBF,QAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IAFA;AAGjBwD,QAAAA,QAAQ,EAAE,UAHO;AAIjBc,QAAAA,MAAM,EAAE,CAAC,CAJQ,CAKjB;;AALiB,OAAnB;AAQA,UAAME,SAAS,GAAE;AACftE,QAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWO,GADD;AAEfF,QAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IAFF;AAGfwD,QAAAA,QAAQ,EAAE,UAHK;AAIfc,QAAAA,MAAM,EAAE,CAJO;AAKfG,QAAAA,UAAU,EAAE;AALG,OAAjB;AAQA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,KAAK,EAAEJ,UAAzB;AAAqC,QAAA,KAAK,EAAE,KAAK1E,KAAL,CAAWQ,KAAvD;AAA8D,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWI,MAAjF;AAAyF,QAAA,QAAQ,MAAjG;AAAkG,QAAA,GAAG,EAAC,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,KAAK,EAAEwE,WAA3B;AAAwC,QAAA,KAAK,EAAE,KAAK5E,KAAL,CAAWQ,KAA1D;AAAiE,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWI,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAEyE,SAAzB;AAAoC,QAAA,KAAK,EAAE,KAAK7E,KAAL,CAAWQ,KAAtD;AAA6D,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWI,MAAhF;AAAwF,QAAA,GAAG,EAAC,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAQ,QAAA,GAAG,EAAC,mDAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EArNiBb,S;;AAwNpB,SAASwF,eAAT,CAAyB/E,KAAzB,EAAgC;AAC9B,SAAO;AACLmD,IAAAA,aAAa,EAAEnD,KAAK,CAACqD,MAAN,CAAaF;AADvB,GAAP;AAGD;;AAED,SAAS6B,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO,EAAP;AACD;;AAED,eAAezF,OAAO,CAACuF,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjF,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../redux/actions';\n// import { changeSprite } from '../actions/sprite'\n// import Konva from 'konva';\nimport { Stage, Layer } from 'react-konva';\nimport SpriteList from './SpriteList'\nimport ControlBar from './ControlBar'\nimport UploadSound from './UploadSound'\nimport { DiffCamEngine } from './diff-cam-engine'\n// import * from './adapter-1.0.7'\n\n\nclass Video extends Component {\n  state = {\n    x: 0,\n    y: 0,\n    bottom: 0,\n    height: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    width: 0,\n    captureInterval: null,\n    video: document.createElement('video'),\n\t\tmotionCanvas : document.createElement('canvas'),\n\t\tcaptureIntervalTime : 100,\n\t\tcaptureWidth : 640,\n\t\tcaptureHeight :480,\n\t\tdiffWidth : 64,\n\t\tdiffHeight : 48,\n\t\tpixelDiffThreshold :  32,\n\t\tscoreThreshold : 16,\n\t\tincludeMotionBox : false,\n\t\tincludeMotionPixels : false,\n\t\ttest : document.createElement('canvas'),\n\n\t\t// callbacks\n\t\tinitSuccessCallback : function() {},\n\t\tinitErrorCallback : function() {},\n\t\t// startCompleteCallback : options.startCompleteCallback || function() {},\n\t\tcaptureCallback : function() {},\n\n\t\t// non-configurable\n\t\tcaptureCanvas : document.createElement('canvas'),\n\t\tdiffCanvas : document.createElement('canvas'),\n\t\tisReadyToDiff : false,\n    //\n\t\t// // prep video\n\t\t// video.autoplay : true,\n    //\n\t\t// // prep capture canvas\n\t\t// captureCanvas.width : captureWidth,\n\t\t// captureCanvas.height : captureHeight,\n\t\t// captureContext : captureCanvas.getContext('2d'),\n    //\n\t\t// // prep diff canvas\n\t\t// diffCanvas.width : diffWidth,\n\t\t// diffCanvas.height : diffHeight,\n\t\t// diffContext : diffCanvas.getContext('2d'),\n    //\n\t\t// // prep motion canvas\n\t\t// motionCanvas.width : diffWidth,\n\t\t// motionCanvas.height : diffHeight,\n\t\t// motionContext : motionCanvas.getContext('2d'),\n    //\n\t\t// //test canvas\n\t\t// test.width : diffWidth,\n\t\t// test.height : diffHeight\n\t\t// testContext : test.getContext('2d')\n\n  }\n\n  componentDidMount(){\n    debugger\n    let spriteCanvas = document.getElementsByClassName('konvajs-content')[0].getBoundingClientRect()\n    const captureCanvas = document.createElement('canvas');\n    captureCanvas.width = spriteCanvas.width\n    captureCanvas.height = spriteCanvas.height\n\t\tconst diffCanvas = document.createElement('canvas');\n    diffCanvas.width = spriteCanvas.width\n    diffCanvas.height = spriteCanvas.height\n\n    this.setState({\n      x: spriteCanvas.x,\n      y: spriteCanvas.y,\n      bottom: spriteCanvas.bottom,\n      height: spriteCanvas.height,\n      left: spriteCanvas.left,\n      right: spriteCanvas.right,\n      top: spriteCanvas.top,\n      width: spriteCanvas.width\n    })\n\n    const canvas = this.refs.test\n    const ctx = canvas.getContext('2d')\n\n    const drawSprites = () => {\n      return this.props.canvasSprites.map(sprite =>{\n      const image = new window.Image();\n        image.src = sprite.sprite.url\n        image.onload = () =>{\n          ctx.drawImage(image,sprite.position.x,sprite.position.y, 60, 60)\n        }\n      }\n    )}\n\n    drawSprites()\n  }\n\n  componentDidUpdate(){\n    // const canvas = this.refs.test\n    // const ctx = canvas.getContext('2d')\n    // ctx.drawImage(this.state.video,0,0)\n    // this.props.canvasSprites.map(sprite =>{\n    //   const image = new window.Image();\n    //     image.src = sprite.sprite.url\n    //     image.onload = () =>{\n    //       ctx.drawImage(image,sprite.position.x,sprite.position.y, 60, 60)\n    //     }\n    //   }\n    // )\n\n  }\n\n\n\n  getMotion = () => {\n    var canvas = document.getElementById('motion');\n    var video = document.getElementById('video');\n    var score = document.getElementById('score');\n    var test = document.getElementById('test')\n    // var canvas = this.refs.motion;\n    // var video = this.refs.video\n    // var score = document.getElementById('score');\n    // var test = this.refs.test\n\n    // let captureInterval = setInterval(DiffCamEngine.capture, 100);\n    // console.log('captureinterval',captureInterval)\n    // this.setState({\n    //   captureInterval: captureInterval\n    // })\n\n    function initSuccess() {\n      DiffCamEngine.start();\n    }\n\n    function initError() {\n      alert('Something went wrong.');\n    }\n\n    function capture(payload) {\n      score.textContent = payload.score;\n    }\n\n    DiffCamEngine.init({\n      video: video,\n      test: test,\n      motionCanvas: canvas,\n      initSuccessCallback: initSuccess,\n      initErrorCallback: initError,\n      captureCallback: capture\n    });\n  }\n  // captureCallback(payload) {\n  //   score.textContent = payload.score;\n  // }\n\n  requestWebcam() {\n\t\tvar constraints = {\n\t\t\taudio: false,\n\t\t\tvideo: { width: this.state.captureWidth, height: this.state.captureHeight }\n\t\t};\n\n\t\tnavigator.mediaDevices.getUserMedia(constraints)\n\t\t\t.then(this.initSuccess)\n\t\t\t.catch(this.initError);\n\t}\n\n  initSuccess(requestedStream) {\n\t\tconsole.log(requestedStream)\n\t\tstream = requestedStream;\n\t\tconsole.log(initSuccessCallback)\n\t\tinitSuccessCallback();\n\t}\n\n\tinitError(error) {\n\t\tconsole.log(error);\n\t\tinitErrorCallback();\n\t}\n\n  render(){\n    console.log('VIDEO STATE', this.state)\n    const videoStyle= {\n      top: 0,\n      left: 0,\n      position: 'absolute',\n      zIndex: 4,\n      // background: 'gray',\n    }\n\n    const motionStyle= {\n      top: this.state.top,\n      left: this.state.left,\n      position: 'absolute',\n      zIndex: -1,\n      // background: 'gray',\n    }\n\n    const testStyle= {\n      top: this.state.top,\n      left: this.state.left,\n      position: 'absolute',\n      zIndex: 4,\n      background: 'red'\n    }\n\n    return(\n      <div>\n        <video id=\"video\" style={videoStyle} width={this.state.width} height={this.state.height} autoPlay ref='video'></video>\n        <canvas id='motion' style={motionStyle} width={this.state.width} height={this.state.height}/>\n        <canvas id='test' style={testStyle} width={this.state.width} height={this.state.height} ref='test'/>\n        <span id=\"score\"></span>\n        <script src=\"https://webrtc.github.io/adapter/adapter-1.0.7.js\"></script>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    canvasSprites: state.sprite.canvasSprites\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);\n"]},"metadata":{},"sourceType":"module"}