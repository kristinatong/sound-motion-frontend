{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../redux/actions';\n// import { changeSprite } from '../actions/sprite'\n// import Konva from 'konva';\n\nimport { Stage, Layer } from 'react-konva';\nimport SpriteList from './SpriteList';\nimport ControlBar from './ControlBar';\nimport UploadSound from './UploadSound';\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Canvas).apply(this, arguments));\n  }\n\n  _createClass(Canvas, [{\n    key: \"render\",\n    // onDragStart = (ev) => {\n    //   console.log(this.props.sprites)\n    //   // console.log('dragstart:', id);\n    //   // ev.dataTransfer.setData(\"id\", id);\n    // }\n    //\n    // onDragOver = (ev) => {\n    //   ev.preventDefault();\n    // }\n    //\n    //\n    // onDrop = (e) => {\n    //   e.persist()\n    //   let xStart = e.clientX-350\n    //   let yStart = e.clientY-120\n    //   const ctx = this.refs.spriteLayer.getContext('2d');\n    //   var img = new Image()\n    //   img.src = e.dataTransfer.getData(\"id\")\n    //   img.onload = function () {\n    //     ctx.drawImage(img,xStart,yStart,80,80);\n    //   }\n    //   this.props.changeSprite(xStart,yStart)\n    // }\n    value: function render() {\n      var stageStyle = {} // position: 'absolute',\n      // marginLeft: '5%',\n      // justifyContent: 'center',\n      // // width: '60%',\n      // // height: '45%',\n      // // minWidth: '100',\n      // // minHeight: '75',\n      // top: '20%',\n      // backgroundColor: 'black',\n      // border: '1px dotted'\n      // const stageStyle = {\n      //   display: 'flex',\n      //   justifyContent: 'center'\n      // }\n      // return(\n      //   <Fragment>\n      //     <canvas width={480} height={360} style={stageStyle} ref='canvas' onDragOver={(e)=>this.onDragOver(e)}\n      //       onDragStart = {(e) => this.onDragStart(e)} draggable/>\n      //     <canvas width={480} height={360} style={stageStyle} ref='spriteLayer' onDragOver={(e)=>this.onDragOver(e)}\n      //       onDragStart = {(e) => this.onDragStart(e)} draggable onDrop={this.onDrop}/>\n      //   </Fragment>\n      // )\n      // width={480} height={360}\n      // <div className='main'>\n      ;\n      return React.createElement(\"div\", {\n        id: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Stage, {\n        className: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(SpriteList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(ControlBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js"],"names":["React","Component","connect","Stage","Layer","SpriteList","ControlBar","UploadSound","Canvas","stageStyle","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,aAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAGMC,M;;;;;;;;;;;;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAEQ;AACN,UAAMC,UAAU,GAAG,EAAH,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACJ;AA3BI;AA4BA,aACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADJ,EAMI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADF;AAUD;;;;EAjEkBR,S;;AAoErB,SAASS,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,EAAP;AAED;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO,EAAP;AACD;;AAED,eAAeX,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CJ,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../redux/actions';\n// import { changeSprite } from '../actions/sprite'\n// import Konva from 'konva';\nimport { Stage, Layer } from 'react-konva';\nimport SpriteList from './SpriteList'\nimport ControlBar from './ControlBar'\nimport UploadSound from './UploadSound'\n\n\nclass Canvas extends Component {\n\n  // onDragStart = (ev) => {\n  //   console.log(this.props.sprites)\n  //   // console.log('dragstart:', id);\n  //   // ev.dataTransfer.setData(\"id\", id);\n  // }\n  //\n  // onDragOver = (ev) => {\n  //   ev.preventDefault();\n  // }\n  //\n  //\n  // onDrop = (e) => {\n  //   e.persist()\n  //   let xStart = e.clientX-350\n  //   let yStart = e.clientY-120\n  //   const ctx = this.refs.spriteLayer.getContext('2d');\n  //   var img = new Image()\n  //   img.src = e.dataTransfer.getData(\"id\")\n  //   img.onload = function () {\n  //     ctx.drawImage(img,xStart,yStart,80,80);\n  //   }\n  //   this.props.changeSprite(xStart,yStart)\n  // }\n\n  render(){\n    const stageStyle = {\n      // position: 'absolute',\n      // marginLeft: '5%',\n      // justifyContent: 'center',\n      // // width: '60%',\n      // // height: '45%',\n      // // minWidth: '100',\n      // // minHeight: '75',\n      // top: '20%',\n      // backgroundColor: 'black',\n      // border: '1px dotted'\n    }\n    // const stageStyle = {\n    //   display: 'flex',\n    //   justifyContent: 'center'\n    // }\n\n    // return(\n    //   <Fragment>\n    //     <canvas width={480} height={360} style={stageStyle} ref='canvas' onDragOver={(e)=>this.onDragOver(e)}\n    //       onDragStart = {(e) => this.onDragStart(e)} draggable/>\n    //     <canvas width={480} height={360} style={stageStyle} ref='spriteLayer' onDragOver={(e)=>this.onDragOver(e)}\n    //       onDragStart = {(e) => this.onDragStart(e)} draggable onDrop={this.onDrop}/>\n    //   </Fragment>\n    // )\n\n    // width={480} height={360}\n// <div className='main'>\n    return(\n      <div id='main'>\n          <Stage className='canvas'>\n            <Layer>\n              <SpriteList/>\n            </Layer>\n          </Stage>\n          <ControlBar/>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\n"]},"metadata":{},"sourceType":"module"}