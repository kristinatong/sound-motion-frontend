{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Sprite.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../actions/actions';\n// import Konva from 'konva';\n\nimport { Konva, Image } from 'react-konva'; // import { selectSprite } from '../actions/sprite'\n\nimport * as actions from '../actions/sprite';\n\nvar Sprite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sprite, _Component);\n\n  function Sprite() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sprite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sprite)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image: null,\n      isDragging: false,\n      // hover: false,\n      uniqueKey: null,\n      x: 1,\n      y: 1\n    };\n\n    _this.handleDragStart = function () {\n      _this.setState({\n        isDragging: true\n      });\n\n      _this.props.selectSprite(_this.state.uniqueKey);\n    };\n\n    _this.handleDragEnd = function () {\n      _this.setState({\n        isDragging: false\n      });\n    };\n\n    _this.handleStroke = function () {\n      if (_this.props.djMode) {\n        return false;\n      } else {\n        return _this.props.selectedSprite.uniqueKey === _this.state.uniqueKey ? true : false;\n      }\n    };\n\n    _this.handleSelect = function () {\n      if (!_this.props.djMode) {\n        _this.props.selectSprite(_this.state.uniqueKey);\n      } else {\n        var playSprite = _this.props.canvasSprites.find(function (sprite) {\n          return sprite.uniqueKey === _this.state.uniqueKey;\n        });\n\n        if (document.getElementById(playSprite.uniqueKey)) {\n          var player = document.getElementById(playSprite.uniqueKey);\n          player.paused ? player.play() : player.pause();\n        } else {// let player = document.createElement(\"AUDIO\");\n          // player.id = playSprite.uniqueKey\n          // player.setAttribute(\"src\",playSprite.sound.url)\n          // player.autoplay = true\n          // player.loop = playSprite.sound.loop\n          // player.load()\n          // document.body.appendChild(player)\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Sprite, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var image = new window.Image();\n      image.src = this.props.selectedSprite.sprite.url;\n\n      image.onload = function () {\n        _this2.setState({\n          image: image,\n          uniqueKey: _this2.props.selectedSprite.uniqueKey\n        });\n      };\n    } // componentDidUpdate() {\n    // const image = new window.Image();\n    // image.src = this.props.selectedSprite.sprite.url\n    // image.onload = () => {\n    //   this.setState({\n    //     image: image\n    //   });\n    // };\n    // }\n\n  }, {\n    key: \"render\",\n    // onMouseOver={(e) => this.handleHover(e)}\n    // onMouseOut={(e) => this.handleHoverOut(e)}\n    value: function render() {\n      console.log('SPRITE PROPS', this.props);\n      console.log('SPRITE STATE', this.state);\n      var konvaImage = new Konva.Image({\n        image: this.state.image,\n        x: this.state.x,\n        y: this.state.y,\n        width: 60,\n        height: 60,\n        stroke: '#623149',\n        strokeWidth: 3,\n        onClick: this.handleSelect,\n        onDragEnd: this.handleDragEnd,\n        onDragStart: this.handleDragStart,\n        draggable: true,\n        strokeEnabled: this.handleStroke()\n      });\n      return React.createElement(Image, {\n        image: this.state.image,\n        x: this.state.x,\n        y: this.state.y,\n        width: 60,\n        height: 60,\n        stroke: \"#623149\",\n        strokeWidth: 3,\n        onClick: this.handleSelect,\n        onDragEnd: this.handleDragEnd,\n        onDragStart: this.handleDragStart,\n        draggable: true,\n        strokeEnabled: this.handleStroke(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Sprite;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite,\n    canvasSprites: state.sprite.canvasSprites,\n    djMode: state.sound.djMode\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//     selectSprite: (selectedSprite) => {\n//       dispatch(selectSprite(selectedSprite))\n//     }\n//   }\n// }\n\n\nexport default connect(mapStateToProps, actions)(Sprite);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Sprite.js"],"names":["React","Component","connect","Konva","Image","actions","Sprite","state","image","isDragging","uniqueKey","x","y","handleDragStart","setState","props","selectSprite","handleDragEnd","handleStroke","djMode","selectedSprite","handleSelect","playSprite","canvasSprites","find","sprite","document","getElementById","player","paused","play","pause","window","src","url","onload","console","log","konvaImage","width","height","stroke","strokeWidth","onClick","onDragEnd","onDragStart","draggable","strokeEnabled","mapStateToProps","sound"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../actions/actions';\n// import Konva from 'konva';\nimport { Konva, Image } from 'react-konva';\n// import { selectSprite } from '../actions/sprite'\nimport * as actions from '../actions/sprite'\n\nclass Sprite extends Component{\n  state = {\n    image: null,\n    isDragging: false,\n    // hover: false,\n    uniqueKey: null,\n    x: 1,\n    y: 1\n  }\n\n  componentDidMount() {\n    const image = new window.Image();\n    image.src = this.props.selectedSprite.sprite.url\n    image.onload = () => {\n      this.setState({\n        image: image,\n        uniqueKey: this.props.selectedSprite.uniqueKey\n      });\n    };\n  }\n\n  // componentDidUpdate() {\n    // const image = new window.Image();\n    // image.src = this.props.selectedSprite.sprite.url\n    // image.onload = () => {\n    //   this.setState({\n    //     image: image\n    //   });\n    // };\n  // }\n\n  handleDragStart = () => {\n    this.setState({\n      isDragging: true\n    })\n    this.props.selectSprite(this.state.uniqueKey)\n  }\n\n  handleDragEnd = () => {\n    this.setState({\n      isDragging: false\n    })\n  }\n\n  // handleHover = (e) => {\n  //   this.setState({\n  //     hover: true\n  //   })\n  //   // document.body.style.cursor = 'pointer'\n  // }\n  //\n  // handleHoverOut = (e) => {\n  //   this.setState({\n  //     hover: false\n  //   })\n  //   // document.body.style.cursor = 'default'\n  // }\n\n  handleStroke = () => {\n    if(this.props.djMode){\n      return false\n    }else{\n      return this.props.selectedSprite.uniqueKey === this.state.uniqueKey ? true : false\n    }\n  }\n\n  handleSelect = () => {\n    if(!this.props.djMode){\n      this.props.selectSprite(this.state.uniqueKey)\n    }else{\n      let playSprite = this.props.canvasSprites.find(sprite => sprite.uniqueKey === this.state.uniqueKey)\n      if(document.getElementById(playSprite.uniqueKey)){\n        let player = document.getElementById(playSprite.uniqueKey)\n        player.paused ? player.play() : player.pause()\n      }else{\n        // let player = document.createElement(\"AUDIO\");\n        // player.id = playSprite.uniqueKey\n        // player.setAttribute(\"src\",playSprite.sound.url)\n        // player.autoplay = true\n        // player.loop = playSprite.sound.loop\n        // player.load()\n        // document.body.appendChild(player)\n      }\n    }\n  }\n\n  // onMouseOver={(e) => this.handleHover(e)}\n  // onMouseOut={(e) => this.handleHoverOut(e)}\n  render(){\n    console.log('SPRITE PROPS', this.props)\n    console.log('SPRITE STATE', this.state)\n\n    const konvaImage = new Konva.Image({\n      image: this.state.image,\n      x:this.state.x,\n      y:this.state.y,\n      width:60,\n      height:60,\n      stroke:'#623149',\n      strokeWidth:3,\n      onClick:this.handleSelect,\n      onDragEnd:this.handleDragEnd,\n      onDragStart:this.handleDragStart,\n      draggable: true,\n      strokeEnabled:this.handleStroke(),\n\n    })\n\n    return(\n      <Image image={this.state.image}\n          x={this.state.x}\n          y={this.state.y}\n          width={60}\n          height={60}\n          stroke='#623149'\n          strokeWidth={3}\n          onClick={this.handleSelect}\n          onDragEnd={this.handleDragEnd}\n          onDragStart={this.handleDragStart}\n          draggable\n          strokeEnabled={this.handleStroke()}\n          />\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite,\n    canvasSprites: state.sprite.canvasSprites,\n    djMode: state.sound.djMode\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     selectSprite: (selectedSprite) => {\n//       dispatch(selectSprite(selectedSprite))\n//     }\n//   }\n// }\n\nexport default connect(mapStateToProps, actions)(Sprite);\n"]},"metadata":{},"sourceType":"module"}