{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/ControlBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Stage, Layer, Text, Image } from 'react-konva'; // import Sprite from './Sprite'\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ControlBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ControlBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ctrlImage: null,\n      imageStatus: null,\n      url: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ControlBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // const image = new window.Image();\n      // image.src = this.props.selectedSprite.sprite.url\n      // image.width = 100\n      // image.height = 100\n      // image.onload = () => {\n      //   this.setState({\n      //     ctrlImage: image\n      //   });\n      // };\n      if (this.props.selectedSprite !== {}) this.setState({\n        url: this.props.selectedSprite.sprite.url\n      });\n    }\n  }, {\n    key: \"handleImageLoaded\",\n    value: function handleImageLoaded() {\n      this.setState({\n        imageStatus: \"loaded\"\n      });\n    }\n  }, {\n    key: \"handleImageErrored\",\n    value: function handleImageErrored() {\n      this.setState({\n        imageStatus: \"failed to load\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const controlStyle =  {\n      //   // position: 'absolute',\n      //   backgroundColor: 'darkgray',\n      //   // bottom:'0px',\n      //   // left:'20%',\n      //   // border: '1px dotted'\n      //   alignSelf: 'flex-end'\n      // }\n      // width={600} height={120}\n      // return(\n      //   <div id=\"controlbar\">\n      //     Control Bar\n      //     <Stage className='control-canvas' width={50} height={50}>\n      //       <Layer>\n      //         <Text text='Control Bar'/>\n      //         <Image image={this.state.ctrlImage}\n      //             x={50}\n      //             y={10}\n      //             width={100}\n      //             height={100}/>\n      //       </Layer>\n      //     </Stage>\n      //   </div>\n      // )\n      return React.createElement(\"div\", {\n        id: \"controlbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.url,\n        onLoad: this.handleImageLoaded.bind(this),\n        onError: this.handleImageErrored.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ControlBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/ControlBar.js"],"names":["React","Component","connect","Stage","Layer","Text","Image","ControlBar","state","ctrlImage","imageStatus","url","props","selectedSprite","setState","sprite","handleImageLoaded","bind","handleImageErrored","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,aAA1C,C,CACA;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,WAAW,EAAE,IAFP;AAGNC,MAAAA,GAAG,EAAE;AAHC,K;;;;;;yCAMa;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAG,KAAKC,KAAL,CAAWC,cAAX,KAA8B,EAAjC,EACA,KAAKC,QAAL,CAAc;AACZH,QAAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,cAAX,CAA0BE,MAA1B,CAAiCJ;AAD1B,OAAd;AAGD;;;wCAEmB;AAClB,WAAKG,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;;;yCAEoB;AACnB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;;;6BAEO;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AACH,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GADb;AAEH,QAAA,MAAM,EAAE,KAAKK,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAFL;AAGH,QAAA,OAAO,EAAE,KAAKC,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CADF,CADF;AASD;;;;EAnEsBhB,S;;AAsEzB,SAASkB,eAAT,CAAyBX,KAAzB,EAAgC;AAC9B,SAAO;AACLK,IAAAA,cAAc,EAAEL,KAAK,CAACO,MAAN,CAAaF;AADxB,GAAP;AAGD;;AAED,SAASO,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO,EAAP;AAGD;;AAED,eAAenB,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cb,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Stage, Layer, Text, Image } from 'react-konva';\n// import Sprite from './Sprite'\n\nclass ControlBar extends Component{\n  state = {\n    ctrlImage: null,\n    imageStatus: null,\n    url: \"\"\n  }\n\n  componentDidUpdate() {\n    // const image = new window.Image();\n    // image.src = this.props.selectedSprite.sprite.url\n    // image.width = 100\n    // image.height = 100\n    // image.onload = () => {\n    //   this.setState({\n    //     ctrlImage: image\n    //   });\n    // };\n    if(this.props.selectedSprite !== {})\n    this.setState({\n      url: this.props.selectedSprite.sprite.url\n    })\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageStatus: \"loaded\" });\n  }\n\n  handleImageErrored() {\n    this.setState({ imageStatus: \"failed to load\" });\n  }\n\n  render(){\n    // const controlStyle =  {\n    //   // position: 'absolute',\n    //   backgroundColor: 'darkgray',\n    //   // bottom:'0px',\n    //   // left:'20%',\n    //   // border: '1px dotted'\n    //   alignSelf: 'flex-end'\n    // }\n\n    // width={600} height={120}\n\n    // return(\n    //   <div id=\"controlbar\">\n    //     Control Bar\n    //     <Stage className='control-canvas' width={50} height={50}>\n    //       <Layer>\n    //         <Text text='Control Bar'/>\n    //         <Image image={this.state.ctrlImage}\n    //             x={50}\n    //             y={10}\n    //             width={100}\n    //             height={100}/>\n    //       </Layer>\n    //     </Stage>\n    //   </div>\n    // )\n    return(\n      <div id='controlbar'>\n        <div><img\n          src={this.state.url}\n          onLoad={this.handleImageLoaded.bind(this)}\n          onError={this.handleImageErrored.bind(this)}\n        /></div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);\n"]},"metadata":{},"sourceType":"module"}