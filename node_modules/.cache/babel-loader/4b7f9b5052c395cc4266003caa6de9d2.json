{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/LoginForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import { bindActionCreators } from 'redux'\n\nimport { withRouter, Redirect } from 'react-router';\nimport { loginUser } from '../actions/user'; // import { Button, Form, Segment, Message } from 'semantic-ui-react'\n\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nvar styles = function styles(theme) {\n  return {\n    main: _defineProperty({\n      width: 'auto',\n      display: 'block',\n      // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3\n    }, theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2), {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }),\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: \"\".concat(theme.spacing.unit * 2, \"px \").concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 3, \"px\")\n    },\n    avatar: {\n      margin: theme.spacing.unit,\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing.unit\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n\n    _this.handleChange = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      return _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleLoginSubmit = function () {\n      //semantic forms preventDefault for you\n      _this.props.loginUser(_this.state.email, _this.state.password); //comes from mapDispatchToProps\n\n\n      _this.setState({\n        email: '',\n        password: ''\n      }); //reset form to initial state\n\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      console.log('%c PROPS IN LOGINFORM ', 'color: goldenrod', this.props); // return this.props.loggedIn ? (\n      //   <Redirect to=\"/home\" />\n      // ) : (\n      //   <Segment>\n      //     <Form\n      //       onSubmit={this.handleLoginSubmit}\n      //       size=\"mini\"\n      //       key=\"mini\"\n      //       loading={this.props.authenticatingUser}\n      //       error={this.props.failedLogin}\n      //     >\n      //       <Message error header={this.props.failedLogin ? this.props.error : null} />\n      //       <Form.Group widths=\"equal\">\n      //         <Form.Input\n      //           label=\"email\"\n      //           placeholder=\"email\"\n      //           name=\"email\"\n      //           onChange={this.handleChange}\n      //           value={this.state.email}\n      //         />\n      //         <Form.Input\n      //           type=\"password\"\n      //           label=\"password\"\n      //           placeholder=\"password\"\n      //           name=\"password\"\n      //           onChange={this.handleChange}\n      //           value={this.state.password}\n      //         />\n      //       </Form.Group>\n      //       <Button type=\"submit\">Login</Button>\n      //     </Form>\n      //   </Segment>\n      // )\n\n      return React.createElement(\"main\", {\n        className: classes.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(LockIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"form\", {\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Input, {\n        id: \"email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        name: \"password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          value: \"remember\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }),\n        label: \"Remember me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Sign in\"))));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired\n}; // const mapStateToProps = (reduxStoreState) => {\n//   return {\n//     authenticatingUser: reduxStoreState.usersReducer.authenticatingUser,\n//     failedLogin: reduxStoreState.usersReducer.failedLogin,\n//     error: reduxStoreState.usersReducer.error,\n//     loggedIn: reduxStoreState.usersReducer.loggedIn\n//   }\n// }\n// which pieces of the reduxStoreState does this component care about????\n// const mapStateToProps = ({usersReducer: { authenticatingUser, failedLogin, error, loggedIn } }) => ({\n//   authenticatingUser,\n//   failedLogin,\n//   error,\n//   loggedIn\n// })\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authenticatingUser: state.user.authenticatingUser,\n    failedLogin: state.user.failedLogin,\n    error: state.user.error,\n    loggedIn: state.user.loggedIn\n  };\n}; // gives my component props (callback fns) that allow it to dispatch (SEND) actions to redux. these actions are then handled by my reducers\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     loginUser: (email, password) => dispatch(loginUser(email, password))\n//   }\n// }\n// const connectedToReduxHOC = connect(mapStateToProps, mapDispatchToProps)\n// const connectedToReduxLoginForm = connectedToReduxHOC(LoginForm)\n// const connectedToReduxHOCWithRouterLoginForm = withRouter(connectedToReduxLoginForm)\n//\n// export default connectedToReduxHOCWithRouterLoginForm\n// export default withRouter(connect(mapStateToProps, { loginUser })(LoginForm))\n\n\nvar connectedToReduxHOC = connect(mapStateToProps, userActions);\nvar connectedMenu = connectedToReduxHOC(LoginForm);\nvar withStylesMenu = withStyles(styles)(connectedMenu);\nexport default withStylesMenu;","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/LoginForm.js"],"names":["React","connect","withRouter","Redirect","loginUser","PropTypes","Avatar","Button","CssBaseline","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockIcon","Paper","Typography","withStyles","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","margin","backgroundColor","palette","secondary","form","submit","LoginForm","state","email","password","handleChange","e","name","value","setState","handleLoginSubmit","props","classes","console","log","Component","propTypes","object","isRequired","mapStateToProps","authenticatingUser","user","failedLogin","error","loggedIn","connectedToReduxHOC","userActions","connectedMenu","withStylesMenu"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n// import { bindActionCreators } from 'redux'\nimport { withRouter, Redirect } from 'react-router'\nimport { loginUser } from '../actions/user'\n// import { Button, Form, Segment, Message } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nclass LoginForm extends React.Component {\n  state = { email: '', password: '' }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  // handleChange = (e, semanticInputData) => {\n  //   // semanticInputData.name -> 'email'\n  //   this.setState({ [semanticInputData.name]: semanticInputData.value })\n  // }\n\n  handleLoginSubmit = () => { //semantic forms preventDefault for you\n    this.props.loginUser(this.state.email, this.state.password) //comes from mapDispatchToProps\n    this.setState({ email: '', password: '' }) //reset form to initial state\n  }\n\n  render() {\n    const { classes } = this.props;\n    console.log('%c PROPS IN LOGINFORM ', 'color: goldenrod', this.props)\n    // return this.props.loggedIn ? (\n    //   <Redirect to=\"/home\" />\n    // ) : (\n    //   <Segment>\n    //     <Form\n    //       onSubmit={this.handleLoginSubmit}\n    //       size=\"mini\"\n    //       key=\"mini\"\n    //       loading={this.props.authenticatingUser}\n    //       error={this.props.failedLogin}\n    //     >\n    //       <Message error header={this.props.failedLogin ? this.props.error : null} />\n    //       <Form.Group widths=\"equal\">\n    //         <Form.Input\n    //           label=\"email\"\n    //           placeholder=\"email\"\n    //           name=\"email\"\n    //           onChange={this.handleChange}\n    //           value={this.state.email}\n    //         />\n    //         <Form.Input\n    //           type=\"password\"\n    //           label=\"password\"\n    //           placeholder=\"password\"\n    //           name=\"password\"\n    //           onChange={this.handleChange}\n    //           value={this.state.password}\n    //         />\n    //       </Form.Group>\n    //       <Button type=\"submit\">Login</Button>\n    //     </Form>\n    //   </Segment>\n    // )\n\n    return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign in\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  )\n  }\n}\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\n// const mapStateToProps = (reduxStoreState) => {\n//   return {\n//     authenticatingUser: reduxStoreState.usersReducer.authenticatingUser,\n//     failedLogin: reduxStoreState.usersReducer.failedLogin,\n//     error: reduxStoreState.usersReducer.error,\n//     loggedIn: reduxStoreState.usersReducer.loggedIn\n//   }\n// }\n\n// which pieces of the reduxStoreState does this component care about????\n// const mapStateToProps = ({usersReducer: { authenticatingUser, failedLogin, error, loggedIn } }) => ({\n//   authenticatingUser,\n//   failedLogin,\n//   error,\n//   loggedIn\n// })\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticatingUser: state.user.authenticatingUser,\n    failedLogin: state.user.failedLogin,\n    error: state.user.error,\n    loggedIn: state.user.loggedIn\n  }\n}\n\n// gives my component props (callback fns) that allow it to dispatch (SEND) actions to redux. these actions are then handled by my reducers\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     loginUser: (email, password) => dispatch(loginUser(email, password))\n//   }\n// }\n\n// const connectedToReduxHOC = connect(mapStateToProps, mapDispatchToProps)\n// const connectedToReduxLoginForm = connectedToReduxHOC(LoginForm)\n// const connectedToReduxHOCWithRouterLoginForm = withRouter(connectedToReduxLoginForm)\n//\n// export default connectedToReduxHOCWithRouterLoginForm\n\n\n// export default withRouter(connect(mapStateToProps, { loginUser })(LoginForm))\n\nconst connectedToReduxHOC = connect(mapStateToProps, userActions)\nconst connectedMenu = connectedToReduxHOC(LoginForm)\nconst withStylesMenu = withStyles(styles)(connectedMenu)\nexport default withStylesMenu\n"]},"metadata":{},"sourceType":"module"}