{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SpriteBar.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'; // import Konva from 'konva';\n// import { Stage, Layer, Image, Text } from 'react-konva';\n// import { addSprite } from '../actions/sprite'\n\nimport * as actions from '../actions/sprite';\nimport UUID from 'uuid';\nimport { API_ENDPOINT } from '../adapters/index';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; // import {List, ListItem} from 'material-ui/List';\n// import {Paper} from 'material-ui/Paper'\n\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    grow: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20\n    },\n    title: _defineProperty({\n      display: 'none'\n    }, theme.breakpoints.up('sm'), {\n      display: 'block'\n    }),\n    search: _defineProperty({\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }),\n    searchIcon: {\n      width: theme.spacing.unit * 9,\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit',\n      width: '100%'\n    },\n    inputInput: _defineProperty({\n      paddingTop: theme.spacing.unit,\n      paddingRight: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      paddingLeft: theme.spacing.unit * 10,\n      transition: theme.transitions.create('width'),\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }),\n    formControl: {\n      // margin: theme.spacing.unit,\n      // minWidth: 120,\n      margin: 0,\n      fullWidth: true,\n      backgroundColor: '#9ee',\n      display: 'flex',\n      wrap: 'nowrap'\n    }\n  };\n};\n\nvar SpriteBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpriteBar, _Component);\n\n  function SpriteBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SpriteBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SpriteBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedSpriteBar: null\n    };\n\n    _this.selectSprite = function (sprite) {\n      _this.setState({\n        selectedSpriteBar: sprite\n      });\n    };\n\n    _this.sprites = function () {\n      return _this.props.sprites.map(function (sprite) {\n        return React.createElement(Fragment, {\n          key: sprite.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          style: _this.state.selectedSpriteBar === sprite ? {\n            width: '50px',\n            height: '50px',\n            border: \"5px solid red\"\n          } : {\n            width: '50px',\n            height: '50px'\n          },\n          src: sprite.url,\n          onClick: function onClick() {\n            return _this.selectSprite(sprite);\n          },\n          alt: sprite.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }));\n      });\n    };\n\n    _this.addSpriteMethod = function () {\n      var uniqueKey = UUID(); // if(this.props.selectedSprite){\n      //   this.props.addSprite({...this.state.selectedSprite,uniqueKey:uniqueKey})\n      //   this.setState({selectedSpriteBar: null})\n      // }\n\n      _this.props.addSprite({\n        sprite: _this.state.selectedSpriteBar,\n        uniqueKey: uniqueKey\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SpriteBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(API_ENDPOINT, \"/api/v1/sprites\")).then(function (r) {\n        return r.json();\n      }).then(function (sprites) {\n        _this2.props.setSprites(sprites);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const divStyle = {\n      //   position: 'absolute',\n      //   width: '150px',\n      //   height: '100vh',\n      //   left: '0',\n      //   top: '10',\n      //   backgroundColor: '#EEEEEE',\n      //   borderRight: '1px dotted'}\n      // const spriteBarStyle = {\n      //   position: 'absolute',\n      //   // width: '150px',\n      //   // height: '100vh',\n      //   left: '0',\n      //   top: '10',\n      //   backgroundColor: '#EEEEEE',\n      //   borderRight: '1px dotted'}\n      // return(\n      //   <div style={divStyle} onDragOver={(e)=>this.onDragOver(e)}\n      //     onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\n      //     <h1>Sprite Bar</h1>\n      //     {this.sprites()}\n      //     <button onClick={this.props.addSprite}>Add Sprite</button>\n      //   </div>\n      // )\n      // <div className=\"bar spritebar\">\n      return React.createElement(\"div\", {\n        id: \"spritebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sprite-navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: styles.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"age-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Images\"), React.createElement(Select, {\n        value: this.state.age,\n        onChange: this.handleChange,\n        inputProps: {\n          name: 'age',\n          id: 'age-simple'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"None\")), React.createElement(MenuItem, {\n        value: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Ten\"), React.createElement(MenuItem, {\n        value: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Twenty\"), React.createElement(MenuItem, {\n        value: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Thirty\")))), React.createElement(\"div\", {\n        id: \"scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.sprites()), React.createElement(MuiThemeProvider, {\n        theme: testtheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.addSpriteMethod,\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Primary\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })); // return(\n      //   <div id='spritebar'>\n      //\n      //   </div>\n      // )\n    }\n  }]);\n\n  return SpriteBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites,\n    selectedSprite: state.sprite.selectedSprite\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//     addSprite: (selectedSprite) => {\n//       dispatch(addSprite(selectedSprite))\n//     }\n//   }\n// }\n\n\nexport default connect(mapStateToProps, actions)(SpriteBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SpriteBar.js"],"names":["React","Component","Fragment","connect","actions","UUID","API_ENDPOINT","PropTypes","AppBar","Toolbar","IconButton","Typography","InputBase","fade","withStyles","MenuIcon","SearchIcon","Input","OutlinedInput","FilledInput","InputLabel","MenuItem","FormHelperText","FormControl","Select","Button","MuiThemeProvider","createMuiTheme","styles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","palette","common","white","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","formControl","margin","fullWidth","wrap","SpriteBar","state","selectedSpriteBar","selectSprite","sprite","setState","sprites","props","map","id","border","url","name","addSpriteMethod","uniqueKey","addSprite","fetch","then","r","json","setSprites","age","handleChange","testtheme","mapStateToProps","selectedSprite"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,IAAT,QAAqB,2CAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH,KADiB;AAIvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KAJiB;AAOvBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,UAAU,EAAE,CAAC,EADH;AAEVC,MAAAA,WAAW,EAAE;AAFH,KAPW;AAWvBC,IAAAA,KAAK;AACHC,MAAAA,OAAO,EAAE;AADN,OAEFT,KAAK,CAACU,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAFE,EAE2B;AAC5BF,MAAAA,OAAO,EAAE;AADmB,KAF3B,CAXkB;AAiBvBG,IAAAA,MAAM;AACJC,MAAAA,QAAQ,EAAE,UADN;AAEJC,MAAAA,YAAY,EAAEd,KAAK,CAACe,KAAN,CAAYD,YAFtB;AAGJE,MAAAA,eAAe,EAAEhC,IAAI,CAACgB,KAAK,CAACiB,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B,CAHjB;AAIJ,iBAAW;AACTH,QAAAA,eAAe,EAAEhC,IAAI,CAACgB,KAAK,CAACiB,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B;AADZ,OAJP;AAOJb,MAAAA,UAAU,EAAE,CAPR;AAQJJ,MAAAA,KAAK,EAAE;AARH,OASHF,KAAK,CAACU,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CATG,EAS0B;AAC5BL,MAAAA,UAAU,EAAEN,KAAK,CAACoB,OAAN,CAAcC,IADE;AAE5BnB,MAAAA,KAAK,EAAE;AAFqB,KAT1B,CAjBiB;AA+BvBoB,IAAAA,UAAU,EAAE;AACVpB,MAAAA,KAAK,EAAEF,KAAK,CAACoB,OAAN,CAAcC,IAAd,GAAqB,CADlB;AAEVE,MAAAA,MAAM,EAAE,MAFE;AAGVV,MAAAA,QAAQ,EAAE,UAHA;AAIVW,MAAAA,aAAa,EAAE,MAJL;AAKVf,MAAAA,OAAO,EAAE,MALC;AAMVgB,MAAAA,UAAU,EAAE,QANF;AAOVC,MAAAA,cAAc,EAAE;AAPN,KA/BW;AAwCvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,SADE;AAET1B,MAAAA,KAAK,EAAE;AAFE,KAxCY;AA4CvB2B,IAAAA,UAAU;AACRC,MAAAA,UAAU,EAAE9B,KAAK,CAACoB,OAAN,CAAcC,IADlB;AAERU,MAAAA,YAAY,EAAE/B,KAAK,CAACoB,OAAN,CAAcC,IAFpB;AAGRW,MAAAA,aAAa,EAAEhC,KAAK,CAACoB,OAAN,CAAcC,IAHrB;AAIRY,MAAAA,WAAW,EAAEjC,KAAK,CAACoB,OAAN,CAAcC,IAAd,GAAqB,EAJ1B;AAKRa,MAAAA,UAAU,EAAElC,KAAK,CAACmC,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CALJ;AAMRlC,MAAAA,KAAK,EAAE;AANC,OAOPF,KAAK,CAACU,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAPO,EAOsB;AAC5BT,MAAAA,KAAK,EAAE,GADqB;AAE5B,iBAAW;AACTA,QAAAA,KAAK,EAAE;AADE;AAFiB,KAPtB,CA5Ca;AA0DvBmC,IAAAA,WAAW,EAAE;AACX;AACA;AACAC,MAAAA,MAAM,EAAE,CAHG;AAIXC,MAAAA,SAAS,EAAE,IAJA;AAKXvB,MAAAA,eAAe,EAAE,MALN;AAMXP,MAAAA,OAAO,EAAE,MANE;AAOX+B,MAAAA,IAAI,EAAE;AAPK;AA1DU,GAAL;AAAA,CAApB;;IAqEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,iBAAiB,EAAE;AADb,K;;UAYRC,Y,GAAe,UAACC,MAAD,EAAY;AACzB,YAAKC,QAAL,CAAc;AACZH,QAAAA,iBAAiB,EAAEE;AADP,OAAd;AAGD,K;;UAEDE,O,GAAU,YAAM;AACd,aAAO,MAAKC,KAAL,CAAWD,OAAX,CAAmBE,GAAnB,CAAuB,UAAAJ,MAAM,EAAI;AACtC,eACE,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,MAAM,CAACK,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,KAAK,EAAE,MAAKR,KAAL,CAAWC,iBAAX,KAAiCE,MAAjC,GAA0C;AAAC3C,YAAAA,KAAK,EAAC,MAAP;AAAeqB,YAAAA,MAAM,EAAC,MAAtB;AAA8B4B,YAAAA,MAAM,EAAC;AAArC,WAA1C,GAAkG;AAACjD,YAAAA,KAAK,EAAC,MAAP;AAAeqB,YAAAA,MAAM,EAAC;AAAtB,WAA9G;AAA6I,UAAA,GAAG,EAAEsB,MAAM,CAACO,GAAzJ;AAA8J,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKR,YAAL,CAAkBC,MAAlB,CAAN;AAAA,WAAvK;AAAwM,UAAA,GAAG,EAAEA,MAAM,CAACQ,IAApN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAC8N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD9N,CADF;AAKC,OANI,CAAP;AAOC,K;;UAuBHC,e,GAAkB,YAAM;AACtB,UAAMC,SAAS,GAAG/E,IAAI,EAAtB,CADsB,CAEtB;AACA;AACA;AACA;;AACA,YAAKwE,KAAL,CAAWQ,SAAX,CAAqB;AAACX,QAAAA,MAAM,EAAC,MAAKH,KAAL,CAAWC,iBAAnB;AAAsCY,QAAAA,SAAS,EAAEA;AAAjD,OAArB;AACD,K;;;;;;;wCApDkB;AAAA;;AACjBE,MAAAA,KAAK,WAAIhF,YAAJ,qBAAL,CACGiF,IADH,CACQ,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OADT,EAEGF,IAFH,CAEQ,UAAAX,OAAO,EAAI;AACf,QAAA,MAAI,CAACC,KAAL,CAAWa,UAAX,CAAsBd,OAAtB;AACD,OAJH;AAKD;;;6BAgDO;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;AACN,aAEE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEhD,MAAM,CAACsC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWoB,GADpB;AAEE,QAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,QAAA,UAAU,EAAE;AACVV,UAAAA,IAAI,EAAE,KADI;AAEVH,UAAAA,EAAE,EAAE;AAFM,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CARF,EAWE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,EAYE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,EAaE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CAFA,CADF,CADF,EAqBE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKH,OAAL,EADD,CArBF,EAwBE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEiB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKV,eAAtB;AAAuC,QAAA,OAAO,EAAC,WAA/C;AAA2D,QAAA,KAAK,EAAC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CAxBF,EA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BA,CAFF,CA7BM,CA+DN;AACA;AACA;AACA;AACA;AACD;;;;EA/HqBlF,S;;AAkIxB,SAAS6F,eAAT,CAAyBvB,KAAzB,EAAgC;AAC9B,SAAO;AACLK,IAAAA,OAAO,EAAEL,KAAK,CAACG,MAAN,CAAaE,OADjB;AAELmB,IAAAA,cAAc,EAAExB,KAAK,CAACG,MAAN,CAAaqB;AAFxB,GAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe5F,OAAO,CAAC2F,eAAD,EAAkB1F,OAAlB,CAAP,CAAkCkE,SAAlC,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\n// import Konva from 'konva';\n// import { Stage, Layer, Image, Text } from 'react-konva';\n// import { addSprite } from '../actions/sprite'\nimport * as actions from '../actions/sprite'\nimport UUID from 'uuid'\nimport { API_ENDPOINT } from '../adapters/index'\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n// import {List, ListItem} from 'material-ui/List';\n// import {Paper} from 'material-ui/Paper'\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n  formControl: {\n    // margin: theme.spacing.unit,\n    // minWidth: 120,\n    margin: 0,\n    fullWidth: true,\n    backgroundColor: '#9ee',\n    display: 'flex',\n    wrap: 'nowrap'\n  }\n});\n\nclass SpriteBar extends Component{\n  state = {\n    selectedSpriteBar: null\n  }\n\n  componentDidMount(){\n    fetch(`${API_ENDPOINT}/api/v1/sprites`)\n      .then(r => r.json())\n      .then(sprites => {\n        this.props.setSprites(sprites)\n      })\n  }\n\n  selectSprite = (sprite) => {\n    this.setState({\n      selectedSpriteBar: sprite\n    })\n  }\n\n  sprites = () => {\n    return this.props.sprites.map(sprite => {\n      return (\n        <Fragment key={sprite.id}>\n          <img style={this.state.selectedSpriteBar === sprite ? {width:'50px', height:'50px', border:\"5px solid red\"} : {width:'50px', height:'50px'}} src={sprite.url} onClick={() => this.selectSprite(sprite)} alt={sprite.name} /><br/>\n        </Fragment>\n      )\n      })\n    }\n\n    // sprites = () => {\n    //   let y = -50\n    //   const imgStyle={width:'100px', height:'100px'}\n    //   return this.props.sprites.map(sprite => {\n    //     const image = new window.Image();\n    //     image.src = sprite.url\n    //     y += 110\n    //     return <Image key={sprite.id}\n    //             image={image}\n    //             onClick={() => this.selectSprite(sprite)}\n    //             x={30}\n    //             y={y}\n    //             width={100}\n    //             height={100}\n    //             stroke='red'\n    //             strokeWidth={5}\n    //             strokeEnabled={this.state.selectedSpriteBar == sprite ? true : false}/>\n    //     })\n    //   }\n\n\n  addSpriteMethod = () => {\n    const uniqueKey = UUID()\n    // if(this.props.selectedSprite){\n    //   this.props.addSprite({...this.state.selectedSprite,uniqueKey:uniqueKey})\n    //   this.setState({selectedSpriteBar: null})\n    // }\n    this.props.addSprite({sprite:this.state.selectedSpriteBar, uniqueKey: uniqueKey})\n  }\n\n  render(){\n    // const divStyle = {\n    //   position: 'absolute',\n    //   width: '150px',\n    //   height: '100vh',\n    //   left: '0',\n    //   top: '10',\n    //   backgroundColor: '#EEEEEE',\n    //   borderRight: '1px dotted'}\n\n    // const spriteBarStyle = {\n    //   position: 'absolute',\n    //   // width: '150px',\n    //   // height: '100vh',\n    //   left: '0',\n    //   top: '10',\n    //   backgroundColor: '#EEEEEE',\n    //   borderRight: '1px dotted'}\n\n\n    // return(\n    //   <div style={divStyle} onDragOver={(e)=>this.onDragOver(e)}\n    //     onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\n    //     <h1>Sprite Bar</h1>\n    //     {this.sprites()}\n    //     <button onClick={this.props.addSprite}>Add Sprite</button>\n    //   </div>\n    // )\n          // <div className=\"bar spritebar\">\n    return(\n\n      <div id=\"spritebar\">\n        <div className=\"sprite-navbar\">\n          <FormControl className={styles.formControl}>\n          <InputLabel htmlFor=\"age-simple\">Images</InputLabel>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            inputProps={{\n              name: 'age',\n              id: 'age-simple',\n            }}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        </div>\n        <div id='scroll'>\n        {this.sprites()}\n        </div>\n        <MuiThemeProvider theme={testtheme}>\n        <Button onClick={this.addSpriteMethod} variant=\"contained\" color=\"primary\">\n        Primary\n      </Button>\n      </MuiThemeProvider>\n      <br/>\n      </div>\n    )\n    // return(\n    //   <div id='spritebar'>\n    //\n    //   </div>\n    // )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites,\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     addSprite: (selectedSprite) => {\n//       dispatch(addSprite(selectedSprite))\n//     }\n//   }\n// }\n\nexport default connect(mapStateToProps, actions)(SpriteBar);\n"]},"metadata":{},"sourceType":"module"}