{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Sprite.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../actions/actions';\n// import Konva from 'konva';\n\nimport { Image } from 'react-konva'; // import { selectSprite } from '../actions/sprite'\n\nimport * as actions from '../actions/sprite';\n\nvar Sprite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sprite, _Component);\n\n  function Sprite() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sprite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sprite)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image: null,\n      isDragging: false,\n      // hover: false,\n      uniqueKey: null\n    };\n\n    _this.handleDragStart = function () {\n      _this.setState({\n        isDragging: true\n      });\n\n      _this.props.selectSprite(_this.state.uniqueKey);\n    };\n\n    _this.handleDragEnd = function () {\n      _this.setState({\n        isDragging: false\n      });\n    };\n\n    _this.handleStroke = function () {\n      if (_this.props.djMode) {\n        return false;\n      } else {\n        return _this.props.selectedSprite.uniqueKey === _this.state.uniqueKey ? true : false;\n      }\n    };\n\n    _this.handleSelect = function () {\n      if (!_this.props.djMode) {\n        _this.props.selectSprite(_this.state.uniqueKey);\n      } else {\n        var playSprite = _this.props.canvasSprites.find(function (sprite) {\n          return sprite.uniqueKey === _this.state.uniqueKey;\n        });\n\n        if (document.getElementById(playSprite.uniqueKey)) {\n          var player = document.getElementById(playSprite.uniqueKey);\n          debugger;\n          player.paused ? player.play() : player.pause();\n        } else {\n          var _player = document.createElement(\"AUDIO\");\n\n          _player.id = playSprite.uniqueKey;\n\n          _player.setAttribute(\"src\", playSprite.sound.url);\n\n          _player.autoplay = true;\n\n          _player.load();\n\n          document.body.appendChild(_player);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Sprite, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var image = new window.Image();\n      image.src = this.props.selectedSprite.sprite.url;\n\n      image.onload = function () {\n        _this2.setState({\n          image: image,\n          uniqueKey: _this2.props.selectedSprite.uniqueKey\n        });\n      };\n    } // componentDidUpdate() {\n    // const image = new window.Image();\n    // image.src = this.props.selectedSprite.sprite.url\n    // image.onload = () => {\n    //   this.setState({\n    //     image: image\n    //   });\n    // };\n    // }\n\n  }, {\n    key: \"render\",\n    // onMouseOver={(e) => this.handleHover(e)}\n    // onMouseOut={(e) => this.handleHoverOut(e)}\n    value: function render() {\n      console.log('SPRITE PROPS', this.props);\n      console.log('SPRITE STATE', this.state);\n      return React.createElement(Image, {\n        image: this.state.image,\n        x: 1,\n        y: 1,\n        width: 60,\n        height: 60,\n        stroke: \"#623149\",\n        strokeWidth: 3,\n        onClick: this.handleSelect,\n        onDragEnd: this.handleDragEnd,\n        onDragStart: this.handleDragStart,\n        draggable: true,\n        strokeEnabled: this.handleStroke(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Sprite;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite,\n    canvasSprites: state.sprite.canvasSprites,\n    djMode: state.sound.djMode\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//     selectSprite: (selectedSprite) => {\n//       dispatch(selectSprite(selectedSprite))\n//     }\n//   }\n// }\n\n\nexport default connect(mapStateToProps, actions)(Sprite);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Sprite.js"],"names":["React","Component","connect","Image","actions","Sprite","state","image","isDragging","uniqueKey","handleDragStart","setState","props","selectSprite","handleDragEnd","handleStroke","djMode","selectedSprite","handleSelect","playSprite","canvasSprites","find","sprite","document","getElementById","player","paused","play","pause","createElement","id","setAttribute","sound","url","autoplay","load","body","appendChild","window","src","onload","console","log","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AACA,SAASC,KAAT,QAAsB,aAAtB,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,UAAU,EAAE,KAFN;AAGN;AACAC,MAAAA,SAAS,EAAE;AAJL,K;;UA4BRC,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAE;AADA,OAAd;;AAGA,YAAKI,KAAL,CAAWC,YAAX,CAAwB,MAAKP,KAAL,CAAWG,SAAnC;AACD,K;;UAEDK,a,GAAgB,YAAM;AACpB,YAAKH,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;UAgBDO,Y,GAAe,YAAM;AACnB,UAAG,MAAKH,KAAL,CAAWI,MAAd,EAAqB;AACnB,eAAO,KAAP;AACD,OAFD,MAEK;AACH,eAAO,MAAKJ,KAAL,CAAWK,cAAX,CAA0BR,SAA1B,KAAwC,MAAKH,KAAL,CAAWG,SAAnD,GAA+D,IAA/D,GAAsE,KAA7E;AACD;AACF,K;;UAEDS,Y,GAAe,YAAM;AACnB,UAAG,CAAC,MAAKN,KAAL,CAAWI,MAAf,EAAsB;AACpB,cAAKJ,KAAL,CAAWC,YAAX,CAAwB,MAAKP,KAAL,CAAWG,SAAnC;AACD,OAFD,MAEK;AACH,YAAIU,UAAU,GAAG,MAAKP,KAAL,CAAWQ,aAAX,CAAyBC,IAAzB,CAA8B,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACb,SAAP,KAAqB,MAAKH,KAAL,CAAWG,SAApC;AAAA,SAApC,CAAjB;;AACA,YAAGc,QAAQ,CAACC,cAAT,CAAwBL,UAAU,CAACV,SAAnC,CAAH,EAAiD;AAC/C,cAAIgB,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwBL,UAAU,CAACV,SAAnC,CAAb;AACA;AACAgB,UAAAA,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACE,IAAP,EAAhB,GAAgCF,MAAM,CAACG,KAAP,EAAhC;AACD,SAJD,MAIK;AACH,cAAIH,OAAM,GAAGF,QAAQ,CAACM,aAAT,CAAuB,OAAvB,CAAb;;AACAJ,UAAAA,OAAM,CAACK,EAAP,GAAYX,UAAU,CAACV,SAAvB;;AACAgB,UAAAA,OAAM,CAACM,YAAP,CAAoB,KAApB,EAA0BZ,UAAU,CAACa,KAAX,CAAiBC,GAA3C;;AACAR,UAAAA,OAAM,CAACS,QAAP,GAAkB,IAAlB;;AACAT,UAAAA,OAAM,CAACU,IAAP;;AACAZ,UAAAA,QAAQ,CAACa,IAAT,CAAcC,WAAd,CAA0BZ,OAA1B;AACD;AACF;AACF,K;;;;;;;wCA1EmB;AAAA;;AAClB,UAAMlB,KAAK,GAAG,IAAI+B,MAAM,CAACnC,KAAX,EAAd;AACAI,MAAAA,KAAK,CAACgC,GAAN,GAAY,KAAK3B,KAAL,CAAWK,cAAX,CAA0BK,MAA1B,CAAiCW,GAA7C;;AACA1B,MAAAA,KAAK,CAACiC,MAAN,GAAe,YAAM;AACnB,QAAA,MAAI,CAAC7B,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAEA,KADK;AAEZE,UAAAA,SAAS,EAAE,MAAI,CAACG,KAAL,CAAWK,cAAX,CAA0BR;AAFzB,SAAd;AAID,OALD;AAMD,K,CAED;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;;;AAyDA;AACA;6BACQ;AACNgC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAK9B,KAAjC;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKpC,KAAjC;AACA,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKA,KAAL,CAAWC,KAAzB;AACI,QAAA,CAAC,EAAE,CADP;AAEI,QAAA,CAAC,EAAE,CAFP;AAGI,QAAA,KAAK,EAAE,EAHX;AAII,QAAA,MAAM,EAAE,EAJZ;AAKI,QAAA,MAAM,EAAC,SALX;AAMI,QAAA,WAAW,EAAE,CANjB;AAOI,QAAA,OAAO,EAAE,KAAKW,YAPlB;AAQI,QAAA,SAAS,EAAE,KAAKJ,aARpB;AASI,QAAA,WAAW,EAAE,KAAKJ,eATtB;AAUI,QAAA,SAAS,MAVb;AAWI,QAAA,aAAa,EAAE,KAAKK,YAAL,EAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAeD;;;;EAxGkBd,S;;AA2GrB,SAAS0C,eAAT,CAAyBrC,KAAzB,EAAgC;AAC9B,SAAO;AACLW,IAAAA,cAAc,EAAEX,KAAK,CAACgB,MAAN,CAAaL,cADxB;AAELG,IAAAA,aAAa,EAAEd,KAAK,CAACgB,MAAN,CAAaF,aAFvB;AAGLJ,IAAAA,MAAM,EAAEV,KAAK,CAAC0B,KAAN,CAAYhB;AAHf,GAAP;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAed,OAAO,CAACyC,eAAD,EAAkBvC,OAAlB,CAAP,CAAkCC,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../actions/actions';\n// import Konva from 'konva';\nimport { Image } from 'react-konva';\n// import { selectSprite } from '../actions/sprite'\nimport * as actions from '../actions/sprite'\n\nclass Sprite extends Component{\n  state = {\n    image: null,\n    isDragging: false,\n    // hover: false,\n    uniqueKey: null\n  }\n\n  componentDidMount() {\n    const image = new window.Image();\n    image.src = this.props.selectedSprite.sprite.url\n    image.onload = () => {\n      this.setState({\n        image: image,\n        uniqueKey: this.props.selectedSprite.uniqueKey\n      });\n    };\n  }\n\n  // componentDidUpdate() {\n    // const image = new window.Image();\n    // image.src = this.props.selectedSprite.sprite.url\n    // image.onload = () => {\n    //   this.setState({\n    //     image: image\n    //   });\n    // };\n  // }\n\n  handleDragStart = () => {\n    this.setState({\n      isDragging: true\n    })\n    this.props.selectSprite(this.state.uniqueKey)\n  }\n\n  handleDragEnd = () => {\n    this.setState({\n      isDragging: false\n    })\n  }\n\n  // handleHover = (e) => {\n  //   this.setState({\n  //     hover: true\n  //   })\n  //   // document.body.style.cursor = 'pointer'\n  // }\n  //\n  // handleHoverOut = (e) => {\n  //   this.setState({\n  //     hover: false\n  //   })\n  //   // document.body.style.cursor = 'default'\n  // }\n\n  handleStroke = () => {\n    if(this.props.djMode){\n      return false\n    }else{\n      return this.props.selectedSprite.uniqueKey === this.state.uniqueKey ? true : false\n    }\n  }\n\n  handleSelect = () => {\n    if(!this.props.djMode){\n      this.props.selectSprite(this.state.uniqueKey)\n    }else{\n      let playSprite = this.props.canvasSprites.find(sprite => sprite.uniqueKey === this.state.uniqueKey)\n      if(document.getElementById(playSprite.uniqueKey)){\n        let player = document.getElementById(playSprite.uniqueKey)\n        debugger\n        player.paused ? player.play() : player.pause()\n      }else{\n        let player = document.createElement(\"AUDIO\");\n        player.id = playSprite.uniqueKey\n        player.setAttribute(\"src\",playSprite.sound.url)\n        player.autoplay = true\n        player.load()\n        document.body.appendChild(player)\n      }\n    }\n  }\n\n  // onMouseOver={(e) => this.handleHover(e)}\n  // onMouseOut={(e) => this.handleHoverOut(e)}\n  render(){\n    console.log('SPRITE PROPS', this.props)\n    console.log('SPRITE STATE', this.state)\n    return(\n      <Image image={this.state.image}\n          x={1}\n          y={1}\n          width={60}\n          height={60}\n          stroke='#623149'\n          strokeWidth={3}\n          onClick={this.handleSelect}\n          onDragEnd={this.handleDragEnd}\n          onDragStart={this.handleDragStart}\n          draggable\n          strokeEnabled={this.handleStroke()}\n          />\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite,\n    canvasSprites: state.sprite.canvasSprites,\n    djMode: state.sound.djMode\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     selectSprite: (selectedSprite) => {\n//       dispatch(selectSprite(selectedSprite))\n//     }\n//   }\n// }\n\nexport default connect(mapStateToProps, actions)(Sprite);\n"]},"metadata":{},"sourceType":"module"}