{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Video.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../redux/actions';\n// import { changeSprite } from '../actions/sprite'\n// import Konva from 'konva';\n\nimport { Stage, Layer } from 'react-konva';\nimport SpriteList from './SpriteList';\nimport ControlBar from './ControlBar';\nimport UploadSound from './UploadSound';\nimport { DiffCamEngine } from './diff-cam-engine'; // import * from './adapter-1.0.7'\n\nvar Video =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Video, _Component);\n\n  function Video() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Video)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      x: 0,\n      y: 0,\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0,\n      captureImageData: null,\n      captureCanvas: null,\n      difCanvas: null,\n      video: null,\n      captureInterval: null\n    };\n\n    _this.capture = function () {\n      // let video = this.refs.video\n      // this.setState({\n      //   video: video\n      // })\n      // save a full-sized copy of capture\n      captureContext.drawImage(video, 0, 0, captureWidth, captureHeight);\n      var captureImageData = captureContext.getImageData(0, 0, captureWidth, captureHeight);\n      test.drawImage(video, 0, 0, captureWidth, captureHeight); // diff current capture over previous capture, leftover from last time\n\n      diffContext.globalCompositeOperation = 'difference';\n      diffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n      var diffImageData = diffContext.getImageData(0, 0, diffWidth, diffHeight);\n      console.log(diffImageData);\n      test.drawImage(video, 0, 0, diffWidth, diffHeight);\n      var zimage = document.getElementById('source');\n      test.drawImage(zimage, 33, 71, 104, 124, 21, 20, 87, 104);\n\n      if (isReadyToDiff) {\n        var diff = processDiff(diffImageData);\n        motionContext.putImageData(diffImageData, 0, 0);\n\n        if (diff.motionBox) {\n          motionContext.strokeStyle = '#fff';\n          motionContext.strokeRect(diff.motionBox.x.min + 0.5, diff.motionBox.y.min + 0.5, diff.motionBox.x.max - diff.motionBox.x.min, diff.motionBox.y.max - diff.motionBox.y.min);\n        }\n\n        captureCallback({\n          imageData: captureImageData,\n          score: diff.score,\n          hasMotion: diff.score >= scoreThreshold,\n          motionBox: diff.motionBox,\n          motionPixels: diff.motionPixels,\n          getURL: function getURL() {\n            return getCaptureUrl(this.imageData);\n          },\n          checkMotionPixel: function (_checkMotionPixel) {\n            function checkMotionPixel(_x, _x2) {\n              return _checkMotionPixel.apply(this, arguments);\n            }\n\n            checkMotionPixel.toString = function () {\n              return _checkMotionPixel.toString();\n            };\n\n            return checkMotionPixel;\n          }(function (x, y) {\n            return checkMotionPixel(this.motionPixels, x, y);\n          })\n        });\n      } // draw current capture normally over diff, ready for next time\n\n\n      diffContext.globalCompositeOperation = 'source-over';\n      diffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n      isReadyToDiff = true;\n    };\n\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var spriteCanvas = document.getElementsByClassName('konvajs-content')[0].getBoundingClientRect();\n      var captureCanvas = document.createElement('canvas');\n      captureCanvas.width = spriteCanvas.width;\n      captureCanvas.height = spriteCanvas.height;\n      var diffCanvas = document.createElement('canvas');\n      diffCanvas.width = spriteCanvas.width;\n      diffCanvas.height = spriteCanvas.height;\n      this.setState({\n        x: spriteCanvas.x,\n        y: spriteCanvas.y,\n        bottom: spriteCanvas.bottom,\n        height: spriteCanvas.height,\n        left: spriteCanvas.left,\n        right: spriteCanvas.right,\n        top: spriteCanvas.top,\n        width: spriteCanvas.width,\n        captureCanvas: captureCanvas,\n        diffCanvas: diffCanvas,\n        video: this.refs.video\n      });\n      var canvas = this.refs.test;\n      var ctx = canvas.getContext('2d');\n      this.props.canvasSprites.map(function (sprite) {\n        var image = new window.Image();\n        image.src = sprite.sprite.url;\n\n        image.onload = function () {\n          ctx.drawImage(image, sprite.position.x, sprite.position.y, 60, 60);\n        };\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var canvas = this.refs.test;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(this.state.video, 0, 0);\n      this.props.canvasSprites.map(function (sprite) {\n        var image = new window.Image();\n        image.src = sprite.sprite.url;\n\n        image.onload = function () {\n          ctx.drawImage(image, sprite.position.x, sprite.position.y, 60, 60);\n        };\n      });\n    }\n  }, {\n    key: \"getMotion\",\n    value: function getMotion() {\n      var canvas = document.getElementById('motion');\n      var video = document.getElementById('video');\n      var score = document.getElementById('score');\n      var captureInterval = setInterval(this.capture, 100);\n      console.log('captureinterval', captureInterval); // this.setState({\n      //   captureInterval: captureInterval\n      // })\n\n      function initSuccess() {\n        DiffCamEngine.start();\n      }\n\n      function initError() {\n        alert('Something went wrong.');\n      }\n\n      function capture(payload) {\n        score.textContent = payload.score;\n      }\n\n      DiffCamEngine.init({\n        video: video,\n        motionCanvas: canvas,\n        initSuccessCallback: initSuccess,\n        initErrorCallback: initError,\n        captureCallback: capture\n      });\n    }\n  }, {\n    key: \"processDiff\",\n    value: function processDiff(diffImageData) {\n      var rgba = diffImageData.data; // pixel adjustments are done by reference directly on diffImageData\n\n      var score = 0;\n      var motionPixels = includeMotionPixels ? [] : undefined;\n      var motionBox = undefined;\n\n      for (var i = 0; i < rgba.length; i += 4) {\n        var pixelDiff = rgba[i] * 0.3 + rgba[i + 1] * 0.6 + rgba[i + 2] * 0.1;\n        var normalized = Math.min(255, pixelDiff * (255 / pixelDiffThreshold));\n        rgba[i] = 0;\n        rgba[i + 1] = normalized;\n        rgba[i + 2] = 0;\n\n        if (pixelDiff >= pixelDiffThreshold) {\n          score++;\n          coords = calculateCoordinates(i / 4);\n\n          if (includeMotionBox) {\n            motionBox = calculateMotionBox(motionBox, coords.x, coords.y);\n          }\n\n          if (includeMotionPixels) {\n            motionPixels = calculateMotionPixels(motionPixels, coords.x, coords.y, pixelDiff);\n          }\n        }\n      }\n\n      return {\n        score: score,\n        motionBox: score > scoreThreshold ? motionBox : undefined,\n        motionPixels: motionPixels\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('VIDEO STATE', this.state);\n      var videoStyle = {\n        top: 0,\n        left: 0,\n        position: 'absolute',\n        zIndex: 4 // background: 'gray',\n\n      };\n      var motionStyle = {\n        top: this.state.top,\n        left: this.state.left,\n        position: 'absolute',\n        zIndex: -1 // background: 'gray',\n\n      };\n      var testStyle = {\n        top: this.state.top,\n        left: this.state.left,\n        position: 'absolute',\n        zIndex: 4,\n        background: 'red'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"video\",\n        style: videoStyle,\n        width: this.state.width,\n        height: this.state.height,\n        autoplay: true,\n        ref: \"video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"motion\",\n        style: motionStyle,\n        width: this.state.width,\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"test\",\n        style: testStyle,\n        width: this.state.width,\n        height: this.state.height,\n        ref: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"script\", {\n        src: \"https://webrtc.github.io/adapter/adapter-1.0.7.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), this.getMotion());\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    canvasSprites: state.sprite.canvasSprites\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Video.js"],"names":["React","Component","connect","Stage","Layer","SpriteList","ControlBar","UploadSound","DiffCamEngine","Video","state","x","y","bottom","height","left","right","top","width","captureImageData","captureCanvas","difCanvas","video","captureInterval","capture","captureContext","drawImage","captureWidth","captureHeight","getImageData","test","diffContext","globalCompositeOperation","diffWidth","diffHeight","diffImageData","console","log","zimage","document","getElementById","isReadyToDiff","diff","processDiff","motionContext","putImageData","motionBox","strokeStyle","strokeRect","min","max","captureCallback","imageData","score","hasMotion","scoreThreshold","motionPixels","getURL","getCaptureUrl","checkMotionPixel","spriteCanvas","getElementsByClassName","getBoundingClientRect","createElement","diffCanvas","setState","refs","canvas","ctx","getContext","props","canvasSprites","map","sprite","image","window","Image","src","url","onload","position","setInterval","initSuccess","start","initError","alert","payload","textContent","init","motionCanvas","initSuccessCallback","initErrorCallback","rgba","data","includeMotionPixels","undefined","i","length","pixelDiff","normalized","Math","pixelDiffThreshold","coords","calculateCoordinates","includeMotionBox","calculateMotionBox","calculateMotionPixels","videoStyle","zIndex","motionStyle","testStyle","background","getMotion","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../redux/actions';\n// import { changeSprite } from '../actions/sprite'\n// import Konva from 'konva';\nimport { Stage, Layer } from 'react-konva';\nimport SpriteList from './SpriteList'\nimport ControlBar from './ControlBar'\nimport UploadSound from './UploadSound'\nimport { DiffCamEngine } from './diff-cam-engine'\n// import * from './adapter-1.0.7'\n\n\nclass Video extends Component {\n  state = {\n    x: 0,\n    y: 0,\n    bottom: 0,\n    height: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    width: 0,\n    captureImageData: null,\n    captureCanvas: null,\n    difCanvas: null,\n    video: null,\n    captureInterval: null\n  }\n\n  componentDidMount(){\n    let spriteCanvas = document.getElementsByClassName('konvajs-content')[0].getBoundingClientRect()\n    const captureCanvas = document.createElement('canvas');\n    captureCanvas.width = spriteCanvas.width\n    captureCanvas.height = spriteCanvas.height\n\t\tconst diffCanvas = document.createElement('canvas');\n    diffCanvas.width = spriteCanvas.width\n    diffCanvas.height = spriteCanvas.height\n\n    this.setState({\n      x: spriteCanvas.x,\n      y: spriteCanvas.y,\n      bottom: spriteCanvas.bottom,\n      height: spriteCanvas.height,\n      left: spriteCanvas.left,\n      right: spriteCanvas.right,\n      top: spriteCanvas.top,\n      width: spriteCanvas.width,\n      captureCanvas: captureCanvas,\n      diffCanvas: diffCanvas,\n      video: this.refs.video\n    })\n\n    const canvas = this.refs.test\n    const ctx = canvas.getContext('2d')\n\n    this.props.canvasSprites.map(sprite =>{\n      const image = new window.Image();\n        image.src = sprite.sprite.url\n        image.onload = () =>{\n          ctx.drawImage(image,sprite.position.x,sprite.position.y, 60, 60)\n        }\n      }\n    )\n  }\n\n  componentDidUpdate(){\n    const canvas = this.refs.test\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(this.state.video,0,0)\n    this.props.canvasSprites.map(sprite =>{\n      const image = new window.Image();\n        image.src = sprite.sprite.url\n        image.onload = () =>{\n          ctx.drawImage(image,sprite.position.x,sprite.position.y, 60, 60)\n        }\n      }\n    )\n  }\n\n\n\n  getMotion(){\n    var canvas = document.getElementById('motion');\n    var video = document.getElementById('video');\n    var score = document.getElementById('score');\n\n    let captureInterval = setInterval(this.capture, 100);\n    console.log('captureinterval',captureInterval)\n    // this.setState({\n    //   captureInterval: captureInterval\n    // })\n\n    function initSuccess() {\n      DiffCamEngine.start();\n    }\n\n    function initError() {\n      alert('Something went wrong.');\n    }\n\n    function capture(payload) {\n      score.textContent = payload.score;\n    }\n\n    DiffCamEngine.init({\n      video: video,\n      motionCanvas: canvas,\n      initSuccessCallback: initSuccess,\n      initErrorCallback: initError,\n      captureCallback: capture\n    });\n  }\n\n  capture = () => {\n    // let video = this.refs.video\n    // this.setState({\n    //   video: video\n    // })\n\n    // save a full-sized copy of capture\n\t\tcaptureContext.drawImage(video, 0, 0, captureWidth, captureHeight);\n\t\tvar captureImageData = captureContext.getImageData(0, 0, captureWidth, captureHeight);\n\n\t\ttest.drawImage(video, 0, 0, captureWidth, captureHeight);\n\t\t// diff current capture over previous capture, leftover from last time\n\t\tdiffContext.globalCompositeOperation = 'difference';\n\t\tdiffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n\t\tvar diffImageData = diffContext.getImageData(0, 0, diffWidth, diffHeight);\n\t\tconsole.log(diffImageData)\n\t\ttest.drawImage(video, 0, 0, diffWidth, diffHeight);\n\t\tvar zimage = document.getElementById('source');\n\t\ttest.drawImage(zimage, 33, 71, 104, 124, 21, 20, 87, 104);\n\n\t\tif (isReadyToDiff) {\n\t\t\tvar diff = processDiff(diffImageData);\n\n\t\t\tmotionContext.putImageData(diffImageData, 0, 0);\n\t\t\tif (diff.motionBox) {\n\t\t\t\tmotionContext.strokeStyle = '#fff';\n\t\t\t\tmotionContext.strokeRect(\n\t\t\t\t\tdiff.motionBox.x.min + 0.5,\n\t\t\t\t\tdiff.motionBox.y.min + 0.5,\n\t\t\t\t\tdiff.motionBox.x.max - diff.motionBox.x.min,\n\t\t\t\t\tdiff.motionBox.y.max - diff.motionBox.y.min\n\t\t\t\t);\n\t\t\t}\n\t\t\tcaptureCallback({\n\t\t\t\timageData: captureImageData,\n\t\t\t\tscore: diff.score,\n\t\t\t\thasMotion: diff.score >= scoreThreshold,\n\t\t\t\tmotionBox: diff.motionBox,\n\t\t\t\tmotionPixels: diff.motionPixels,\n\t\t\t\tgetURL: function() {\n\t\t\t\t\treturn getCaptureUrl(this.imageData);\n\t\t\t\t},\n\t\t\t\tcheckMotionPixel: function(x, y) {\n\t\t\t\t\treturn checkMotionPixel(this.motionPixels, x, y)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// draw current capture normally over diff, ready for next time\n\t\tdiffContext.globalCompositeOperation = 'source-over';\n\t\tdiffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n\t\tisReadyToDiff = true;\n\t}\n\n\tprocessDiff(diffImageData) {\n\t\tvar rgba = diffImageData.data;\n\n\t\t// pixel adjustments are done by reference directly on diffImageData\n\t\tvar score = 0;\n\t\tvar motionPixels = includeMotionPixels ? [] : undefined;\n\t\tvar motionBox = undefined;\n\t\tfor (var i = 0; i < rgba.length; i += 4) {\n\t\t\tvar pixelDiff = rgba[i] * 0.3 + rgba[i + 1] * 0.6 + rgba[i + 2] * 0.1;\n\t\t\tvar normalized = Math.min(255, pixelDiff * (255 / pixelDiffThreshold));\n\t\t\trgba[i] = 0;\n\t\t\trgba[i + 1] = normalized;\n\t\t\trgba[i + 2] = 0;\n\n\t\t\tif (pixelDiff >= pixelDiffThreshold) {\n\t\t\t\tscore++;\n\t\t\t\tcoords = calculateCoordinates(i / 4);\n\n\t\t\t\tif (includeMotionBox) {\n\t\t\t\t\tmotionBox = calculateMotionBox(motionBox, coords.x, coords.y);\n\t\t\t\t}\n\n\t\t\t\tif (includeMotionPixels) {\n\t\t\t\t\tmotionPixels = calculateMotionPixels(motionPixels, coords.x, coords.y, pixelDiff);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tscore: score,\n\t\t\tmotionBox: score > scoreThreshold ? motionBox : undefined,\n\t\t\tmotionPixels: motionPixels\n\t\t};\n\t}\n\n  render(){\n    console.log('VIDEO STATE', this.state)\n    const videoStyle= {\n      top: 0,\n      left: 0,\n      position: 'absolute',\n      zIndex: 4,\n      // background: 'gray',\n    }\n\n    const motionStyle= {\n      top: this.state.top,\n      left: this.state.left,\n      position: 'absolute',\n      zIndex: -1,\n      // background: 'gray',\n    }\n\n    const testStyle= {\n      top: this.state.top,\n      left: this.state.left,\n      position: 'absolute',\n      zIndex: 4,\n      background: 'red'\n    }\n\n    return(\n      <div>\n        <video id=\"video\" style={videoStyle} width={this.state.width} height={this.state.height} autoplay ref='video'></video>\n        <canvas id='motion' style={motionStyle} width={this.state.width} height={this.state.height}/>\n        <canvas id='test' style={testStyle} width={this.state.width} height={this.state.height} ref='test'/>\n        <span id=\"score\"></span>\n        <script src=\"https://webrtc.github.io/adapter/adapter-1.0.7.js\"></script>\n        {this.getMotion()}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    canvasSprites: state.sprite.canvasSprites\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);\n"]},"metadata":{},"sourceType":"module"}