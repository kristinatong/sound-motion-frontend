{"ast":null,"code":"import _objectSpread from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// import { ADD_USER, UPDATE_ANIMAL } from './types';\nimport userReducer from './reducers/userReducer';\nimport { combineReducers } from 'redux';\nvar initialUserState = {\n  users: [],\n  name: ''\n};\nvar initialAnimalState = {\n  animalSrc: null,\n  name: ''\n}; // Pure Function - same output for every input, no side effects\n// action = { type, payload }\n\nexport function animalReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAnimalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_ANIMAL':\n      return _objectSpread({}, state, {\n        animalSrc: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\nexport default combineReducers({\n  user: userReducer,\n  animal: animalReducer\n});","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/redux/reducer.js"],"names":["userReducer","combineReducers","initialUserState","users","name","initialAnimalState","animalSrc","animalReducer","state","action","type","payload","user","animal"],"mappings":";AAAA;AACA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,IAAI,EAAE;AAFiB,CAAzB;AAMA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,SAAS,EAAE,IADc;AAEzBF,EAAAA,IAAI,EAAE;AAFmB,CAA3B,C,CAKA;AACA;;AACA,OAAO,SAASG,aAAT,GAA2D;AAAA,MAApCC,KAAoC,uEAA5BH,kBAA4B;AAAA,MAARI,MAAQ;;AAChE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,eAAL;AACE,+BAAYF,KAAZ;AAAmBF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAArC;;AAEF;AACE,aAAOH,KAAP;AALJ;AAOD;AAED,eAAeP,eAAe,CAAC;AAC7BW,EAAAA,IAAI,EAAEZ,WADuB;AAE7Ba,EAAAA,MAAM,EAAEN;AAFqB,CAAD,CAA9B","sourcesContent":["// import { ADD_USER, UPDATE_ANIMAL } from './types';\nimport userReducer from './reducers/userReducer'\nimport { combineReducers } from 'redux';\n\nconst initialUserState = {\n  users: [],\n  name: '',\n};\n\n\nconst initialAnimalState = {\n  animalSrc: null,\n  name: '',\n};\n\n// Pure Function - same output for every input, no side effects\n// action = { type, payload }\nexport function animalReducer(state = initialAnimalState, action) {\n  switch(action.type) {\n    case 'UPDATE_ANIMAL':\n      return { ...state, animalSrc: action.payload };\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  user: userReducer,\n  animal: animalReducer,\n})\n"]},"metadata":{},"sourceType":"module"}