{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Player.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player';\nimport { PlayerIcon } from 'react-player-controls';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App';\nimport * as actions from '../actions/sound';\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Player, _Component);\n\n  function Player() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Player);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Player)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loop: false,\n      paused: false\n    };\n\n    _this.handleChange = function () {\n      _this.setState({\n        loop: !_this.state.loop\n      });\n\n      _this.props.loopSound();\n    };\n\n    _this.play = function () {\n      _this.setState({\n        paused: !_this.state.paused\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Player, [{\n    key: \"render\",\n    value: function render() {\n      console.log('PLAYER PROPS', this.props);\n      console.log('PLAYER STATE', this.state);\n      var url;\n\n      if (this.props.selectedSprite.sound) {\n        url = this.props.selectedSprite.sound.url; // loop = this.props.selectedSprite.sound.loop\n      } else {\n        url = \"test.mp3\";\n      } // return(\n      //   <div className=\"player\">\n      //     <ReactPlayer className=\"react-player\" width={275} height={60} url={url} playing={this.props.djMode ? false : true} controls={this.props.djMode ? false : true} loop={this.state.loop}/><br/>\n      //     <MuiThemeProvider theme={colors}>\n      //     {!this.props.djMode ?\n      //     (\n      //     <FormControlLabel\n      //     disabled={!this.props.selectedSprite.sound ? true : false}\n      //     control={\n      //       <Checkbox\n      //         checked={this.state.loop}\n      //         value={this.state.loop}\n      //         onChange={this.handleChange}\n      //         color=\"primary\"\n      //       />\n      //     }\n      //     label=\"LOOP\"\n      //   />) : null}\n      //   </MuiThemeProvider>\n      //   </div>\n      // )\n\n\n      return React.createElement(\"div\", {\n        className: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        id: \"music\",\n        preload: true,\n        autoplay: this.props.djMode ? false : true,\n        loop: this.state.loop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"audioplayer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"pButton\",\n        className: this.state.paused ? 'pause' : 'play',\n        onClick: this.play,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"timeline\",\n        onClick: this.timeline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"playhead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(MuiThemeProvider, {\n        theme: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, !this.props.djMode ? React.createElement(FormControlLabel, {\n        disabled: !this.props.selectedSprite.sound ? true : false,\n        control: React.createElement(Checkbox, {\n          checked: this.state.loop,\n          value: this.state.loop,\n          onChange: this.handleChange,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }),\n        label: \"LOOP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return Player;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite,\n    djMode: state.sound.djMode\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n\n\nexport default connect(mapStateToProps, actions)(Player);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Player.js"],"names":["React","Component","connect","ReactPlayer","PlayerIcon","Checkbox","FormControlLabel","MuiThemeProvider","colors","actions","Player","state","loop","paused","handleChange","setState","props","loopSound","play","console","log","url","selectedSprite","sound","djMode","timeline","mapStateToProps","sprite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player'\nimport { PlayerIcon } from 'react-player-controls'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App'\nimport * as actions from '../actions/sound'\n\nclass Player extends Component{\n  state = {\n    loop: false,\n    paused: false\n  }\n\n  handleChange = () => {\n    this.setState({\n      loop: !this.state.loop\n    })\n    this.props.loopSound()\n  }\n\n  play = () => {\n    this.setState({\n      paused: !this.state.paused\n    })\n  }\n\n  render(){\n    console.log('PLAYER PROPS',this.props)\n    console.log('PLAYER STATE', this.state)\n    let url;\n    if(this.props.selectedSprite.sound){\n      url = this.props.selectedSprite.sound.url\n      // loop = this.props.selectedSprite.sound.loop\n    }else{\n      url = \"test.mp3\"\n    }\n      // return(\n      //   <div className=\"player\">\n      //     <ReactPlayer className=\"react-player\" width={275} height={60} url={url} playing={this.props.djMode ? false : true} controls={this.props.djMode ? false : true} loop={this.state.loop}/><br/>\n      //     <MuiThemeProvider theme={colors}>\n      //     {!this.props.djMode ?\n      //     (\n      //     <FormControlLabel\n      //     disabled={!this.props.selectedSprite.sound ? true : false}\n      //     control={\n      //       <Checkbox\n      //         checked={this.state.loop}\n      //         value={this.state.loop}\n      //         onChange={this.handleChange}\n      //         color=\"primary\"\n      //       />\n      //     }\n      //     label=\"LOOP\"\n      //   />) : null}\n      //   </MuiThemeProvider>\n      //   </div>\n      // )\n\n\n\n      return(\n        <div className=\"player\">\n          <audio id='music' preload={true} autoplay={this.props.djMode ? false : true} loop={this.state.loop}>\n          <source src={url}/>\n          </audio>\n          <div id=\"audioplayer\">\n      \t<button id=\"pButton\" className={this.state.paused ? 'pause' : 'play'} onClick={this.play}></button>\n        <div id=\"timeline\" onClick={this.timeline}>\n        \t\t  <div id=\"playhead\"></div>\n        </div>\n      </div>\n          <MuiThemeProvider theme={colors}>\n          {!this.props.djMode ?\n          (\n          <FormControlLabel\n          disabled={!this.props.selectedSprite.sound ? true : false}\n          control={\n            <Checkbox\n              checked={this.state.loop}\n              value={this.state.loop}\n              onChange={this.handleChange}\n              color=\"primary\"\n            />\n          }\n          label=\"LOOP\"\n        />) : null}\n        </MuiThemeProvider>\n        </div>\n      )\n    }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite,\n    djMode: state.sound.djMode\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n\nexport default connect(mapStateToProps, actions)(Player);\n"]},"metadata":{},"sourceType":"module"}