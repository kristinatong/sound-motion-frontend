{"ast":null,"code":"var DiffCamEngine = function () {\n  var stream; // stream obtained from webcam\n\n  var video; // shows stream\n\n  var captureCanvas; // internal canvas for capturing full images from video\n\n  var captureContext; // context for capture canvas\n\n  var diffCanvas; // internal canvas for diffing downscaled captures\n\n  var diffContext; // context for diff canvas\n\n  var motionCanvas; // receives processed diff images\n\n  var motionContext; // context for motion canvas\n\n  var initSuccessCallback; // called when init succeeds\n\n  var initErrorCallback; // called when init fails\n\n  var startCompleteCallback; // called when start is complete\n\n  var captureCallback; // called when an image has been captured and diffed\n\n  var captureInterval; // interval for continuous captures\n\n  var captureIntervalTime; // time between captures, in ms\n\n  var captureWidth; // full captured image width\n\n  var captureHeight; // full captured image height\n\n  var diffWidth; // downscaled width for diff/motion\n\n  var diffHeight; // downscaled height for diff/motion\n\n  var isReadyToDiff; // has a previous capture been made to diff against?\n\n  var pixelDiffThreshold; // min for a pixel to be considered significant\n\n  var scoreThreshold; // min for an image to be considered significant\n\n  var includeMotionBox; // flag to calculate and draw motion bounding box\n\n  var includeMotionPixels; // flag to create object denoting pixels with motion\n\n  var coords;\n\n  function init(options) {\n    // sanity check\n    if (!options) {\n      throw 'No options object provided';\n    } // incoming options with defaults\n\n\n    video = options.video || document.createElement('video');\n    motionCanvas = options.motionCanvas || document.createElement('canvas');\n    captureIntervalTime = options.captureIntervalTime || 100;\n    captureWidth = options.captureWidth || 640;\n    captureHeight = options.captureHeight || 480;\n    diffWidth = options.diffWidth || 64;\n    diffHeight = options.diffHeight || 48;\n    pixelDiffThreshold = options.pixelDiffThreshold || 32;\n    scoreThreshold = options.scoreThreshold || 16;\n    includeMotionBox = options.includeMotionBox || false;\n    includeMotionPixels = options.includeMotionPixels || false; // callbacks\n\n    initSuccessCallback = options.initSuccessCallback || function () {};\n\n    initErrorCallback = options.initErrorCallback || function () {}; // startCompleteCallback = options.startCompleteCallback || function() {};\n\n\n    captureCallback = options.captureCallback || function () {}; // non-configurable\n\n\n    captureCanvas = document.createElement('canvas');\n    diffCanvas = document.createElement('canvas');\n    isReadyToDiff = false; // prep video\n\n    video.autoplay = true; // prep capture canvas\n\n    captureCanvas.width = captureWidth;\n    captureCanvas.height = captureHeight;\n    captureContext = captureCanvas.getContext('2d'); // prep diff canvas\n\n    diffCanvas.width = diffWidth;\n    diffCanvas.height = diffHeight;\n    diffContext = diffCanvas.getContext('2d'); // prep motion canvas\n\n    motionCanvas.width = diffWidth;\n    motionCanvas.height = diffHeight;\n    motionContext = motionCanvas.getContext('2d');\n    requestWebcam();\n  }\n\n  function requestWebcam() {\n    var constraints = {\n      audio: false,\n      video: {\n        width: captureWidth,\n        height: captureHeight\n      }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(initSuccess).catch(initError);\n  }\n\n  function initSuccess(requestedStream) {\n    console.log(requestedStream);\n    stream = requestedStream;\n    console.log(initSuccessCallback);\n    initSuccessCallback();\n  }\n\n  function initError(error) {\n    console.log(error);\n    initErrorCallback();\n  }\n\n  function start() {\n    if (!stream) {\n      throw 'Cannot start after init fail';\n    } // streaming takes a moment to start\n\n\n    video.addEventListener('canplay', startComplete);\n    video.srcObject = stream;\n  }\n\n  function startComplete() {\n    video.removeEventListener('canplay', startComplete);\n    captureInterval = setInterval(capture, captureIntervalTime); // startCompleteCallback();\n  }\n\n  function stop() {\n    clearInterval(captureInterval);\n    video.src = '';\n    motionContext.clearRect(0, 0, diffWidth, diffHeight);\n    isReadyToDiff = false;\n  }\n\n  function capture() {\n    // save a full-sized copy of capture\n    captureContext.drawImage(video, 0, 0, captureWidth, captureHeight);\n    var captureImageData = captureContext.getImageData(0, 0, captureWidth, captureHeight); // diff current capture over previous capture, leftover from last time\n\n    diffContext.globalCompositeOperation = 'difference';\n    diffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n    var diffImageData = diffContext.getImageData(0, 0, diffWidth, diffHeight);\n\n    if (isReadyToDiff) {\n      var diff = processDiff(diffImageData);\n      motionContext.putImageData(diffImageData, 0, 0);\n\n      if (diff.motionBox) {\n        motionContext.strokeStyle = '#fff';\n        motionContext.strokeRect(diff.motionBox.x.min + 0.5, diff.motionBox.y.min + 0.5, diff.motionBox.x.max - diff.motionBox.x.min, diff.motionBox.y.max - diff.motionBox.y.min);\n      }\n\n      captureCallback({\n        imageData: captureImageData,\n        score: diff.score,\n        hasMotion: diff.score >= scoreThreshold,\n        motionBox: diff.motionBox,\n        motionPixels: diff.motionPixels,\n        getURL: function getURL() {\n          return getCaptureUrl(this.imageData);\n        },\n        checkMotionPixel: function checkMotionPixel(x, y) {\n          return _checkMotionPixel(this.motionPixels, x, y);\n        }\n      });\n    } // draw current capture normally over diff, ready for next time\n\n\n    diffContext.globalCompositeOperation = 'source-over';\n    diffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n    isReadyToDiff = true;\n  }\n\n  function processDiff(diffImageData) {\n    var rgba = diffImageData.data; // pixel adjustments are done by reference directly on diffImageData\n\n    var score = 0;\n    var motionPixels = includeMotionPixels ? [] : undefined;\n    var motionBox = undefined;\n\n    for (var i = 0; i < rgba.length; i += 4) {\n      var pixelDiff = rgba[i] * 0.3 + rgba[i + 1] * 0.6 + rgba[i + 2] * 0.1;\n      var normalized = Math.min(255, pixelDiff * (255 / pixelDiffThreshold));\n      rgba[i] = 0;\n      rgba[i + 1] = normalized;\n      rgba[i + 2] = 0;\n\n      if (pixelDiff >= pixelDiffThreshold) {\n        score++;\n        coords = calculateCoordinates(i / 4);\n\n        if (includeMotionBox) {\n          motionBox = calculateMotionBox(motionBox, coords.x, coords.y);\n        }\n\n        if (includeMotionPixels) {\n          motionPixels = calculateMotionPixels(motionPixels, coords.x, coords.y, pixelDiff);\n        }\n      }\n    }\n\n    return {\n      score: score,\n      motionBox: score > scoreThreshold ? motionBox : undefined,\n      motionPixels: motionPixels\n    };\n  }\n\n  function calculateCoordinates(pixelIndex) {\n    return {\n      x: pixelIndex % diffWidth,\n      y: Math.floor(pixelIndex / diffWidth)\n    };\n  }\n\n  function calculateMotionBox(currentMotionBox, x, y) {\n    // init motion box on demand\n    var motionBox = currentMotionBox || {\n      x: {\n        min: coords.x,\n        max: x\n      },\n      y: {\n        min: coords.y,\n        max: y\n      }\n    };\n    motionBox.x.min = Math.min(motionBox.x.min, x);\n    motionBox.x.max = Math.max(motionBox.x.max, x);\n    motionBox.y.min = Math.min(motionBox.y.min, y);\n    motionBox.y.max = Math.max(motionBox.y.max, y);\n    return motionBox;\n  }\n\n  function calculateMotionPixels(motionPixels, x, y, pixelDiff) {\n    motionPixels[x] = motionPixels[x] || [];\n    motionPixels[x][y] = true;\n    return motionPixels;\n  }\n\n  function getCaptureUrl(captureImageData) {\n    // may as well borrow captureCanvas\n    captureContext.putImageData(captureImageData, 0, 0);\n    return captureCanvas.toDataURL();\n  }\n\n  function _checkMotionPixel(motionPixels, x, y) {\n    return motionPixels && motionPixels[x] && motionPixels[x][y];\n  }\n\n  function getPixelDiffThreshold() {\n    return pixelDiffThreshold;\n  }\n\n  function setPixelDiffThreshold(val) {\n    pixelDiffThreshold = val;\n  }\n\n  function getScoreThreshold() {\n    return scoreThreshold;\n  }\n\n  function setScoreThreshold(val) {\n    scoreThreshold = val;\n  }\n\n  return {\n    // public getters/setters\n    getPixelDiffThreshold: getPixelDiffThreshold,\n    setPixelDiffThreshold: setPixelDiffThreshold,\n    getScoreThreshold: getScoreThreshold,\n    setScoreThreshold: setScoreThreshold,\n    // public functions\n    init: init,\n    start: start,\n    stop: stop\n  };\n}();","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/diff-cam-engine.js"],"names":["DiffCamEngine","stream","video","captureCanvas","captureContext","diffCanvas","diffContext","motionCanvas","motionContext","initSuccessCallback","initErrorCallback","startCompleteCallback","captureCallback","captureInterval","captureIntervalTime","captureWidth","captureHeight","diffWidth","diffHeight","isReadyToDiff","pixelDiffThreshold","scoreThreshold","includeMotionBox","includeMotionPixels","coords","init","options","document","createElement","autoplay","width","height","getContext","requestWebcam","constraints","audio","navigator","mediaDevices","getUserMedia","then","initSuccess","catch","initError","requestedStream","console","log","error","start","addEventListener","startComplete","srcObject","removeEventListener","setInterval","capture","stop","clearInterval","src","clearRect","drawImage","captureImageData","getImageData","globalCompositeOperation","diffImageData","diff","processDiff","putImageData","motionBox","strokeStyle","strokeRect","x","min","y","max","imageData","score","hasMotion","motionPixels","getURL","getCaptureUrl","checkMotionPixel","rgba","data","undefined","i","length","pixelDiff","normalized","Math","calculateCoordinates","calculateMotionBox","calculateMotionPixels","pixelIndex","floor","currentMotionBox","toDataURL","getPixelDiffThreshold","setPixelDiffThreshold","val","getScoreThreshold","setScoreThreshold"],"mappings":"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","sourcesContent":["var DiffCamEngine = (function() {\n\tvar stream;\t\t\t\t\t// stream obtained from webcam\n\tvar video;\t\t\t\t\t// shows stream\n\tvar captureCanvas;\t\t\t// internal canvas for capturing full images from video\n\tvar captureContext;\t\t\t// context for capture canvas\n\tvar diffCanvas;\t\t\t\t// internal canvas for diffing downscaled captures\n\tvar diffContext;\t\t\t// context for diff canvas\n\tvar motionCanvas;\t\t\t// receives processed diff images\n\tvar motionContext;\t\t\t// context for motion canvas\n\n\tvar initSuccessCallback;\t// called when init succeeds\n\tvar initErrorCallback;\t\t// called when init fails\n\tvar startCompleteCallback;\t// called when start is complete\n\tvar captureCallback;\t\t// called when an image has been captured and diffed\n\n\tvar captureInterval;\t\t// interval for continuous captures\n\tvar captureIntervalTime;\t// time between captures, in ms\n\tvar captureWidth;\t\t\t// full captured image width\n\tvar captureHeight;\t\t\t// full captured image height\n\tvar diffWidth;\t\t\t\t// downscaled width for diff/motion\n\tvar diffHeight;\t\t\t\t// downscaled height for diff/motion\n\tvar isReadyToDiff;\t\t\t// has a previous capture been made to diff against?\n\tvar pixelDiffThreshold;\t\t// min for a pixel to be considered significant\n\tvar scoreThreshold;\t\t\t// min for an image to be considered significant\n\tvar includeMotionBox;\t\t// flag to calculate and draw motion bounding box\n\tvar includeMotionPixels;\t// flag to create object denoting pixels with motion\n\tvar coords;\n\n\tfunction init(options) {\n\t\t// sanity check\n\t\tif (!options) {\n\t\t\tthrow 'No options object provided';\n\t\t}\n\n\t\t// incoming options with defaults\n\t\tvideo = options.video || document.createElement('video');\n\t\tmotionCanvas = options.motionCanvas || document.createElement('canvas');\n\t\tcaptureIntervalTime = options.captureIntervalTime || 100;\n\t\tcaptureWidth = options.captureWidth || 640;\n\t\tcaptureHeight = options.captureHeight || 480;\n\t\tdiffWidth = options.diffWidth || 64;\n\t\tdiffHeight = options.diffHeight || 48;\n\t\tpixelDiffThreshold = options.pixelDiffThreshold || 32;\n\t\tscoreThreshold = options.scoreThreshold || 16;\n\t\tincludeMotionBox = options.includeMotionBox || false;\n\t\tincludeMotionPixels = options.includeMotionPixels || false;\n\n\t\t// callbacks\n\t\tinitSuccessCallback = options.initSuccessCallback || function() {};\n\t\tinitErrorCallback = options.initErrorCallback || function() {};\n\t\t// startCompleteCallback = options.startCompleteCallback || function() {};\n\t\tcaptureCallback = options.captureCallback || function() {};\n\n\t\t// non-configurable\n\t\tcaptureCanvas = document.createElement('canvas');\n\t\tdiffCanvas = document.createElement('canvas');\n\t\tisReadyToDiff = false;\n\n\t\t// prep video\n\t\tvideo.autoplay = true;\n\n\t\t// prep capture canvas\n\t\tcaptureCanvas.width = captureWidth;\n\t\tcaptureCanvas.height = captureHeight;\n\t\tcaptureContext = captureCanvas.getContext('2d');\n\n\t\t// prep diff canvas\n\t\tdiffCanvas.width = diffWidth;\n\t\tdiffCanvas.height = diffHeight;\n\t\tdiffContext = diffCanvas.getContext('2d');\n\n\t\t// prep motion canvas\n\t\tmotionCanvas.width = diffWidth;\n\t\tmotionCanvas.height = diffHeight;\n\t\tmotionContext = motionCanvas.getContext('2d');\n\n\t\trequestWebcam();\n\t}\n\n\tfunction requestWebcam() {\n\t\tvar constraints = {\n\t\t\taudio: false,\n\t\t\tvideo: { width: captureWidth, height: captureHeight }\n\t\t};\n\n\t\tnavigator.mediaDevices.getUserMedia(constraints)\n\t\t\t.then(initSuccess)\n\t\t\t.catch(initError);\n\t}\n\n\tfunction initSuccess(requestedStream) {\n\t\tconsole.log(requestedStream)\n\t\tstream = requestedStream;\n\t\tconsole.log(initSuccessCallback)\n\t\tinitSuccessCallback();\n\t}\n\n\tfunction initError(error) {\n\t\tconsole.log(error);\n\t\tinitErrorCallback();\n\t}\n\n\tfunction start() {\n\t\tif (!stream) {\n\t\t\tthrow 'Cannot start after init fail';\n\t\t}\n\n\t\t// streaming takes a moment to start\n\t\tvideo.addEventListener('canplay', startComplete);\n\t\tvideo.srcObject = stream;\n\t}\n\n\tfunction startComplete() {\n\t\tvideo.removeEventListener('canplay', startComplete);\n\t\tcaptureInterval = setInterval(capture, captureIntervalTime);\n\t\t// startCompleteCallback();\n\t}\n\n\tfunction stop() {\n\t\tclearInterval(captureInterval);\n\t\tvideo.src = '';\n\t\tmotionContext.clearRect(0, 0, diffWidth, diffHeight);\n\t\tisReadyToDiff = false;\n\t}\n\n\tfunction capture() {\n\t\t// save a full-sized copy of capture\n\t\tcaptureContext.drawImage(video, 0, 0, captureWidth, captureHeight);\n\t\tvar captureImageData = captureContext.getImageData(0, 0, captureWidth, captureHeight);\n\n\t\t// diff current capture over previous capture, leftover from last time\n\t\tdiffContext.globalCompositeOperation = 'difference';\n\t\tdiffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n\t\tvar diffImageData = diffContext.getImageData(0, 0, diffWidth, diffHeight);\n\n\t\tif (isReadyToDiff) {\n\t\t\tvar diff = processDiff(diffImageData);\n\n\t\t\tmotionContext.putImageData(diffImageData, 0, 0);\n\t\t\tif (diff.motionBox) {\n\t\t\t\tmotionContext.strokeStyle = '#fff';\n\t\t\t\tmotionContext.strokeRect(\n\t\t\t\t\tdiff.motionBox.x.min + 0.5,\n\t\t\t\t\tdiff.motionBox.y.min + 0.5,\n\t\t\t\t\tdiff.motionBox.x.max - diff.motionBox.x.min,\n\t\t\t\t\tdiff.motionBox.y.max - diff.motionBox.y.min\n\t\t\t\t);\n\t\t\t}\n\t\t\tcaptureCallback({\n\t\t\t\timageData: captureImageData,\n\t\t\t\tscore: diff.score,\n\t\t\t\thasMotion: diff.score >= scoreThreshold,\n\t\t\t\tmotionBox: diff.motionBox,\n\t\t\t\tmotionPixels: diff.motionPixels,\n\t\t\t\tgetURL: function() {\n\t\t\t\t\treturn getCaptureUrl(this.imageData);\n\t\t\t\t},\n\t\t\t\tcheckMotionPixel: function(x, y) {\n\t\t\t\t\treturn checkMotionPixel(this.motionPixels, x, y)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// draw current capture normally over diff, ready for next time\n\t\tdiffContext.globalCompositeOperation = 'source-over';\n\t\tdiffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n\t\tisReadyToDiff = true;\n\t}\n\n\tfunction processDiff(diffImageData) {\n\t\tvar rgba = diffImageData.data;\n\n\t\t// pixel adjustments are done by reference directly on diffImageData\n\t\tvar score = 0;\n\t\tvar motionPixels = includeMotionPixels ? [] : undefined;\n\t\tvar motionBox = undefined;\n\t\tfor (var i = 0; i < rgba.length; i += 4) {\n\t\t\tvar pixelDiff = rgba[i] * 0.3 + rgba[i + 1] * 0.6 + rgba[i + 2] * 0.1;\n\t\t\tvar normalized = Math.min(255, pixelDiff * (255 / pixelDiffThreshold));\n\t\t\trgba[i] = 0;\n\t\t\trgba[i + 1] = normalized;\n\t\t\trgba[i + 2] = 0;\n\n\t\t\tif (pixelDiff >= pixelDiffThreshold) {\n\t\t\t\tscore++;\n\t\t\t\tcoords = calculateCoordinates(i / 4);\n\n\t\t\t\tif (includeMotionBox) {\n\t\t\t\t\tmotionBox = calculateMotionBox(motionBox, coords.x, coords.y);\n\t\t\t\t}\n\n\t\t\t\tif (includeMotionPixels) {\n\t\t\t\t\tmotionPixels = calculateMotionPixels(motionPixels, coords.x, coords.y, pixelDiff);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tscore: score,\n\t\t\tmotionBox: score > scoreThreshold ? motionBox : undefined,\n\t\t\tmotionPixels: motionPixels\n\t\t};\n\t}\n\n\tfunction calculateCoordinates(pixelIndex) {\n\t\treturn {\n\t\t\tx: pixelIndex % diffWidth,\n\t\t\ty: Math.floor(pixelIndex / diffWidth)\n\t\t};\n\t}\n\n\tfunction calculateMotionBox(currentMotionBox, x, y) {\n\t\t// init motion box on demand\n\t\tvar motionBox = currentMotionBox || {\n\t\t\tx: { min: coords.x, max: x },\n\t\t\ty: { min: coords.y, max: y }\n\t\t};\n\n\t\tmotionBox.x.min = Math.min(motionBox.x.min, x);\n\t\tmotionBox.x.max = Math.max(motionBox.x.max, x);\n\t\tmotionBox.y.min = Math.min(motionBox.y.min, y);\n\t\tmotionBox.y.max = Math.max(motionBox.y.max, y);\n\n\t\treturn motionBox;\n\t}\n\n\tfunction calculateMotionPixels(motionPixels, x, y, pixelDiff) {\n\t\tmotionPixels[x] = motionPixels[x] || [];\n\t\tmotionPixels[x][y] = true;\n\n\t\treturn motionPixels;\n\t}\n\n\tfunction getCaptureUrl(captureImageData) {\n\t\t// may as well borrow captureCanvas\n\t\tcaptureContext.putImageData(captureImageData, 0, 0);\n\t\treturn captureCanvas.toDataURL();\n\t}\n\n\tfunction checkMotionPixel(motionPixels, x, y) {\n\t\treturn motionPixels && motionPixels[x] && motionPixels[x][y];\n\t}\n\n\tfunction getPixelDiffThreshold() {\n\t\treturn pixelDiffThreshold;\n\t}\n\n\tfunction setPixelDiffThreshold(val) {\n\t\tpixelDiffThreshold = val;\n\t}\n\n\tfunction getScoreThreshold() {\n\t\treturn scoreThreshold;\n\t}\n\n\tfunction setScoreThreshold(val) {\n\t\tscoreThreshold = val;\n\t}\n\n\treturn {\n\t\t// public getters/setters\n\t\tgetPixelDiffThreshold: getPixelDiffThreshold,\n\t\tsetPixelDiffThreshold: setPixelDiffThreshold,\n\t\tgetScoreThreshold: getScoreThreshold,\n\t\tsetScoreThreshold: setScoreThreshold,\n\n\t\t// public functions\n\t\tinit: init,\n\t\tstart: start,\n\t\tstop: stop\n\t};\n})();\n"]},"metadata":{},"sourceType":"module"}