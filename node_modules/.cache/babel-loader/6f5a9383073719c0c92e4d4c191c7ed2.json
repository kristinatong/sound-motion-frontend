{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SoundBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../actions/actions';\n// import { Stage, Layer, Text, Image } from 'react-konva';\n\nimport { selectSound as _selectSound } from '../actions/sound';\n\nvar SoundBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SoundBar, _Component);\n\n  function SoundBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SoundBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SoundBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedSound: null // selectSound = (sound) => {\n      //   debugger\n      //   // this.setState({\n      //   //   selectedSound: sound\n      //   // })\n      //   this.props.selectSound(sound)\n      // }\n\n    };\n\n    _this.renderSounds = function () {\n      return _this.props.sounds.map(function (sound) {\n        return React.createElement(\"li\", {\n          key: sound.id,\n          onClick: function onClick() {\n            return _this.props.selectSound(sound);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, sound.name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SoundBar, [{\n    key: \"render\",\n    value: function render() {\n      console.log('sound bar props', this.props);\n      var soundStyle = {\n        position: 'absolute',\n        right: '0',\n        top: '10',\n        width: '150px',\n        height: '100vh',\n        backgroundColor: '#EEEEEE',\n        borderLeft: '1px dotted'\n      };\n      return React.createElement(\"div\", {\n        style: soundStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Sound Bar\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.renderSounds())); // return(\n      //   <Stage style={soundStyle} width={160} height={800}>\n      //     <Layer>\n      //       <Text text='Sound Bar'/>\n      //     </Layer>\n      //   </Stage>\n      // )\n    }\n  }]);\n\n  return SoundBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds,\n    selectedSound: state.sound.selectedSound\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    selectSound: function selectSound() {\n      dispatch(_selectSound());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SoundBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SoundBar.js"],"names":["React","Component","connect","selectSound","SoundBar","state","selectedSound","renderSounds","props","sounds","map","sound","id","name","console","log","soundStyle","position","right","top","width","height","backgroundColor","borderLeft","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AACA,SAASC,WAAW,IAAXA,YAAT,QAA4B,kBAA5B;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,aAAa,EAAE,IADT,CAIR;AACA;AACA;AACA;AACA;AACA;AACA;;AAVQ,K;;UAYRC,Y,GAAe,YAAM;AACnB,aAAO,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAmB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKJ,KAAL,CAAWL,WAAX,CAAuBQ,KAAvB,CAAN;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkEA,KAAK,CAACE,IAAxE,CAAJ;AAAA,OAA3B,CAAP;AACD,K;;;;;;;6BAEO;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKP,KAAnC;AACA,UAAMQ,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE,UADO;AAEjBC,QAAAA,KAAK,EAAE,GAFU;AAGjBC,QAAAA,GAAG,EAAE,IAHY;AAIjBC,QAAAA,KAAK,EAAE,OAJU;AAKjBC,QAAAA,MAAM,EAAE,OALS;AAMjBC,QAAAA,eAAe,EAAE,SANA;AAOjBC,QAAAA,UAAU,EAAE;AAPK,OAAnB;AASA,aACE;AAAK,QAAA,KAAK,EAAEP,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,YAAL,EADH,CAFF,CADF,CAXM,CAmBN;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;;EA3CoBN,S;;AA8CvB,SAASuB,eAAT,CAAyBnB,KAAzB,EAAgC;AAC9B,SAAO;AACLI,IAAAA,MAAM,EAAEJ,KAAK,CAACM,KAAN,CAAYF,MADf;AAELH,IAAAA,aAAa,EAAED,KAAK,CAACM,KAAN,CAAYL;AAFtB,GAAP;AAID;;AAED,SAASmB,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLvB,IAAAA,WAAW,EAAE,uBAAM;AACjBuB,MAAAA,QAAQ,CAACvB,YAAW,EAAZ,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,eAAeD,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../actions/actions';\n// import { Stage, Layer, Text, Image } from 'react-konva';\nimport { selectSound } from '../actions/sound'\n\nclass SoundBar extends Component{\n  state = {\n    selectedSound: null\n  }\n\n  // selectSound = (sound) => {\n  //   debugger\n  //   // this.setState({\n  //   //   selectedSound: sound\n  //   // })\n  //   this.props.selectSound(sound)\n  // }\n\n  renderSounds = () => {\n    return this.props.sounds.map(sound => <li key={sound.id} onClick={() => this.props.selectSound(sound)}>{sound.name}</li>)\n  }\n\n  render(){\n    console.log('sound bar props',this.props)\n    const soundStyle = {\n      position: 'absolute',\n      right: '0',\n      top: '10',\n      width: '150px',\n      height: '100vh',\n      backgroundColor: '#EEEEEE',\n      borderLeft: '1px dotted'}\n\n    return(\n      <div style={soundStyle}>\n        <h1>Sound Bar</h1>\n        <ul>\n          {this.renderSounds()}\n        </ul>\n      </div>\n    )\n    // return(\n    //   <Stage style={soundStyle} width={160} height={800}>\n    //     <Layer>\n    //       <Text text='Sound Bar'/>\n    //     </Layer>\n    //   </Stage>\n    // )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds,\n    selectedSound: state.sound.selectedSound\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    selectSound: () => {\n      dispatch(selectSound())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SoundBar);\n"]},"metadata":{},"sourceType":"module"}