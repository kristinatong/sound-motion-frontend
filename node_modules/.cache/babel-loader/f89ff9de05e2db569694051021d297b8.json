{"ast":null,"code":"import _objectSpread from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/ControlBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Stage, Layer, Text, Image } from 'react-konva';\nimport Sprite from './Sprite';\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ControlBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ControlBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ctrlImage: null\n    };\n    return _this;\n  }\n\n  _createClass(ControlBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var image = new window.Image();\n      image.src = this.props.selectedSprite.url;\n\n      image.onload = function () {\n        _this2.setState({\n          ctrlImage: image\n        });\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('control bar props', this.props.selectedSprite);\n      var controlStyle = {\n        position: 'absolute',\n        backgroundColor: '#EEEEEE',\n        bottom: '0px',\n        left: '20%',\n        border: '1px dotted'\n      };\n      return React.createElement(Stage, {\n        style: controlStyle,\n        width: 600,\n        height: 120,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Text, {\n        text: \"Control Bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \"// \", React.createElement(Sprite, {\n        sprite: _objectSpread({}, this.props.selectedSprite),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Image, {\n        image: this.state.ctrlImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ControlBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/ControlBar.js"],"names":["React","Component","connect","Stage","Layer","Text","Image","Sprite","ControlBar","state","ctrlImage","image","window","src","props","selectedSprite","url","onload","setState","console","log","controlStyle","position","backgroundColor","bottom","left","border","mapStateToProps","sprite","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,aAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;;;;;yCAIa;AAAA;;AACnB,UAAMC,KAAK,GAAG,IAAIC,MAAM,CAACN,KAAX,EAAd;AACAK,MAAAA,KAAK,CAACE,GAAN,GAAY,KAAKC,KAAL,CAAWC,cAAX,CAA0BC,GAAtC;;AACAL,MAAAA,KAAK,CAACM,MAAN,GAAe,YAAM;AACnB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZR,UAAAA,SAAS,EAAEC;AADC,SAAd;AAGD,OAJD;AAKD;;;6BAEO;AACNQ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC,KAAKN,KAAL,CAAWC,cAA3C;AACA,UAAMM,YAAY,GAAI;AACpBC,QAAAA,QAAQ,EAAE,UADU;AAEpBC,QAAAA,eAAe,EAAE,SAFG;AAGpBC,QAAAA,MAAM,EAAC,KAHa;AAIpBC,QAAAA,IAAI,EAAC,KAJe;AAKpBC,QAAAA,MAAM,EAAE;AALY,OAAtB;AAQA,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEL,YAAd;AAA4B,QAAA,KAAK,EAAE,GAAnC;AAAwC,QAAA,MAAM,EAAE,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,SAEK,oBAAC,MAAD;AAAQ,QAAA,MAAM,oBAAM,KAAKP,KAAL,CAAWC,cAAjB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFL,EAGE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,CADF;AASD;;;;EAlCsBT,S;;AAqCzB,SAAS0B,eAAT,CAAyBlB,KAAzB,EAAgC;AAC9B,SAAO;AACLM,IAAAA,cAAc,EAAEN,KAAK,CAACmB,MAAN,CAAab;AADxB,GAAP;AAGD;;AAED,SAASc,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO,EAAP;AAGD;;AAED,eAAe5B,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Stage, Layer, Text, Image } from 'react-konva';\nimport Sprite from './Sprite'\n\nclass ControlBar extends Component{\n  state = {\n    ctrlImage: null\n  }\n\n  componentDidUpdate() {\n    const image = new window.Image();\n    image.src = this.props.selectedSprite.url\n    image.onload = () => {\n      this.setState({\n        ctrlImage: image\n      });\n    };\n  }\n\n  render(){\n    console.log('control bar props',this.props.selectedSprite)\n    const controlStyle =  {\n      position: 'absolute',\n      backgroundColor: '#EEEEEE',\n      bottom:'0px',\n      left:'20%',\n      border: '1px dotted'\n    }\n\n    return(\n      <Stage style={controlStyle} width={600} height={120}>\n        <Layer>\n          <Text text='Control Bar'/>\n          // <Sprite sprite={{...this.props.selectedSprite}}/>\n          <Image image={this.state.ctrlImage}/>\n        </Layer>\n      </Stage>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);\n"]},"metadata":{},"sourceType":"module"}