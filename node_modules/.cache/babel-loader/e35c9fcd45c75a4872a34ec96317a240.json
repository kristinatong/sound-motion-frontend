{"ast":null,"code":"import _objectSpread from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialSoundState = {\n  sounds: [{\n    id: 1,\n    name: 'guitar sound',\n    url: 'https://archive.org/details/06Midnight/08+Electric+Relaxation.mp3'\n  }, {\n    id: 2,\n    name: 'drums sound',\n    url: 'https://storage.googleapis.com/media-session/sintel/snow-fight.mp3'\n  }, {\n    id: 3,\n    name: 'piano sound',\n    url: 'https://storage.googleapis.com/media-session/big-buck-bunny/prelude.mp3'\n  }, {\n    id: 4,\n    name: 'drums2 sound',\n    url: 'https://storage.googleapis.com/media-session/elephants-dream/the-wires.mp3'\n  }, {\n    id: 5,\n    name: 'headphones sound',\n    url: 'https://storage.googleapis.com/media-session/elephants-dream/the-wires.mp3'\n  }],\n  selectedSound: {}\n};\nexport default function soundReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSoundState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'PLAY_SOUND':\n      return {};\n\n    case 'SELECT_SOUND':\n      return _objectSpread({}, state, {\n        selectedSound: action.payload.selectedSound\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/redux/reducers/soundReducer.js"],"names":["initialSoundState","sounds","id","name","url","selectedSound","soundReducer","state","action","type","payload"],"mappings":";AAAA,IAAMA,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE,CACN;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,cAAb;AAA6BC,IAAAA,GAAG,EAAE;AAAlC,GADM,EAEN;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,aAAb;AAA4BC,IAAAA,GAAG,EAAE;AAAjC,GAFM,EAGN;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,aAAb;AAA4BC,IAAAA,GAAG,EAAE;AAAjC,GAHM,EAIN;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,cAAb;AAA6BC,IAAAA,GAAG,EAAE;AAAlC,GAJM,EAKN;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,kBAAb;AAAiCC,IAAAA,GAAG,EAAE;AAAtC,GALM,CADgB;AAQxBC,EAAAA,aAAa,EAAE;AARS,CAA1B;AAWA,eAAe,SAASC,YAAT,GAAyD;AAAA,MAAnCC,KAAmC,uEAA3BP,iBAA2B;AAAA,MAARQ,MAAQ;;AACtE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,YAAL;AACE,aAAO,EAAP;;AACF,SAAK,cAAL;AACE,+BAAWF,KAAX;AAAkBF,QAAAA,aAAa,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAAhD;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD","sourcesContent":["const initialSoundState = {\n  sounds: [\n    {id:1, name: 'guitar sound', url: 'https://archive.org/details/06Midnight/08+Electric+Relaxation.mp3'},\n    {id:2, name: 'drums sound', url: 'https://storage.googleapis.com/media-session/sintel/snow-fight.mp3'},\n    {id:3, name: 'piano sound', url: 'https://storage.googleapis.com/media-session/big-buck-bunny/prelude.mp3'},\n    {id:4, name: 'drums2 sound', url: 'https://storage.googleapis.com/media-session/elephants-dream/the-wires.mp3'},\n    {id:5, name: 'headphones sound', url: 'https://storage.googleapis.com/media-session/elephants-dream/the-wires.mp3'}\n  ],\n  selectedSound: {}\n};\n\nexport default function soundReducer(state = initialSoundState, action) {\n  switch(action.type) {\n    case 'PLAY_SOUND':\n      return {}\n    case 'SELECT_SOUND':\n      return {...state, selectedSound: action.payload.selectedSound}\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}