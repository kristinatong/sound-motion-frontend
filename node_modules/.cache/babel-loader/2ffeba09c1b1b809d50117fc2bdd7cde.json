{"ast":null,"code":"import _toConsumableArray from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../redux/actions';\n\nimport _changeSprite from '../redux/actions';\nimport Konva from 'konva';\nimport { Stage, Layer, Star, Text } from 'react-konva';\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Canvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDragStart = function (ev) {\n      console.log(_this.props.sprites); // console.log('dragstart:', id);\n      // ev.dataTransfer.setData(\"id\", id);\n    };\n\n    _this.onDragOver = function (ev) {\n      ev.preventDefault();\n    };\n\n    _this.onDrop = function (e) {\n      e.persist();\n      var xStart = e.clientX - 350;\n      var yStart = e.clientY - 120;\n\n      var ctx = _this.refs.spriteLayer.getContext('2d'); // var img = new Image()\n      // img.src = e.dataTransfer.getData(\"id\")\n      // img.onmouseover =\n      // img.onload = function () {\n      //   ctx.drawImage(img,xStart,yStart,80,80);\n      // }\n      // this.props.changeSprite(xStart,yStart)\n\n    };\n\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var canvasStyle = {\n        position: 'absolute',\n        left: '20%',\n        top: '10%',\n        backgroundColor: '#EEEEEE',\n        border: '1px dotted' // return(\n        //   <Fragment>\n        //     <canvas width={700} height={525} style={canvasStyle} ref='canvas' onDragOver={(e)=>this.onDragOver(e)}\n        //       onDragStart = {(e) => this.onDragStart(e)} draggable/>\n        //     <canvas width={700} height={525} style={canvasStyle} ref='spriteLayer' onDragOver={(e)=>this.onDragOver(e)}\n        //       onDragStart = {(e) => this.onDragStart(e)} draggable onDrop={this.onDrop}/>\n        //   </Fragment>\n        // )\n\n      };\n      return React.createElement(Stage, {\n        width: 700,\n        height: 525,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Text, {\n        text: \"Try to drag a star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), _toConsumableArray(Array(10)).map(function (i) {\n        return React.createElement(Star, {\n          key: i,\n          x: Math.random() * window.innerWidth,\n          y: Math.random() * window.innerHeight,\n          numPoints: 5,\n          innerRadius: 20,\n          outerRadius: 40,\n          fill: \"#89b717\",\n          opacity: 0.8,\n          draggable: true,\n          rotation: Math.random() * 180,\n          shadowColor: \"black\",\n          shadowBlur: 10,\n          shadowOpacity: 0.6,\n          onDragStart: _this2.handleDragStart,\n          onDragEnd: _this2.handleDragEnd,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeSprite: function changeSprite(x, y) {\n      dispatch(_changeSprite(x, y));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js"],"names":["React","Component","Fragment","connect","changeSprite","Konva","Stage","Layer","Star","Text","Canvas","onDragStart","ev","console","log","props","sprites","onDragOver","preventDefault","onDrop","e","persist","xStart","clientX","yStart","clientY","ctx","refs","spriteLayer","getContext","canvasStyle","position","left","top","backgroundColor","border","Array","map","i","Math","random","window","innerWidth","innerHeight","handleDragStart","handleDragEnd","mapStateToProps","state","sprite","mapDispatchToProps","dispatch","x","y"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../redux/actions';\nimport changeSprite from '../redux/actions'\nimport Konva from 'konva';\nimport { Stage, Layer, Star, Text } from 'react-konva';\n\n\nclass Canvas extends Component {\n\n  onDragStart = (ev) => {\n    console.log(this.props.sprites)\n    // console.log('dragstart:', id);\n    // ev.dataTransfer.setData(\"id\", id);\n  }\n\n  onDragOver = (ev) => {\n    ev.preventDefault();\n  }\n\n  onDrop = (e) => {\n    e.persist()\n    let xStart = e.clientX-350\n    let yStart = e.clientY-120\n    const ctx = this.refs.spriteLayer.getContext('2d');\n\n    // var img = new Image()\n    // img.src = e.dataTransfer.getData(\"id\")\n    // img.onmouseover =\n    // img.onload = function () {\n    //   ctx.drawImage(img,xStart,yStart,80,80);\n    // }\n    // this.props.changeSprite(xStart,yStart)\n\n  }\n\n  render(){\n    console.log(this.props)\n    const canvasStyle = {\n      position: 'absolute',\n      left: '20%',\n      top: '10%',\n      backgroundColor: '#EEEEEE',\n      border: '1px dotted'}\n\n    // return(\n    //   <Fragment>\n    //     <canvas width={700} height={525} style={canvasStyle} ref='canvas' onDragOver={(e)=>this.onDragOver(e)}\n    //       onDragStart = {(e) => this.onDragStart(e)} draggable/>\n    //     <canvas width={700} height={525} style={canvasStyle} ref='spriteLayer' onDragOver={(e)=>this.onDragOver(e)}\n    //       onDragStart = {(e) => this.onDragStart(e)} draggable onDrop={this.onDrop}/>\n    //   </Fragment>\n    // )\n    return(\n      <Stage width={700} height={525}>\n        <Layer>\n        <Text text=\"Try to drag a star\" />\n        {[...Array(10)].map(i => (\n          <Star\n            key={i}\n            x={Math.random() * window.innerWidth}\n            y={Math.random() * window.innerHeight}\n            numPoints={5}\n            innerRadius={20}\n            outerRadius={40}\n            fill=\"#89b717\"\n            opacity={0.8}\n            draggable\n            rotation={Math.random() * 180}\n            shadowColor=\"black\"\n            shadowBlur={10}\n            shadowOpacity={0.6}\n            onDragStart={this.handleDragStart}\n            onDragEnd={this.handleDragEnd}\n          />\n        ))}\n        </Layer>\n      </Stage>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    changeSprite: (x,y) => {\n      dispatch(changeSprite(x,y))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\n"]},"metadata":{},"sourceType":"module"}