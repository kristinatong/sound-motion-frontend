{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../redux/actions';\n\nimport _changeSprite from '../redux/actions';\nimport Konva from 'konva';\nimport { Stage, Layer, Star, Text, Image } from 'react-konva';\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Canvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDragStart = function (ev) {\n      console.log(_this.props.sprites); // console.log('dragstart:', id);\n      // ev.dataTransfer.setData(\"id\", id);\n    };\n\n    _this.onDragOver = function (ev) {\n      ev.preventDefault();\n    };\n\n    _this.onDrop = function (e) {\n      e.persist();\n      debugger;\n      var xStart = e.clientX - 350;\n      var yStart = e.clientY - 120; // const ctx = this.refs.spriteLayer.getContext('2d');\n      // var img = new Image()\n      // img.src = e.dataTransfer.getData(\"id\")\n      // img.onmouseover =\n      // img.onload = function () {\n      //   ctx.drawImage(img,xStart,yStart,80,80);\n      // }\n      // this.props.changeSprite(xStart,yStart)\n\n      _this.props.changeSprite({\n        xStart: xStart,\n        yStart: yStart\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var stageStyle = {\n        position: 'absolute',\n        left: '20%',\n        top: '10%',\n        backgroundColor: '#EEEEEE',\n        border: '1px dotted' // return(\n        //   <Fragment>\n        //     <canvas width={700} height={525} style={canvasStyle} ref='canvas' onDragOver={(e)=>this.onDragOver(e)}\n        //       onDragStart = {(e) => this.onDragStart(e)} draggable/>\n        //     <canvas width={700} height={525} style={canvasStyle} ref='spriteLayer' onDragOver={(e)=>this.onDragOver(e)}\n        //       onDragStart = {(e) => this.onDragStart(e)} draggable onDrop={this.onDrop}/>\n        //   </Fragment>\n        // )\n\n      };\n      return React.createElement(Stage, {\n        style: stageStyle,\n        width: 700,\n        height: 525,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeSprite: function changeSprite(x, y) {\n      dispatch(_changeSprite(x, y));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js"],"names":["React","Component","Fragment","connect","changeSprite","Konva","Stage","Layer","Star","Text","Image","Canvas","onDragStart","ev","console","log","props","sprites","onDragOver","preventDefault","onDrop","e","persist","xStart","clientX","yStart","clientY","stageStyle","position","left","top","backgroundColor","border","mapStateToProps","state","sprite","mapDispatchToProps","dispatch","x","y"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,aAAP,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,KAAnC,QAAgD,aAAhD;;IAGMC,M;;;;;;;;;;;;;;;;;;UAwBJC,W,GAAc,UAACC,EAAD,EAAQ;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWC,OAAvB,EADoB,CAEpB;AACA;AACD,K;;UAEDC,U,GAAa,UAACL,EAAD,EAAQ;AACnBA,MAAAA,EAAE,CAACM,cAAH;AACD,K;;UAEDC,M,GAAS,UAACC,CAAD,EAAO;AACdA,MAAAA,CAAC,CAACC,OAAF;AACA;AACA,UAAIC,MAAM,GAAGF,CAAC,CAACG,OAAF,GAAU,GAAvB;AACA,UAAIC,MAAM,GAAGJ,CAAC,CAACK,OAAF,GAAU,GAAvB,CAJc,CAKd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAKV,KAAL,CAAWZ,YAAX,CAAwB;AAACmB,QAAAA,MAAM,EAANA,MAAD;AAAQE,QAAAA,MAAM,EAANA;AAAR,OAAxB;AAGD,K;;;;;;;6BAEO;AACNX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAMW,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE,UADO;AAEjBC,QAAAA,IAAI,EAAE,KAFW;AAGjBC,QAAAA,GAAG,EAAE,KAHY;AAIjBC,QAAAA,eAAe,EAAE,SAJA;AAKjBC,QAAAA,MAAM,EAAE,YALS,CAOnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdmB,OAAnB;AAeA,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEL,UAAd;AAA0B,QAAA,KAAK,EAAE,GAAjC;AAAsC,QAAA,MAAM,EAAE,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKP,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD;;;;EA5EkBnB,S;;AA+ErB,SAASgC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLjB,IAAAA,OAAO,EAAEiB,KAAK,CAACC,MAAN,CAAalB;AADjB,GAAP;AAGD;;AAED,SAASmB,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAM;AACJjC,IAAAA,YAAY,EAAE,sBAACkC,CAAD,EAAGC,CAAH,EAAS;AACrBF,MAAAA,QAAQ,CAACjC,aAAY,CAACkC,CAAD,EAAGC,CAAH,CAAb,CAAR;AACD;AAHG,GAAN;AAKD;;AAED,eAAepC,OAAO,CAAC8B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CzB,MAA7C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../redux/actions';\nimport changeSprite from '../redux/actions'\nimport Konva from 'konva';\nimport { Stage, Layer, Star, Text, Image } from 'react-konva';\n\n\nclass Canvas extends Component {\n\n  // handleDragStart = e => {\n  //   e.target.setAttrs({\n  //     shadowOffset: {\n  //       x: 15,\n  //       y: 15\n  //     },\n  //     scaleX: 1.1,\n  //     scaleY: 1.1\n  //   });\n  // };\n  //\n  // handleDragEnd = e => {\n  //   e.target.to({\n  //     duration: 0.5,\n  //     easing: Konva.Easings.ElasticEaseOut,\n  //     scaleX: 1,\n  //     scaleY: 1,\n  //     shadowOffsetX: 5,\n  //     shadowOffsetY: 5\n  //   });\n  // };\n\n  onDragStart = (ev) => {\n    console.log(this.props.sprites)\n    // console.log('dragstart:', id);\n    // ev.dataTransfer.setData(\"id\", id);\n  }\n\n  onDragOver = (ev) => {\n    ev.preventDefault();\n  }\n\n  onDrop = (e) => {\n    e.persist()\n    debugger\n    let xStart = e.clientX-350\n    let yStart = e.clientY-120\n    // const ctx = this.refs.spriteLayer.getContext('2d');\n    // var img = new Image()\n    // img.src = e.dataTransfer.getData(\"id\")\n    // img.onmouseover =\n    // img.onload = function () {\n    //   ctx.drawImage(img,xStart,yStart,80,80);\n    // }\n    // this.props.changeSprite(xStart,yStart)\n\n    this.props.changeSprite({xStart,yStart})\n\n\n  }\n\n  render(){\n    console.log(this.props)\n    const stageStyle = {\n      position: 'absolute',\n      left: '20%',\n      top: '10%',\n      backgroundColor: '#EEEEEE',\n      border: '1px dotted'}\n\n    // return(\n    //   <Fragment>\n    //     <canvas width={700} height={525} style={canvasStyle} ref='canvas' onDragOver={(e)=>this.onDragOver(e)}\n    //       onDragStart = {(e) => this.onDragStart(e)} draggable/>\n    //     <canvas width={700} height={525} style={canvasStyle} ref='spriteLayer' onDragOver={(e)=>this.onDragOver(e)}\n    //       onDragStart = {(e) => this.onDragStart(e)} draggable onDrop={this.onDrop}/>\n    //   </Fragment>\n    // )\n    return(\n      <Stage style={stageStyle} width={700} height={525}>\n        <Layer onDrop={this.onDrop}>\n        </Layer>\n      </Stage>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    changeSprite: (x,y) => {\n      dispatch(changeSprite(x,y))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\n"]},"metadata":{},"sourceType":"module"}