{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SoundBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/sound'; // import { Stage, Layer, Text, Image } from 'react-konva';\n\nimport { selectSound as _selectSound } from '../actions/sound'; // import SoundAdapter from '../apis/SoundAdapter'\n\nvar SoundBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SoundBar, _Component);\n\n  function SoundBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SoundBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SoundBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.selectSound = function (sound) {\n      _this.props.selectSound(sound, _this.props.selectedSprite.uniqueKey);\n    };\n\n    _this.renderSounds = function () {\n      return _this.props.sounds.map(function (sound) {\n        return React.createElement(\"li\", {\n          key: sound.id,\n          onClick: function onClick() {\n            return _this.selectSound(sound);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, sound.name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SoundBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      SoundAdapter.getSounds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('sound bar props', this.props);\n      var soundStyle = {\n        position: 'absolute',\n        right: '0',\n        top: '10',\n        width: '150px',\n        height: '100vh',\n        backgroundColor: '#EEEEEE',\n        borderLeft: '1px dotted'\n      };\n      return React.createElement(\"div\", {\n        style: soundStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Sound Bar\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.renderSounds())); // return(\n      //   <Stage style={soundStyle} width={160} height={800}>\n      //     <Layer>\n      //       <Text text='Sound Bar'/>\n      //     </Layer>\n      //   </Stage>\n      // )\n    }\n  }]);\n\n  return SoundBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds,\n    selectedSound: state.sound.selectedSound,\n    selectedSprite: state.sprite.selectedSprite\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    selectSound: function selectSound(sound, uniqueKey) {\n      dispatch(_selectSound(sound, uniqueKey));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, actions)(SoundBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SoundBar.js"],"names":["React","Component","connect","actions","selectSound","SoundBar","sound","props","selectedSprite","uniqueKey","renderSounds","sounds","map","id","name","SoundAdapter","getSounds","console","log","soundStyle","position","right","top","width","height","backgroundColor","borderLeft","mapStateToProps","state","selectedSound","sprite","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB,C,CACA;;AACA,SAASC,WAAW,IAAXA,YAAT,QAA4B,kBAA5B,C,CACA;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAKJD,W,GAAc,UAACE,KAAD,EAAW;AACvB,YAAKC,KAAL,CAAWH,WAAX,CAAuBE,KAAvB,EAA8B,MAAKC,KAAL,CAAWC,cAAX,CAA0BC,SAAxD;AACD,K;;UAEDC,Y,GAAe,YAAM;AACnB,aAAO,MAAKH,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAsB,UAAAN,KAAK,EAAI;AACpC,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACO,EAAf;AAAmB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKT,WAAL,CAAiBE,KAAjB,CAAN;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4DA,KAAK,CAACQ,IAAlE,CAAP;AACD,OAFM,CAAP;AAGD,K;;;;;;;wCAZkB;AACjBC,MAAAA,YAAY,CAACC,SAAb;AACD;;;6BAYO;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKX,KAAnC;AACA,UAAMY,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE,UADO;AAEjBC,QAAAA,KAAK,EAAE,GAFU;AAGjBC,QAAAA,GAAG,EAAE,IAHY;AAIjBC,QAAAA,KAAK,EAAE,OAJU;AAKjBC,QAAAA,MAAM,EAAE,OALS;AAMjBC,QAAAA,eAAe,EAAE,SANA;AAOjBC,QAAAA,UAAU,EAAE;AAPK,OAAnB;AASA,aACE;AAAK,QAAA,KAAK,EAAEP,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,YAAL,EADH,CAFF,CADF,CAXM,CAmBN;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;;EAzCoBT,S;;AA4CvB,SAAS0B,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLjB,IAAAA,MAAM,EAAEiB,KAAK,CAACtB,KAAN,CAAYK,MADf;AAELkB,IAAAA,aAAa,EAAED,KAAK,CAACtB,KAAN,CAAYuB,aAFtB;AAGLrB,IAAAA,cAAc,EAAEoB,KAAK,CAACE,MAAN,CAAatB;AAHxB,GAAP;AAKD;;AAED,SAASuB,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACL5B,IAAAA,WAAW,EAAE,qBAACE,KAAD,EAAOG,SAAP,EAAqB;AAChCuB,MAAAA,QAAQ,CAAC5B,YAAW,CAACE,KAAD,EAAOG,SAAP,CAAZ,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,eAAeP,OAAO,CAACyB,eAAD,EAAkBxB,OAAlB,CAAP,CAAkCE,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/sound';\n// import { Stage, Layer, Text, Image } from 'react-konva';\nimport { selectSound } from '../actions/sound'\n// import SoundAdapter from '../apis/SoundAdapter'\n\nclass SoundBar extends Component{\n  componentDidMount(){\n    SoundAdapter.getSounds()\n  }\n\n  selectSound = (sound) => {\n    this.props.selectSound(sound, this.props.selectedSprite.uniqueKey)\n  }\n\n  renderSounds = () => {\n    return this.props.sounds.map(sound => {\n      return <li key={sound.id} onClick={() => this.selectSound(sound)}>{sound.name}</li>\n    })\n  }\n\n  render(){\n    console.log('sound bar props',this.props)\n    const soundStyle = {\n      position: 'absolute',\n      right: '0',\n      top: '10',\n      width: '150px',\n      height: '100vh',\n      backgroundColor: '#EEEEEE',\n      borderLeft: '1px dotted'}\n\n    return(\n      <div style={soundStyle}>\n        <h1>Sound Bar</h1>\n        <ul>\n          {this.renderSounds()}\n        </ul>\n      </div>\n    )\n    // return(\n    //   <Stage style={soundStyle} width={160} height={800}>\n    //     <Layer>\n    //       <Text text='Sound Bar'/>\n    //     </Layer>\n    //   </Stage>\n    // )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds,\n    selectedSound: state.sound.selectedSound,\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    selectSound: (sound,uniqueKey) => {\n      dispatch(selectSound(sound,uniqueKey))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, actions)(SoundBar);\n"]},"metadata":{},"sourceType":"module"}