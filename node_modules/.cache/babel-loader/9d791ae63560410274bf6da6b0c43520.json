{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions';\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Canvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDragStart = function (ev, id) {\n      console.log('dragstart:', id);\n      ev.dataTransfer.setData(\"id\", id);\n    };\n\n    _this.onDragOver = function (ev) {\n      ev.preventDefault();\n    };\n\n    _this.onCanvasDrop = function (e) {\n      e.persist();\n      console.log('x', e.clientX, 'y', e.clientY);\n      console.log('pagex', e.pageX, 'pagey', e.pageY);\n\n      var ctx = _this.refs.canvas.getContext('2d');\n\n      var img = new Image();\n\n      img.onload = function () {\n        ctx.drawImage(img, 10, 10);\n      };\n\n      img.src = e.dataTransfer.getData(\"id\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var canvasStyle = {\n        position: 'absolute',\n        width: 480,\n        height: 480,\n        left: '25%',\n        top: '10%',\n        backgroundColor: '#EEEEEE',\n        border: '1px dotted'\n      };\n      return React.createElement(\"canvas\", {\n        style: canvasStyle,\n        onClick: function onClick(e) {\n          return console.log(e.clientX, e.clientY);\n        },\n        ref: \"canvas\",\n        onDragOver: function onDragOver(e) {\n          return _this2.onDragOver(e);\n        },\n        onDrop: this.onCanvasDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {// animalSrc: state.animal.animalSrc,\n    // isLoading: state.animal.isLoading,\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Canvas);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js"],"names":["React","Component","connect","actions","Canvas","onDragStart","ev","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onCanvasDrop","e","persist","clientX","clientY","pageX","pageY","ctx","refs","canvas","getContext","img","Image","onload","drawImage","src","getData","canvasStyle","position","width","height","left","top","backgroundColor","border","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAEJC,W,GAAc,UAACC,EAAD,EAAKC,EAAL,EAAY;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,EAA1B;AACAD,MAAAA,EAAE,CAACI,YAAH,CAAgBC,OAAhB,CAAwB,IAAxB,EAA8BJ,EAA9B;AACD,K;;UAEDK,U,GAAa,UAACN,EAAD,EAAQ;AACnBA,MAAAA,EAAE,CAACO,cAAH;AACD,K;;UAkBDC,Y,GAAe,UAACC,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACC,OAAF;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBM,CAAC,CAACE,OAAlB,EAA0B,GAA1B,EAA8BF,CAAC,CAACG,OAAhC;AACIV,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBM,CAAC,CAACI,KAAtB,EAA4B,OAA5B,EAAoCJ,CAAC,CAACK,KAAtC;;AACJ,UAAMC,GAAG,GAAG,MAAKC,IAAL,CAAUC,MAAV,CAAiBC,UAAjB,CAA4B,IAA5B,CAAZ;;AACA,UAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;;AACAD,MAAAA,GAAG,CAACE,MAAJ,GAAa,YAAY;AACvBN,QAAAA,GAAG,CAACO,SAAJ,CAAcH,GAAd,EAAkB,EAAlB,EAAqB,EAArB;AACD,OAFD;;AAGAA,MAAAA,GAAG,CAACI,GAAJ,GAAUd,CAAC,CAACL,YAAF,CAAeoB,OAAf,CAAuB,IAAvB,CAAV;AACD,K;;;;;;;6BAEO;AAAA;;AACN,UAAMC,WAAW,GAAG;AAClBC,QAAAA,QAAQ,EAAE,UADQ;AAElBC,QAAAA,KAAK,EAAE,GAFW;AAGlBC,QAAAA,MAAM,EAAE,GAHU;AAIlBC,QAAAA,IAAI,EAAE,KAJY;AAKlBC,QAAAA,GAAG,EAAE,KALa;AAMlBC,QAAAA,eAAe,EAAE,SANC;AAOlBC,QAAAA,MAAM,EAAE;AAPU,OAApB;AASA,aACE;AAAQ,QAAA,KAAK,EAAEP,WAAf;AAA4B,QAAA,OAAO,EAAE,iBAAAhB,CAAC;AAAA,iBAAIP,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACE,OAAd,EAAsBF,CAAC,CAACG,OAAxB,CAAJ;AAAA,SAAtC;AAA4E,QAAA,GAAG,EAAC,QAAhF;AAAyF,QAAA,UAAU,EAAE,oBAACH,CAAD;AAAA,iBAAK,MAAI,CAACH,UAAL,CAAgBG,CAAhB,CAAL;AAAA,SAArG;AACU,QAAA,MAAM,EAAE,KAAKD,YADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAID;;;;EArDkBb,S;;AAwDrB,SAASsC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,CACL;AACA;AAFK,GAAP;AAID;;AAED,eAAetC,OAAO,CAACqC,eAAD,EAAkBpC,OAAlB,CAAP,CAAkCC,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions';\n\nclass Canvas extends Component {\n\n  onDragStart = (ev, id) => {\n    console.log('dragstart:', id);\n    ev.dataTransfer.setData(\"id\", id);\n  }\n\n  onDragOver = (ev) => {\n    ev.preventDefault();\n  }\n\n  // onDrop = (ev, cat) => {\n  //   let id = ev.dataTransfer.getData(\"id\");\n  //\n  //   let tasks = this.state.tasks.filter((task) => {\n  //     if (task.name == id) {\n  //       task.category = cat;\n  //     }\n  //     return task;\n  //   });\n  //\n  //   this.setState({\n  //     ...this.state,\n  //     tasks\n  //   });\n  // }\n\n  onCanvasDrop = (e) => {\n    e.persist()\n    console.log('x',e.clientX,'y',e.clientY)\n        console.log('pagex',e.pageX,'pagey',e.pageY)\n    const ctx = this.refs.canvas.getContext('2d');\n    var img = new Image();\n    img.onload = function () {\n      ctx.drawImage(img,10,10);\n    }\n    img.src = e.dataTransfer.getData(\"id\")\n  }\n\n  render(){\n    const canvasStyle = {\n      position: 'absolute',\n      width: 480,\n      height: 480,\n      left: '25%',\n      top: '10%',\n      backgroundColor: '#EEEEEE',\n      border: '1px dotted'}\n\n    return(\n      <canvas style={canvasStyle} onClick={e => console.log(e.clientX,e.clientY)} ref='canvas' onDragOver={(e)=>this.onDragOver(e)}\n                onDrop={this.onCanvasDrop}/>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    // animalSrc: state.animal.animalSrc,\n    // isLoading: state.animal.isLoading,\n  }\n}\n\nexport default connect(mapStateToProps, actions)(Canvas);\n"]},"metadata":{},"sourceType":"module"}