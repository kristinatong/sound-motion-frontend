{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../redux/actions';\n\nimport _changeSprite from '../redux/actions'; // const imageFunction = () =>{\n//   var img = new Image();\n//   img.src = e.dataTransfer.getData(\"id\")\n//   img.onload = function () {\n//     ctx.drawImage(img,xStart,yStart,80,80);\n//   }\n//   this.props.changeSprite(xStart,yStart)\n// }\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Canvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDragStart = function (ev) {\n      console.log(_this.props.sprites); // console.log('dragstart:', id);\n      // ev.dataTransfer.setData(\"id\", id);\n    };\n\n    _this.onDragOver = function (ev) {\n      ev.preventDefault();\n    };\n\n    _this.onDrop = function (e) {\n      e.persist();\n      var xStart = e.clientX - 350;\n      var yStart = e.clientY - 120;\n\n      var ctx = _this.refs.spriteLayer.getContext('2d');\n\n      var img = new Image();\n      img.src = e.dataTransfer.getData(\"id\");\n      img.onmouseover = console.log('test');\n\n      img.onload = function () {\n        ctx.drawImage(img, xStart, yStart, 80, 80);\n      };\n\n      _this.props.changeSprite(xStart, yStart);\n    };\n\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var canvasStyle = {\n        position: 'absolute',\n        left: '20%',\n        top: '10%',\n        backgroundColor: '#EEEEEE',\n        border: '1px dotted'\n      };\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        width: 700,\n        height: 525,\n        style: canvasStyle,\n        ref: \"canvas\",\n        onDragOver: function onDragOver(e) {\n          return _this2.onDragOver(e);\n        },\n        onDragStart: function onDragStart(e) {\n          return _this2.onDragStart(e);\n        },\n        draggable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        width: 700,\n        height: 525,\n        style: canvasStyle,\n        ref: \"spriteLayer\",\n        onDragOver: function onDragOver(e) {\n          return _this2.onDragOver(e);\n        },\n        onDragStart: function onDragStart(e) {\n          return _this2.onDragStart(e);\n        },\n        draggable: true,\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeSprite: function changeSprite(x, y) {\n      dispatch(_changeSprite(x, y));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Canvas.js"],"names":["React","Component","Fragment","connect","changeSprite","Canvas","onDragStart","ev","console","log","props","sprites","onDragOver","preventDefault","onDrop","e","persist","xStart","clientX","yStart","clientY","ctx","refs","spriteLayer","getContext","img","Image","src","dataTransfer","getData","onmouseover","onload","drawImage","canvasStyle","position","left","top","backgroundColor","border","mapStateToProps","state","sprite","mapDispatchToProps","dispatch","x","y"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../redux/actions';\nimport changeSprite from '../redux/actions'\n\n// const imageFunction = () =>{\n//   var img = new Image();\n//   img.src = e.dataTransfer.getData(\"id\")\n//   img.onload = function () {\n//     ctx.drawImage(img,xStart,yStart,80,80);\n//   }\n//   this.props.changeSprite(xStart,yStart)\n// }\n\nclass Canvas extends Component {\n\n  onDragStart = (ev) => {\n    console.log(this.props.sprites)\n    // console.log('dragstart:', id);\n    // ev.dataTransfer.setData(\"id\", id);\n  }\n\n  onDragOver = (ev) => {\n    ev.preventDefault();\n  }\n\n  onDrop = (e) => {\n    e.persist()\n    let xStart = e.clientX-350\n    let yStart = e.clientY-120\n    const ctx = this.refs.spriteLayer.getContext('2d');\n\n    var img = new Image()\n    img.src = e.dataTransfer.getData(\"id\")\n    img.onmouseover=console.log('test')\n    img.onload = function () {\n      ctx.drawImage(img,xStart,yStart,80,80);\n    }\n    this.props.changeSprite(xStart,yStart)\n  }\n\n  render(){\n    console.log(this.props)\n    const canvasStyle = {\n      position: 'absolute',\n      left: '20%',\n      top: '10%',\n      backgroundColor: '#EEEEEE',\n      border: '1px dotted'}\n\n    return(\n      <Fragment>\n        <canvas width={700} height={525} style={canvasStyle} ref='canvas' onDragOver={(e)=>this.onDragOver(e)}\n          onDragStart = {(e) => this.onDragStart(e)} draggable/>\n        <canvas width={700} height={525} style={canvasStyle} ref='spriteLayer' onDragOver={(e)=>this.onDragOver(e)}\n          onDragStart = {(e) => this.onDragStart(e)} draggable onDrop={this.onDrop}/>\n      </Fragment>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    changeSprite: (x,y) => {\n      dispatch(changeSprite(x,y))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\n"]},"metadata":{},"sourceType":"module"}