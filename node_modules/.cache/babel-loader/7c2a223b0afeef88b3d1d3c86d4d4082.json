{"ast":null,"code":"import _defineProperty from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/UploadSound.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { setSounds } from '../actions/sound';\nimport { Button, Form, Segment, Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar'; // import Button from '@material-ui/core/Button';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App';\nimport TextField from '@material-ui/core/TextField';\nvar soundTypes = [{\n  id: 1,\n  name: 'guitar'\n}, {\n  id: 2,\n  name: 'drums'\n}, {\n  id: 3,\n  name: 'piano'\n}];\n\nvar UploadSound =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadSound, _Component);\n\n  function UploadSound() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadSound);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadSound)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      file: null,\n      url: null,\n      soundType: \"\"\n    };\n\n    _this.renderTypes = function () {\n      return soundTypes.map(function (sound) {\n        return React.createElement(Fragment, {\n          key: sound.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          id: sound.name,\n          name: \"soundType\",\n          value: sound.name,\n          onChange: _this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, sound.name));\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var data = new FormData();\n      data.append(\"name\", _this.state.name);\n      data.append(\"file\", _this.state.file);\n      data.append(\"sound_type\", _this.state.soundType);\n      fetch(\"http://localhost:3000/api/v1/sounds\", {\n        method: \"POST\",\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.setState({\n          url: data[data.length - 1].url\n        });\n\n        _this.props.setSounds(data);\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFileUpload = function (event) {\n      console.log(event.nativeEvent, event.target.files, event.target.files[0]);\n\n      _this.setState({\n        file: event.target.files[0]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadSound, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Name: \", React.createElement(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), \"Type: \", this.renderTypes(), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleFileUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), !!this.state.imageURL ? React.createElement(\"img\", {\n        src: this.state.imageURL,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }) : null, React.createElement(MuiThemeProvider, {\n        theme: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: classes.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(LockIcon, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"form\", {\n        className: classes.form,\n        onSubmit: this.handleLoginSubmit,\n        loading: this.props.authenticatingUser,\n        error: this.props.failedLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.props.failedLogin ? React.createElement(Message, {\n        error: true,\n        header: this.props.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }) : null, React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Input, {\n        id: \"email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        name: \"password\",\n        type: \"password\",\n        id: \"password\",\n        onChange: this.handleChange,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Sign in\"))))));\n    }\n  }]);\n\n  return UploadSound;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds\n  };\n} //\n// function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n//\n\n\nexport default connect(mapStateToProps, {\n  setSounds: setSounds\n})(UploadSound); // export default UploadSound","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/UploadSound.js"],"names":["React","Component","Fragment","connect","setSounds","Button","Form","Segment","Message","PropTypes","Avatar","CssBaseline","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockIcon","Paper","Typography","withStyles","MuiThemeProvider","colors","TextField","soundTypes","id","name","UploadSound","state","file","url","soundType","renderTypes","map","sound","handleChange","handleSubmit","event","preventDefault","data","FormData","append","fetch","method","body","then","res","json","setState","length","props","target","value","handleFileUpload","console","log","nativeEvent","files","imageURL","classes","main","paper","avatar","form","handleLoginSubmit","authenticatingUser","failedLogin","error","email","password","mapStateToProps","sounds"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport { setSounds } from '../actions/sound'\nimport { Button, Form, Segment, Message } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\n// import Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App'\nimport TextField from '@material-ui/core/TextField';\n\nconst soundTypes = [{id:1, name: 'guitar'}, {id:2, name: 'drums'}, {id:3, name: 'piano'}]\n\nclass UploadSound extends Component{\n  state = {\n    name: \"\",\n    file: null,\n    url: null,\n    soundType: \"\"\n  };\n\n  renderTypes = () => {\n    return soundTypes.map(sound => {\n      return (<Fragment key={sound.id}><input type=\"radio\" id={sound.name} name=\"soundType\" value={sound.name} onChange={this.handleChange}/><label>{sound.name}</label></Fragment>)\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"name\", this.state.name);\n    data.append(\"file\", this.state.file);\n    data.append(\"sound_type\", this.state.soundType)\n    fetch(\"http://localhost:3000/api/v1/sounds\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ url: data[data.length-1].url });\n        this.props.setSounds(data)\n      });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleFileUpload = event => {\n    console.log(event.nativeEvent, event.target.files, event.target.files[0]);\n    this.setState({\n      file: event.target.files[0],\n    });\n  };\n\n  render(){\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          Name: <input\n            name=\"name\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n\n          Type: {this.renderTypes()}\n          <input type=\"file\" onChange={this.handleFileUpload} />\n          <input type=\"submit\" value=\"Upload\" />\n        </form>\n\n        {!!this.state.imageURL ? (\n          <img src={this.state.imageURL} alt=\"img\" />\n        ) : null}\n\n        <MuiThemeProvider theme={colors}>\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar} >\n            <LockIcon color=\"secondary\"/>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={this.handleLoginSubmit} loading={this.props.authenticatingUser} error={this.props.failedLogin}>\n            {this.props.failedLogin ? <Message error header={this.props.error} /> : null}\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n              <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={this.handleChange} value={this.state.email}/>\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <Input name=\"password\" type=\"password\" id=\"password\" onChange={this.handleChange} value={this.state.password} />\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Sign in\n            </Button>\n          </form>\n        </Paper>\n      </main>\n      </MuiThemeProvider>\n\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds\n  }\n}\n//\n// function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n//\nexport default connect(mapStateToProps, { setSounds })(UploadSound);\n// export default UploadSound\n"]},"metadata":{},"sourceType":"module"}