{"ast":null,"code":"import _toConsumableArray from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SpriteBar.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'; // import Konva from 'konva';\n// import { Stage, Layer, Image, Text } from 'react-konva';\n// import { addSprite } from '../actions/sprite'\n\nimport * as actions from '../actions/sprite';\nimport UUID from 'uuid';\nimport { API_ENDPOINT } from '../adapters/index';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; // import {List, ListItem} from 'material-ui/List';\n// import {Paper} from 'material-ui/Paper'\n\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { colors } from '../App';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    grow: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20\n    },\n    title: _defineProperty({\n      display: 'none'\n    }, theme.breakpoints.up('sm'), {\n      display: 'block'\n    }),\n    search: _defineProperty({\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }),\n    searchIcon: {\n      width: theme.spacing.unit * 9,\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit',\n      width: '100%'\n    },\n    inputInput: _defineProperty({\n      paddingTop: theme.spacing.unit,\n      paddingRight: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      paddingLeft: theme.spacing.unit * 10,\n      transition: theme.transitions.create('width'),\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }) // formControl: {\n    //   minWidth: 120,\n    //   margin: 0,\n    //   fullWidth: true,\n    //   backgroundColor: '#9ee',\n    //   display: 'flex',\n    //   wrap: 'nowrap'\n    // }\n\n  };\n};\n\nvar SpriteBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpriteBar, _Component);\n\n  function SpriteBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SpriteBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SpriteBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedSpriteBar: null,\n      sprites: [],\n      filterBy: 'all'\n    };\n\n    _this.getSpriteTypes = function () {\n      return ['all'].concat(_toConsumableArray(new Set(_this.state.sprites.map(function (item) {\n        return item.sprite_type;\n      })))).map(function (type) {\n        return React.createElement(MenuItem, {\n          value: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, type.toUpperCase());\n      }); // <MenuItem value='instruments'>INSTRUMENTS</MenuItem>\n      // <MenuItem value='custom'>CUSTOM</MenuItem>\n    };\n\n    _this.selectSprite = function (sprite) {\n      _this.setState({\n        selectedSpriteBar: sprite\n      });\n    };\n\n    _this.sprites = function () {\n      // return this.props.sprites.map(sprite => {\n      //   return (\n      //     <Fragment key={sprite.id}>\n      //       <img style={this.state.selectedSpriteBar === sprite ? {width:'60px', height:'60px', border:\"5px solid red\"} : {width:'60px', height:'60px'}} src={sprite.url} onClick={() => this.selectSprite(sprite)} alt={sprite.name} /><br/>\n      //     </Fragment>\n      //   )\n      //   })\n      var filter = function filter() {\n        return _this.state.sprites.filter(function (sprite) {\n          return sprite.sprite_type === _this.state.filterBy;\n        });\n      };\n\n      return _this.state.sprites.map(function (sprite) {\n        return React.createElement(Fragment, {\n          key: sprite.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          style: _this.state.selectedSpriteBar === sprite ? {\n            width: '60px',\n            height: '60px',\n            border: \"3px solid #623149\"\n          } : {\n            width: '60px',\n            height: '60px'\n          },\n          src: sprite.url,\n          onClick: function onClick() {\n            return _this.selectSprite(sprite);\n          },\n          alt: sprite.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }));\n      });\n    };\n\n    _this.filterSprites = function (e) {\n      _this.setState({\n        filterBy: e.target.value\n      });\n    };\n\n    _this.addSpriteMethod = function () {\n      var uniqueKey = UUID(); // if(this.props.selectedSprite){\n      //   this.props.addSprite({...this.state.selectedSprite,uniqueKey:uniqueKey})\n      //   this.setState({selectedSpriteBar: null})\n      // }\n\n      _this.props.addSprite({\n        sprite: _this.state.selectedSpriteBar,\n        uniqueKey: uniqueKey\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SpriteBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(API_ENDPOINT, \"/api/v1/sprites\")).then(function (r) {\n        return r.json();\n      }).then(function (sprites) {\n        _this2.props.setSprites(sprites);\n\n        _this2.setState({\n          sprites: sprites\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.sprites); // const divStyle = {\n      //   position: 'absolute',\n      //   width: '150px',\n      //   height: '100vh',\n      //   left: '0',\n      //   top: '10',\n      //   backgroundColor: '#EEEEEE',\n      //   borderRight: '1px dotted'}\n      // const spriteBarStyle = {\n      //   position: 'absolute',\n      //   // width: '150px',\n      //   // height: '100vh',\n      //   left: '0',\n      //   top: '10',\n      //   backgroundColor: '#EEEEEE',\n      //   borderRight: '1px dotted'}\n      // return(\n      //   <div style={divStyle} onDragOver={(e)=>this.onDragOver(e)}\n      //     onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\n      //     <h1>Sprite Bar</h1>\n      //     {this.sprites()}\n      //     <button onClick={this.props.addSprite}>Add Sprite</button>\n      //   </div>\n      // )\n      // <div className=\"bar spritebar\">\n\n      return React.createElement(\"div\", {\n        id: \"spritebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        shrink: true,\n        htmlFor: \"age-label-placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"IMAGES\"), React.createElement(Select, {\n        value: this.state.filterBy,\n        onChange: this.filterSprites,\n        input: React.createElement(Input, {\n          name: \"filterBy\",\n          id: \"age-label-placeholder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }),\n        displayEmpty: true,\n        name: \"age\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, this.getSpriteTypes()))), React.createElement(\"div\", {\n        id: \"sprite-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, this.sprites()), React.createElement(MuiThemeProvider, {\n        theme: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.addSpriteMethod,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"ADD\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })); // return(\n      //   <div id='spritebar'>\n      //\n      //   </div>\n      // )\n    }\n  }]);\n\n  return SpriteBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites,\n    selectedSprite: state.sprite.selectedSprite\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//     addSprite: (selectedSprite) => {\n//       dispatch(addSprite(selectedSprite))\n//     }\n//   }\n// }\n\n\nexport default connect(mapStateToProps, actions)(SpriteBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SpriteBar.js"],"names":["React","Component","Fragment","connect","actions","UUID","API_ENDPOINT","PropTypes","AppBar","Toolbar","IconButton","Typography","InputBase","fade","withStyles","MenuIcon","SearchIcon","Input","OutlinedInput","FilledInput","InputLabel","MenuItem","FormHelperText","FormControl","Select","Button","MuiThemeProvider","createMuiTheme","colors","styles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","palette","common","white","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","SpriteBar","state","selectedSpriteBar","sprites","filterBy","getSpriteTypes","Set","map","item","sprite_type","type","toUpperCase","selectSprite","sprite","setState","filter","id","border","url","name","filterSprites","e","target","value","addSpriteMethod","uniqueKey","props","addSprite","fetch","then","r","json","setSprites","console","log","mapStateToProps","selectedSprite"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\n// import Konva from 'konva';\n// import { Stage, Layer, Image, Text } from 'react-konva';\n// import { addSprite } from '../actions/sprite'\nimport * as actions from '../actions/sprite'\nimport UUID from 'uuid'\nimport { API_ENDPOINT } from '../adapters/index'\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n// import {List, ListItem} from 'material-ui/List';\n// import {Paper} from 'material-ui/Paper'\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { colors } from '../App'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n  // formControl: {\n  //   minWidth: 120,\n  //   margin: 0,\n  //   fullWidth: true,\n  //   backgroundColor: '#9ee',\n  //   display: 'flex',\n  //   wrap: 'nowrap'\n  // }\n});\n\nclass SpriteBar extends Component{\n  state = {\n    selectedSpriteBar: null,\n    sprites: [],\n    filterBy: 'all'\n  }\n\n  componentDidMount(){\n    fetch(`${API_ENDPOINT}/api/v1/sprites`)\n      .then(r => r.json())\n      .then(sprites => {\n        this.props.setSprites(sprites)\n        this.setState({\n          sprites: sprites\n        })\n      })\n  }\n\n  getSpriteTypes = () => {\n    return (\n      ['all',...new Set(this.state.sprites.map(item => item.sprite_type))].map(type => {\n        return <MenuItem value={type}>{type.toUpperCase()}</MenuItem>\n      })\n    )\n\n    // <MenuItem value='instruments'>INSTRUMENTS</MenuItem>\n    // <MenuItem value='custom'>CUSTOM</MenuItem>\n  }\n\n  selectSprite = (sprite) => {\n    this.setState({\n      selectedSpriteBar: sprite\n    })\n  }\n\n  sprites = () => {\n    // return this.props.sprites.map(sprite => {\n    //   return (\n    //     <Fragment key={sprite.id}>\n    //       <img style={this.state.selectedSpriteBar === sprite ? {width:'60px', height:'60px', border:\"5px solid red\"} : {width:'60px', height:'60px'}} src={sprite.url} onClick={() => this.selectSprite(sprite)} alt={sprite.name} /><br/>\n    //     </Fragment>\n    //   )\n    //   })\n    const filter = () => {\n      return this.state.sprites.filter(sprite => sprite.sprite_type === this.state.filterBy)\n    }\n    return this.state.sprites.map(sprite => {\n      return (\n        <Fragment key={sprite.id}>\n          <img style={this.state.selectedSpriteBar === sprite ? {width:'60px', height:'60px', border:\"3px solid #623149\"} : {width:'60px', height:'60px'}} src={sprite.url} onClick={() => this.selectSprite(sprite)} alt={sprite.name} /><br/>\n        </Fragment>\n      )\n      })\n    }\n\n    filterSprites = (e) => {\n      this.setState({\n        filterBy: e.target.value\n      })\n    }\n\n    // sprites = () => {\n    //   let y = -50\n    //   const imgStyle={width:'100px', height:'100px'}\n    //   return this.props.sprites.map(sprite => {\n    //     const image = new window.Image();\n    //     image.src = sprite.url\n    //     y += 110\n    //     return <Image key={sprite.id}\n    //             image={image}\n    //             onClick={() => this.selectSprite(sprite)}\n    //             x={30}\n    //             y={y}\n    //             width={100}\n    //             height={100}\n    //             stroke='red'\n    //             strokeWidth={5}\n    //             strokeEnabled={this.state.selectedSpriteBar == sprite ? true : false}/>\n    //     })\n    //   }\n\n\n  addSpriteMethod = () => {\n    const uniqueKey = UUID()\n    // if(this.props.selectedSprite){\n    //   this.props.addSprite({...this.state.selectedSprite,uniqueKey:uniqueKey})\n    //   this.setState({selectedSpriteBar: null})\n    // }\n    this.props.addSprite({sprite:this.state.selectedSpriteBar, uniqueKey: uniqueKey})\n  }\n\n  render(){\n    console.log(this.state.sprites)\n    // const divStyle = {\n    //   position: 'absolute',\n    //   width: '150px',\n    //   height: '100vh',\n    //   left: '0',\n    //   top: '10',\n    //   backgroundColor: '#EEEEEE',\n    //   borderRight: '1px dotted'}\n\n    // const spriteBarStyle = {\n    //   position: 'absolute',\n    //   // width: '150px',\n    //   // height: '100vh',\n    //   left: '0',\n    //   top: '10',\n    //   backgroundColor: '#EEEEEE',\n    //   borderRight: '1px dotted'}\n\n\n    // return(\n    //   <div style={divStyle} onDragOver={(e)=>this.onDragOver(e)}\n    //     onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\n    //     <h1>Sprite Bar</h1>\n    //     {this.sprites()}\n    //     <button onClick={this.props.addSprite}>Add Sprite</button>\n    //   </div>\n    // )\n          // <div className=\"bar spritebar\">\n    return(\n      <div id=\"spritebar\">\n        <div className=\"sidebar-nav\">\n        <FormControl className=\"filter\">\n        <InputLabel shrink htmlFor=\"age-label-placeholder\">\n            IMAGES\n          </InputLabel>\n          <Select\n            value={this.state.filterBy}\n            onChange={this.filterSprites}\n            input={<Input name=\"filterBy\" id=\"age-label-placeholder\" />}\n            displayEmpty\n            name=\"age\"\n          >\n            {this.getSpriteTypes()}\n          </Select>\n      </FormControl>\n        </div>\n        <div id='sprite-scroll'>\n        {this.sprites()}\n        </div>\n        <MuiThemeProvider theme={colors}>\n        <Button onClick={this.addSpriteMethod} variant=\"contained\" color=\"secondary\">\n        ADD\n      </Button>\n      </MuiThemeProvider>\n      <br/>\n      </div>\n    )\n    // return(\n    //   <div id='spritebar'>\n    //\n    //   </div>\n    // )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites,\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     addSprite: (selectedSprite) => {\n//       dispatch(addSprite(selectedSprite))\n//     }\n//   }\n// }\n\nexport default connect(mapStateToProps, actions)(SpriteBar);\n"]},"metadata":{},"sourceType":"module"}