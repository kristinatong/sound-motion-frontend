{"ast":null,"code":"import _toConsumableArray from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialSpriteState = {\n  sprites: [{\n    id: 1,\n    name: 'guitar',\n    url: 'https://image.flaticon.com/icons/png/128/26/26843.png'\n  }, {\n    id: 2,\n    name: 'drums',\n    url: 'https://image.flaticon.com/icons/svg/27/27328.svg'\n  }, {\n    id: 3,\n    name: 'piano',\n    url: 'https://image.flaticon.com/icons/svg/27/27066.svg'\n  }, {\n    id: 4,\n    name: 'drums2',\n    url: 'https://image.flaticon.com/icons/svg/26/26995.svg'\n  }, {\n    id: 5,\n    name: 'headphones',\n    url: 'https://image.flaticon.com/icons/svg/26/26834.svg'\n  }],\n  canvasSprites: [],\n  selectedSprite: {\n    id: 4,\n    name: 'drums2',\n    url: 'https://image.flaticon.com/icons/svg/26/26995.svg'\n  }\n};\nexport default function spriteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSpriteState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_SPRITE':\n      return _objectSpread({}, state, {\n        sprites: _toConsumableArray(state.sprites).concat([action.payload])\n      });\n\n    case 'ADD_SPRITE':\n      return _objectSpread({}, state, {\n        canvasSprites: _toConsumableArray(state.canvasSprites).concat([action.payload.selectedSprite])\n      });\n\n    case 'SELECT_SPRITE':\n      debugger;\n      return _objectSpread({}, state, {\n        selectedSprite: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/redux/reducers/spriteReducer.js"],"names":["initialSpriteState","sprites","id","name","url","canvasSprites","selectedSprite","spriteReducer","state","action","type","payload"],"mappings":";;AAAA,IAAMA,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAE,CACP;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,QAAb;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GADO,EAEP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,OAAb;AAAsBC,IAAAA,GAAG,EAAE;AAA3B,GAFO,EAGP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,OAAb;AAAsBC,IAAAA,GAAG,EAAE;AAA3B,GAHO,EAIP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,QAAb;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GAJO,EAKP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,YAAb;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GALO,CADgB;AAQzBC,EAAAA,aAAa,EAAE,EARU;AASzBC,EAAAA,cAAc,EAAE;AAACJ,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,QAAb;AAAuBC,IAAAA,GAAG,EAAE;AAA5B;AATS,CAA3B;AAYA,eAAe,SAASG,aAAT,GAA2D;AAAA,MAApCC,KAAoC,uEAA5BR,kBAA4B;AAAA,MAARS,MAAQ;;AACxE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,eAAL;AACE,+BAAWF,KAAX;AAAkBP,QAAAA,OAAO,qBAAMO,KAAK,CAACP,OAAZ,UAAqBQ,MAAM,CAACE,OAA5B;AAAzB;;AACF,SAAK,YAAL;AACE,+BAAWH,KAAX;AAAkBH,QAAAA,aAAa,qBAAMG,KAAK,CAACH,aAAZ,UAA2BI,MAAM,CAACE,OAAP,CAAeL,cAA1C;AAA/B;;AACF,SAAK,eAAL;AACE;AACA,+BAAWE,KAAX;AAAkBF,QAAAA,cAAc,EAAEG,MAAM,CAACE;AAAzC;;AACF;AACE,aAAOH,KAAP;AATJ;AAWD","sourcesContent":["const initialSpriteState = {\n  sprites: [\n    {id:1, name: 'guitar', url: 'https://image.flaticon.com/icons/png/128/26/26843.png'},\n    {id:2, name: 'drums', url: 'https://image.flaticon.com/icons/svg/27/27328.svg'},\n    {id:3, name: 'piano', url: 'https://image.flaticon.com/icons/svg/27/27066.svg'},\n    {id:4, name: 'drums2', url: 'https://image.flaticon.com/icons/svg/26/26995.svg'},\n    {id:5, name: 'headphones', url: 'https://image.flaticon.com/icons/svg/26/26834.svg'}\n  ],\n  canvasSprites: [],\n  selectedSprite: {id:4, name: 'drums2', url: 'https://image.flaticon.com/icons/svg/26/26995.svg'}\n};\n\nexport default function spriteReducer(state = initialSpriteState, action) {\n  switch(action.type) {\n    case 'CHANGE_SPRITE':\n      return {...state, sprites: [...state.sprites, action.payload] };\n    case 'ADD_SPRITE':\n      return {...state, canvasSprites: [...state.canvasSprites, action.payload.selectedSprite]}\n    case 'SELECT_SPRITE':\n      debugger\n      return {...state, selectedSprite: action.payload}\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}