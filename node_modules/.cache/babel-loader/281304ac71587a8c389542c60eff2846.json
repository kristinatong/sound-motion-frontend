{"ast":null,"code":"import _toConsumableArray from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// import { ADD_USER, UPDATE_ANIMAL } from './types';\nimport { combineReducers } from 'redux';\nvar initialUserState = {\n  users: [],\n  name: ''\n};\nexport function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_USER':\n      return _objectSpread({}, state, {\n        users: _toConsumableArray(state.users).concat([action.payload])\n      });\n    // case DELETE_USER\n    //\n    // case EDIT_USER\n    //\n    // CREATE_EMAIL\n\n    default:\n      return state;\n  }\n}\nvar initialAnimalState = {\n  animalSrc: null,\n  name: ''\n}; // Pure Function - same output for every input, no side effects\n// action = { type, payload }\n\nexport function animalReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAnimalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_ANIMAL:\n      return _objectSpread({}, state, {\n        animalSrc: action.payload\n      });\n    // LIKE_ANIMAL_PICTURE\n    //\n    // DISLIKE_ANIMAL_PICTURE\n\n    default:\n      return state;\n  }\n}\nexport default combineReducers({\n  user: userReducer,\n  animal: animalReducer\n});","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/redux/reducer.js"],"names":["combineReducers","initialUserState","users","name","userReducer","state","action","type","payload","initialAnimalState","animalSrc","animalReducer","UPDATE_ANIMAL","user","animal"],"mappings":";;AAAA;AACA,SAASA,eAAT,QAAgC,OAAhC;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,IAAI,EAAE;AAFiB,CAAzB;AAMA,OAAO,SAASC,WAAT,GAAuD;AAAA,MAAlCC,KAAkC,uEAA1BJ,gBAA0B;AAAA,MAARK,MAAQ;;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,UAAL;AACE,+BAAYF,KAAZ;AAAmBH,QAAAA,KAAK,qBAAMG,KAAK,CAACH,KAAZ,UAAmBI,MAAM,CAACE,OAA1B;AAAxB;AACF;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOH,KAAP;AATJ;AAWD;AAGD,IAAMI,kBAAkB,GAAG;AACzBC,EAAAA,SAAS,EAAE,IADc;AAEzBP,EAAAA,IAAI,EAAE;AAFmB,CAA3B,C,CAKA;AACA;;AACA,OAAO,SAASQ,aAAT,GAA2D;AAAA,MAApCN,KAAoC,uEAA5BI,kBAA4B;AAAA,MAARH,MAAQ;;AAChE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKK,aAAL;AACE,+BAAYP,KAAZ;AAAmBK,QAAAA,SAAS,EAAEJ,MAAM,CAACE;AAArC;AAEF;AACA;AACA;;AACA;AACE,aAAOH,KAAP;AARJ;AAUD;AAED,eAAeL,eAAe,CAAC;AAC7Ba,EAAAA,IAAI,EAAET,WADuB;AAE7BU,EAAAA,MAAM,EAAEH;AAFqB,CAAD,CAA9B","sourcesContent":["// import { ADD_USER, UPDATE_ANIMAL } from './types';\nimport { combineReducers } from 'redux';\n\nconst initialUserState = {\n  users: [],\n  name: '',\n};\n\n\nexport function userReducer(state = initialUserState, action) {\n  switch(action.type) {\n    case 'ADD_USER':\n      return { ...state, users: [...state.users, action.payload] };\n    // case DELETE_USER\n    //\n    // case EDIT_USER\n    //\n    // CREATE_EMAIL\n    default:\n      return state;\n  }\n}\n\n\nconst initialAnimalState = {\n  animalSrc: null,\n  name: '',\n};\n\n// Pure Function - same output for every input, no side effects\n// action = { type, payload }\nexport function animalReducer(state = initialAnimalState, action) {\n  switch(action.type) {\n    case UPDATE_ANIMAL:\n      return { ...state, animalSrc: action.payload };\n\n    // LIKE_ANIMAL_PICTURE\n    //\n    // DISLIKE_ANIMAL_PICTURE\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  user: userReducer,\n  animal: animalReducer,\n})\n"]},"metadata":{},"sourceType":"module"}