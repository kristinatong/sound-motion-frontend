{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Video.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../redux/actions';\n// import { changeSprite } from '../actions/sprite'\n// import Konva from 'konva';\n\nimport { Stage, Layer } from 'react-konva';\nimport SpriteList from './SpriteList';\nimport ControlBar from './ControlBar';\nimport UploadSound from './UploadSound';\nimport { DiffCamEngine } from './diff-cam-engine'; // import * from './adapter-1.0.7'\n\nvar stream; // stream obtained from webcam\n\nvar video; // shows stream\n\nvar captureCanvas; // internal canvas for capturing full images from video\n\nvar captureContext; // context for capture canvas\n\nvar diffCanvas; // internal canvas for diffing downscaled captures\n\nvar diffContext; // context for diff canvas\n\nvar motionCanvas; // receives processed diff images\n\nvar motionContext; // context for motion canvas\n\nvar initSuccessCallback; // called when init succeeds\n\nvar initErrorCallback; // called when init fails\n\nvar startCompleteCallback; // called when start is complete\n\nvar captureCallback; // called when an image has been captured and diffed\n\nvar captureInterval; // interval for continuous captures\n\nvar captureIntervalTime; // time between captures, in ms\n\nvar captureWidth; // full captured image width\n\nvar captureHeight; // full captured image height\n\nvar diffWidth; // downscaled width for diff/motion\n\nvar diffHeight; // downscaled height for diff/motion\n\nvar isReadyToDiff; // has a previous capture been made to diff against?\n\nvar pixelDiffThreshold; // min for a pixel to be considered significant\n\nvar scoreThreshold; // min for an image to be considered significant\n\nvar includeMotionBox; // flag to calculate and draw motion bounding box\n\nvar includeMotionPixels; // flag to create object denoting pixels with motion\n\nvar coords;\n\nvar Video =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Video, _Component);\n\n  function Video() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Video)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      x: 0,\n      y: 0,\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0,\n      captureInterval: null,\n      // video: document.getElementById('video'),\n      // motionCanvas : document.createElement('canvas'),\n      captureIntervalTime: 100,\n      captureWidth: 640,\n      captureHeight: 480,\n      diffWidth: 64,\n      diffHeight: 48,\n      pixelDiffThreshold: 32,\n      scoreThreshold: 16,\n      includeMotionBox: false,\n      includeMotionPixels: false // test : document.createElement('canvas'),\n      // startCompleteCallback : options.startCompleteCallback || function() {},\n      // captureCallback : function() {},\n      // // non-configurable\n      // captureCanvas : document.createElement('canvas'),\n      // diffCanvas : document.createElement('canvas'),\n      // isReadyToDiff : false,\n      //\n      // // prep video\n      // video.autoplay : true,\n      //\n      // // prep capture canvas\n      // captureCanvas.width : captureWidth,\n      // captureCanvas.height : captureHeight,\n      // captureContext : captureCanvas.getContext('2d'),\n      //\n      // // prep diff canvas\n      // diffCanvas.width : diffWidth,\n      // diffCanvas.height : diffHeight,\n      // diffContext : diffCanvas.getContext('2d'),\n      //\n      // // prep motion canvas\n      // motionCanvas.width : diffWidth,\n      // motionCanvas.height : diffHeight,\n      // motionContext : motionCanvas.getContext('2d'),\n      //\n      // //test canvas\n      // test.width : diffWidth,\n      // test.height : diffHeight\n      // testContext : test.getContext('2d')\n\n    };\n\n    _this.getMotion = function () {\n      var canvas = document.getElementById('motion');\n      var video = document.getElementById('video');\n      var score = document.getElementById('score');\n      var test = document.getElementById('test'); // var canvas = this.refs.motion;\n      // var video = this.refs.video\n      // var score = document.getElementById('score');\n      // var test = this.refs.test\n      // let captureInterval = setInterval(DiffCamEngine.capture, 100);\n      // console.log('captureinterval',captureInterval)\n      // this.setState({\n      //   captureInterval: captureInterval\n      // })\n\n      function initSuccess() {\n        DiffCamEngine.start();\n      }\n\n      function initError() {\n        alert('Something went wrong.');\n      }\n\n      function capture(payload) {\n        score.textContent = payload.score;\n      }\n\n      DiffCamEngine.init({\n        video: video,\n        test: test,\n        motionCanvas: canvas,\n        initSuccessCallback: initSuccess,\n        initErrorCallback: initError,\n        captureCallback: capture\n      }); // this.requestWebcam();\n    };\n\n    _this.initSuccess = function (requestedStream) {\n      console.log(requestedStream);\n      stream = requestedStream; // console.log(initSuccessCallback)\n      // initSuccessCallback();\n\n      _this.start();\n    };\n\n    _this.start = function () {\n      video = document.getElementById('video');\n\n      if (!stream) {\n        throw 'Cannot start after init fail';\n      } // streaming takes a moment to start\n\n\n      video.addEventListener('canplay', _this.startComplete);\n      video.srcObject = stream;\n    };\n\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var spriteCanvas = document.getElementsByClassName('konvajs-content')[0].getBoundingClientRect();\n      var captureCanvas = document.createElement('canvas');\n      captureCanvas.width = spriteCanvas.width;\n      captureCanvas.height = spriteCanvas.height;\n      var diffCanvas = document.createElement('canvas');\n      diffCanvas.width = spriteCanvas.width;\n      diffCanvas.height = spriteCanvas.height;\n      this.setState({\n        x: spriteCanvas.x,\n        y: spriteCanvas.y,\n        bottom: spriteCanvas.bottom,\n        height: spriteCanvas.height,\n        left: spriteCanvas.left,\n        right: spriteCanvas.right,\n        top: spriteCanvas.top,\n        width: spriteCanvas.width\n      });\n      var canvas = this.refs.test;\n      var ctx = canvas.getContext('2d');\n\n      var drawSprites = function drawSprites() {\n        return _this2.props.canvasSprites.map(function (sprite) {\n          var image = new window.Image();\n          image.src = sprite.sprite.url;\n\n          image.onload = function () {\n            ctx.drawImage(image, sprite.position.x, sprite.position.y, 60, 60);\n          };\n        });\n      };\n\n      drawSprites();\n      this.requestWebcam();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {// const canvas = this.refs.test\n      // const ctx = canvas.getContext('2d')\n      // ctx.drawImage(this.state.video,0,0)\n      // this.props.canvasSprites.map(sprite =>{\n      //   const image = new window.Image();\n      //     image.src = sprite.sprite.url\n      //     image.onload = () =>{\n      //       ctx.drawImage(image,sprite.position.x,sprite.position.y, 60, 60)\n      //     }\n      //   }\n      // )\n    }\n  }, {\n    key: \"requestWebcam\",\n    // captureCallback(payload) {\n    //   score.textContent = payload.score;\n    // }\n    value: function requestWebcam() {\n      debugger;\n      var constraints = {\n        audio: false,\n        video: {\n          width: this.state.captureWidth,\n          height: this.state.captureHeight\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(this.initSuccess).catch(this.initError);\n    }\n  }, {\n    key: \"initError\",\n    value: function initError(error) {\n      console.log(error); // initErrorCallback();\n\n      alert('Something went wrong.');\n    }\n  }, {\n    key: \"startComplete\",\n    value: function startComplete() {\n      video.removeEventListener('canplay', this.startComplete);\n      motionCanvas = document.getElementById('motion');\n      test = document.getElementById('test');\n      captureInterval = setInterval(this.capture, 100);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      clearInterval(captureInterval);\n      video.src = '';\n      motionContext.clearRect(0, 0, diffWidth, diffHeight);\n      isReadyToDiff = false;\n    }\n  }, {\n    key: \"capture\",\n    value: function capture() {\n      // save a full-sized copy of capture\n      captureContext.drawImage(video, 0, 0, captureWidth, captureHeight);\n      var captureImageData = captureContext.getImageData(0, 0, captureWidth, captureHeight);\n      test.drawImage(video, 0, 0, captureWidth, captureHeight); // diff current capture over previous capture, leftover from last time\n\n      diffContext.globalCompositeOperation = 'difference';\n      diffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n      var diffImageData = diffContext.getImageData(0, 0, diffWidth, diffHeight);\n      console.log(diffImageData);\n      test.drawImage(video, 0, 0, diffWidth, diffHeight);\n      var zimage = document.getElementById('source');\n      test.drawImage(zimage, 33, 71, 104, 124, 21, 20, 87, 104);\n\n      if (isReadyToDiff) {\n        var diff = this.processDiff(diffImageData);\n        motionContext.putImageData(diffImageData, 0, 0);\n\n        if (diff.motionBox) {\n          motionContext.strokeStyle = '#fff';\n          motionContext.strokeRect(diff.motionBox.x.min + 0.5, diff.motionBox.y.min + 0.5, diff.motionBox.x.max - diff.motionBox.x.min, diff.motionBox.y.max - diff.motionBox.y.min);\n        }\n\n        captureCallback({\n          imageData: captureImageData,\n          score: diff.score,\n          hasMotion: diff.score >= scoreThreshold,\n          motionBox: diff.motionBox,\n          motionPixels: diff.motionPixels,\n          getURL: function getURL() {\n            return this.getCaptureUrl(this.imageData);\n          },\n          checkMotionPixel: function checkMotionPixel(x, y) {\n            return this.checkMotionPixel(this.motionPixels, x, y);\n          }\n        });\n      } // draw current capture normally over diff, ready for next time\n\n\n      diffContext.globalCompositeOperation = 'source-over';\n      diffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n      isReadyToDiff = true;\n    }\n  }, {\n    key: \"processDiff\",\n    value: function processDiff(diffImageData) {\n      var rgba = diffImageData.data; // pixel adjustments are done by reference directly on diffImageData\n\n      var score = 0;\n      var motionPixels = includeMotionPixels ? [] : undefined;\n      var motionBox = undefined;\n\n      for (var i = 0; i < rgba.length; i += 4) {\n        var pixelDiff = rgba[i] * 0.3 + rgba[i + 1] * 0.6 + rgba[i + 2] * 0.1;\n        var normalized = Math.min(255, pixelDiff * (255 / pixelDiffThreshold));\n        rgba[i] = 0;\n        rgba[i + 1] = normalized;\n        rgba[i + 2] = 0;\n\n        if (pixelDiff >= pixelDiffThreshold) {\n          score++;\n          coords = this.calculateCoordinates(i / 4);\n\n          if (includeMotionBox) {\n            motionBox = this.calculateMotionBox(motionBox, coords.x, coords.y);\n          }\n\n          if (includeMotionPixels) {\n            motionPixels = this.calculateMotionPixels(motionPixels, coords.x, coords.y, pixelDiff);\n          }\n        }\n      }\n\n      return {\n        score: score,\n        motionBox: score > scoreThreshold ? motionBox : undefined,\n        motionPixels: motionPixels\n      };\n    }\n  }, {\n    key: \"calculateCoordinates\",\n    value: function calculateCoordinates(pixelIndex) {\n      return {\n        x: pixelIndex % diffWidth,\n        y: Math.floor(pixelIndex / diffWidth)\n      };\n    }\n  }, {\n    key: \"calculateMotionBox\",\n    value: function calculateMotionBox(currentMotionBox, x, y) {\n      // init motion box on demand\n      var motionBox = currentMotionBox || {\n        x: {\n          min: coords.x,\n          max: x\n        },\n        y: {\n          min: coords.y,\n          max: y\n        }\n      };\n      motionBox.x.min = Math.min(motionBox.x.min, x);\n      motionBox.x.max = Math.max(motionBox.x.max, x);\n      motionBox.y.min = Math.min(motionBox.y.min, y);\n      motionBox.y.max = Math.max(motionBox.y.max, y);\n      return motionBox;\n    }\n  }, {\n    key: \"calculateMotionPixels\",\n    value: function calculateMotionPixels(motionPixels, x, y, pixelDiff) {\n      motionPixels[x] = motionPixels[x] || [];\n      motionPixels[x][y] = true;\n      return motionPixels;\n    }\n  }, {\n    key: \"getCaptureUrl\",\n    value: function getCaptureUrl(captureImageData) {\n      // may as well borrow captureCanvas\n      captureContext.putImageData(captureImageData, 0, 0);\n      return captureCanvas.toDataURL();\n    }\n  }, {\n    key: \"checkMotionPixel\",\n    value: function checkMotionPixel(motionPixels, x, y) {\n      return motionPixels && motionPixels[x] && motionPixels[x][y];\n    }\n  }, {\n    key: \"getPixelDiffThreshold\",\n    value: function getPixelDiffThreshold() {\n      return pixelDiffThreshold;\n    }\n  }, {\n    key: \"setPixelDiffThreshold\",\n    value: function setPixelDiffThreshold(val) {\n      pixelDiffThreshold = val;\n    }\n  }, {\n    key: \"getScoreThreshold\",\n    value: function getScoreThreshold() {\n      return scoreThreshold;\n    }\n  }, {\n    key: \"setScoreThreshold\",\n    value: function setScoreThreshold(val) {\n      scoreThreshold = val;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('VIDEO STATE', this.state);\n      var videoStyle = {\n        top: 0,\n        left: 0,\n        position: 'absolute',\n        zIndex: 4 // background: 'gray',\n\n      };\n      var motionStyle = {\n        top: this.state.top,\n        left: this.state.left,\n        position: 'absolute',\n        zIndex: -1 // background: 'gray',\n\n      };\n      var testStyle = {\n        top: this.state.top,\n        left: this.state.left,\n        position: 'absolute',\n        zIndex: 4,\n        background: 'red'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"video\",\n        style: videoStyle,\n        width: this.state.width,\n        height: this.state.height,\n        autoPlay: true,\n        ref: \"video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"motion\",\n        style: motionStyle,\n        width: this.state.width,\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"test\",\n        style: testStyle,\n        width: this.state.width,\n        height: this.state.height,\n        ref: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }), React.createElement(\"script\", {\n        src: \"https://webrtc.github.io/adapter/adapter-1.0.7.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    canvasSprites: state.sprite.canvasSprites\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Video.js"],"names":["React","Component","connect","Stage","Layer","SpriteList","ControlBar","UploadSound","DiffCamEngine","stream","video","captureCanvas","captureContext","diffCanvas","diffContext","motionCanvas","motionContext","initSuccessCallback","initErrorCallback","startCompleteCallback","captureCallback","captureInterval","captureIntervalTime","captureWidth","captureHeight","diffWidth","diffHeight","isReadyToDiff","pixelDiffThreshold","scoreThreshold","includeMotionBox","includeMotionPixels","coords","Video","state","x","y","bottom","height","left","right","top","width","getMotion","canvas","document","getElementById","score","test","initSuccess","start","initError","alert","capture","payload","textContent","init","requestedStream","console","log","addEventListener","startComplete","srcObject","spriteCanvas","getElementsByClassName","getBoundingClientRect","createElement","setState","refs","ctx","getContext","drawSprites","props","canvasSprites","map","sprite","image","window","Image","src","url","onload","drawImage","position","requestWebcam","constraints","audio","navigator","mediaDevices","getUserMedia","then","catch","error","removeEventListener","setInterval","clearInterval","clearRect","captureImageData","getImageData","globalCompositeOperation","diffImageData","zimage","diff","processDiff","putImageData","motionBox","strokeStyle","strokeRect","min","max","imageData","hasMotion","motionPixels","getURL","getCaptureUrl","checkMotionPixel","rgba","data","undefined","i","length","pixelDiff","normalized","Math","calculateCoordinates","calculateMotionBox","calculateMotionPixels","pixelIndex","floor","currentMotionBox","toDataURL","val","videoStyle","zIndex","motionStyle","testStyle","background","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,aAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B,C,CACA;;AAEE,IAAIC,MAAJ,C,CAAgB;;AACjB,IAAIC,KAAJ,C,CAAe;;AACf,IAAIC,aAAJ,C,CAAqB;;AACrB,IAAIC,cAAJ,C,CAAsB;;AACtB,IAAIC,UAAJ,C,CAAmB;;AACnB,IAAIC,WAAJ,C,CAAmB;;AACnB,IAAIC,YAAJ,C,CAAoB;;AACpB,IAAIC,aAAJ,C,CAAqB;;AAErB,IAAIC,mBAAJ,C,CAAyB;;AACzB,IAAIC,iBAAJ,C,CAAwB;;AACxB,IAAIC,qBAAJ,C,CAA2B;;AAC3B,IAAIC,eAAJ,C,CAAsB;;AAEtB,IAAIC,eAAJ,C,CAAsB;;AACtB,IAAIC,mBAAJ,C,CAAyB;;AACzB,IAAIC,YAAJ,C,CAAoB;;AACpB,IAAIC,aAAJ,C,CAAqB;;AACrB,IAAIC,SAAJ,C,CAAkB;;AAClB,IAAIC,UAAJ,C,CAAmB;;AACnB,IAAIC,aAAJ,C,CAAqB;;AACrB,IAAIC,kBAAJ,C,CAAyB;;AACzB,IAAIC,cAAJ,C,CAAsB;;AACtB,IAAIC,gBAAJ,C,CAAuB;;AACvB,IAAIC,mBAAJ,C,CAAyB;;AACxB,IAAIC,MAAJ;;IAEIC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,CAAC,EAAE,CADG;AAENC,MAAAA,CAAC,EAAE,CAFG;AAGNC,MAAAA,MAAM,EAAE,CAHF;AAINC,MAAAA,MAAM,EAAE,CAJF;AAKNC,MAAAA,IAAI,EAAE,CALA;AAMNC,MAAAA,KAAK,EAAE,CAND;AAONC,MAAAA,GAAG,EAAE,CAPC;AAQNC,MAAAA,KAAK,EAAE,CARD;AASNrB,MAAAA,eAAe,EAAE,IATX;AAUN;AACA;AACAC,MAAAA,mBAAmB,EAAE,GAZf;AAaNC,MAAAA,YAAY,EAAE,GAbR;AAcNC,MAAAA,aAAa,EAAE,GAdT;AAeNC,MAAAA,SAAS,EAAE,EAfL;AAgBNC,MAAAA,UAAU,EAAE,EAhBN;AAiBNE,MAAAA,kBAAkB,EAAE,EAjBd;AAkBNC,MAAAA,cAAc,EAAE,EAlBV;AAmBNC,MAAAA,gBAAgB,EAAE,KAnBZ;AAoBNC,MAAAA,mBAAmB,EAAE,KApBf,CAqBN;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnDM,K;;UA6GRY,S,GAAY,YAAM;AAChB,UAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACA,UAAIpC,KAAK,GAAGmC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACA,UAAIC,KAAK,GAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACA,UAAIE,IAAI,GAAGH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX,CAJgB,CAKhB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAASG,WAAT,GAAuB;AACrBzC,QAAAA,aAAa,CAAC0C,KAAd;AACD;;AAED,eAASC,SAAT,GAAqB;AACnBC,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;;AAED,eAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxBP,QAAAA,KAAK,CAACQ,WAAN,GAAoBD,OAAO,CAACP,KAA5B;AACD;;AAEDvC,MAAAA,aAAa,CAACgD,IAAd,CAAmB;AACjB9C,QAAAA,KAAK,EAAEA,KADU;AAEjBsC,QAAAA,IAAI,EAAEA,IAFW;AAGjBjC,QAAAA,YAAY,EAAE6B,MAHG;AAIjB3B,QAAAA,mBAAmB,EAAEgC,WAJJ;AAKjB/B,QAAAA,iBAAiB,EAAEiC,SALF;AAMjB/B,QAAAA,eAAe,EAAEiC;AANA,OAAnB,EA5BgB,CAoChB;AACD,K;;UAoBDJ,W,GAAc,UAACQ,eAAD,EAAqB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAhD,MAAAA,MAAM,GAAGgD,eAAT,CAFiC,CAGjC;AACA;;AACA,YAAKP,KAAL;AACD,K;;UAQDA,K,GAAQ,YAAM;AACZxC,MAAAA,KAAK,GAAGmC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAR;;AAEA,UAAI,CAACrC,MAAL,EAAa;AACX,cAAM,8BAAN;AACD,OALW,CAOZ;;;AACAC,MAAAA,KAAK,CAACkD,gBAAN,CAAuB,SAAvB,EAAkC,MAAKC,aAAvC;AACAnD,MAAAA,KAAK,CAACoD,SAAN,GAAkBrD,MAAlB;AACD,K;;;;;;;wCAvImB;AAAA;;AAClB,UAAIsD,YAAY,GAAGlB,QAAQ,CAACmB,sBAAT,CAAgC,iBAAhC,EAAmD,CAAnD,EAAsDC,qBAAtD,EAAnB;AACA,UAAMtD,aAAa,GAAGkC,QAAQ,CAACqB,aAAT,CAAuB,QAAvB,CAAtB;AACAvD,MAAAA,aAAa,CAAC+B,KAAd,GAAsBqB,YAAY,CAACrB,KAAnC;AACA/B,MAAAA,aAAa,CAAC2B,MAAd,GAAuByB,YAAY,CAACzB,MAApC;AACA,UAAMzB,UAAU,GAAGgC,QAAQ,CAACqB,aAAT,CAAuB,QAAvB,CAAnB;AACArD,MAAAA,UAAU,CAAC6B,KAAX,GAAmBqB,YAAY,CAACrB,KAAhC;AACA7B,MAAAA,UAAU,CAACyB,MAAX,GAAoByB,YAAY,CAACzB,MAAjC;AAEA,WAAK6B,QAAL,CAAc;AACZhC,QAAAA,CAAC,EAAE4B,YAAY,CAAC5B,CADJ;AAEZC,QAAAA,CAAC,EAAE2B,YAAY,CAAC3B,CAFJ;AAGZC,QAAAA,MAAM,EAAE0B,YAAY,CAAC1B,MAHT;AAIZC,QAAAA,MAAM,EAAEyB,YAAY,CAACzB,MAJT;AAKZC,QAAAA,IAAI,EAAEwB,YAAY,CAACxB,IALP;AAMZC,QAAAA,KAAK,EAAEuB,YAAY,CAACvB,KANR;AAOZC,QAAAA,GAAG,EAAEsB,YAAY,CAACtB,GAPN;AAQZC,QAAAA,KAAK,EAAEqB,YAAY,CAACrB;AARR,OAAd;AAWA,UAAME,MAAM,GAAG,KAAKwB,IAAL,CAAUpB,IAAzB;AACA,UAAMqB,GAAG,GAAGzB,MAAM,CAAC0B,UAAP,CAAkB,IAAlB,CAAZ;;AAEA,UAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,eAAO,MAAI,CAACC,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA6B,UAAAC,MAAM,EAAI;AAC5C,cAAMC,KAAK,GAAG,IAAIC,MAAM,CAACC,KAAX,EAAd;AACAF,UAAAA,KAAK,CAACG,GAAN,GAAYJ,MAAM,CAACA,MAAP,CAAcK,GAA1B;;AACAJ,UAAAA,KAAK,CAACK,MAAN,GAAe,YAAM;AACnBZ,YAAAA,GAAG,CAACa,SAAJ,CAAcN,KAAd,EAAqBD,MAAM,CAACQ,QAAP,CAAgBhD,CAArC,EAAwCwC,MAAM,CAACQ,QAAP,CAAgB/C,CAAxD,EAA2D,EAA3D,EAA+D,EAA/D;AACD,WAFD;AAGD,SANM,CAAP;AAOD,OARD;;AAUAmC,MAAAA,WAAW;AACX,WAAKa,aAAL;AACD;;;yCAEoB,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;;;AA0CD;AACA;AACA;oCAEgB;AACd;AACA,UAAIC,WAAW,GAAG;AAChBC,QAAAA,KAAK,EAAE,KADS;AAEhB5E,QAAAA,KAAK,EAAE;AACLgC,UAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWX,YADb;AAELe,UAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWV;AAFd;AAFS,OAAlB;AAQA+D,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCJ,WAApC,EACGK,IADH,CACQ,KAAKzC,WADb,EAEG0C,KAFH,CAES,KAAKxC,SAFd;AAGD;;;8BAUSyC,K,EAAO;AACflC,MAAAA,OAAO,CAACC,GAAR,CAAYiC,KAAZ,EADe,CAEf;;AACAxC,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;;;oCAce;AACd1C,MAAAA,KAAK,CAACmF,mBAAN,CAA0B,SAA1B,EAAqC,KAAKhC,aAA1C;AACA9C,MAAAA,YAAY,GAAG8B,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACAE,MAAAA,IAAI,GAAGH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAP;AACAzB,MAAAA,eAAe,GAAGyE,WAAW,CAAC,KAAKzC,OAAN,EAAe,GAAf,CAA7B;AACD;;;2BAEM;AACL0C,MAAAA,aAAa,CAAC1E,eAAD,CAAb;AACAX,MAAAA,KAAK,CAACqE,GAAN,GAAY,EAAZ;AACA/D,MAAAA,aAAa,CAACgF,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BvE,SAA9B,EAAyCC,UAAzC;AACAC,MAAAA,aAAa,GAAG,KAAhB;AACD;;;8BAES;AACR;AACAf,MAAAA,cAAc,CAACsE,SAAf,CAAyBxE,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsCa,YAAtC,EAAoDC,aAApD;AACA,UAAIyE,gBAAgB,GAAGrF,cAAc,CAACsF,YAAf,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC3E,YAAlC,EAAgDC,aAAhD,CAAvB;AAEAwB,MAAAA,IAAI,CAACkC,SAAL,CAAexE,KAAf,EAAsB,CAAtB,EAAyB,CAAzB,EAA4Ba,YAA5B,EAA0CC,aAA1C,EALQ,CAMR;;AACAV,MAAAA,WAAW,CAACqF,wBAAZ,GAAuC,YAAvC;AACArF,MAAAA,WAAW,CAACoE,SAAZ,CAAsBxE,KAAtB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCe,SAAnC,EAA8CC,UAA9C;AACA,UAAI0E,aAAa,GAAGtF,WAAW,CAACoF,YAAZ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+BzE,SAA/B,EAA0CC,UAA1C,CAApB;AACAgC,MAAAA,OAAO,CAACC,GAAR,CAAYyC,aAAZ;AACApD,MAAAA,IAAI,CAACkC,SAAL,CAAexE,KAAf,EAAsB,CAAtB,EAAyB,CAAzB,EAA4Be,SAA5B,EAAuCC,UAAvC;AACA,UAAI2E,MAAM,GAAGxD,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACAE,MAAAA,IAAI,CAACkC,SAAL,CAAemB,MAAf,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,EAAjD,EAAqD,GAArD;;AAEA,UAAI1E,aAAJ,EAAmB;AACjB,YAAI2E,IAAI,GAAG,KAAKC,WAAL,CAAiBH,aAAjB,CAAX;AAEApF,QAAAA,aAAa,CAACwF,YAAd,CAA2BJ,aAA3B,EAA0C,CAA1C,EAA6C,CAA7C;;AACA,YAAIE,IAAI,CAACG,SAAT,EAAoB;AAClBzF,UAAAA,aAAa,CAAC0F,WAAd,GAA4B,MAA5B;AACA1F,UAAAA,aAAa,CAAC2F,UAAd,CACEL,IAAI,CAACG,SAAL,CAAetE,CAAf,CAAiByE,GAAjB,GAAuB,GADzB,EAEEN,IAAI,CAACG,SAAL,CAAerE,CAAf,CAAiBwE,GAAjB,GAAuB,GAFzB,EAGEN,IAAI,CAACG,SAAL,CAAetE,CAAf,CAAiB0E,GAAjB,GAAuBP,IAAI,CAACG,SAAL,CAAetE,CAAf,CAAiByE,GAH1C,EAIEN,IAAI,CAACG,SAAL,CAAerE,CAAf,CAAiByE,GAAjB,GAAuBP,IAAI,CAACG,SAAL,CAAerE,CAAf,CAAiBwE,GAJ1C;AAMD;;AACDxF,QAAAA,eAAe,CAAC;AACd0F,UAAAA,SAAS,EAAEb,gBADG;AAEdlD,UAAAA,KAAK,EAAEuD,IAAI,CAACvD,KAFE;AAGdgE,UAAAA,SAAS,EAAET,IAAI,CAACvD,KAAL,IAAclB,cAHX;AAId4E,UAAAA,SAAS,EAAEH,IAAI,CAACG,SAJF;AAKdO,UAAAA,YAAY,EAAEV,IAAI,CAACU,YALL;AAMdC,UAAAA,MAAM,EAAE,kBAAW;AACjB,mBAAO,KAAKC,aAAL,CAAmB,KAAKJ,SAAxB,CAAP;AACD,WARa;AASdK,UAAAA,gBAAgB,EAAE,0BAAShF,CAAT,EAAYC,CAAZ,EAAe;AAC/B,mBAAO,KAAK+E,gBAAL,CAAsB,KAAKH,YAA3B,EAAyC7E,CAAzC,EAA4CC,CAA5C,CAAP;AACD;AAXa,SAAD,CAAf;AAaD,OAzCO,CA2CR;;;AACAtB,MAAAA,WAAW,CAACqF,wBAAZ,GAAuC,aAAvC;AACArF,MAAAA,WAAW,CAACoE,SAAZ,CAAsBxE,KAAtB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCe,SAAnC,EAA8CC,UAA9C;AACAC,MAAAA,aAAa,GAAG,IAAhB;AACD;;;gCAEWyE,a,EAAe;AACzB,UAAIgB,IAAI,GAAGhB,aAAa,CAACiB,IAAzB,CADyB,CAGzB;;AACA,UAAItE,KAAK,GAAG,CAAZ;AACA,UAAIiE,YAAY,GAAGjF,mBAAmB,GAAG,EAAH,GAAQuF,SAA9C;AACA,UAAIb,SAAS,GAAGa,SAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,YAAIE,SAAS,GAAGL,IAAI,CAACG,CAAD,CAAJ,GAAU,GAAV,GAAgBH,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAc,GAA9B,GAAoCH,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAc,GAAlE;AACA,YAAIG,UAAU,GAAGC,IAAI,CAACf,GAAL,CAAS,GAAT,EAAca,SAAS,IAAI,MAAM7F,kBAAV,CAAvB,CAAjB;AACAwF,QAAAA,IAAI,CAACG,CAAD,CAAJ,GAAU,CAAV;AACAH,QAAAA,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAcG,UAAd;AACAN,QAAAA,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAc,CAAd;;AAEA,YAAIE,SAAS,IAAI7F,kBAAjB,EAAqC;AACnCmB,UAAAA,KAAK;AACLf,UAAAA,MAAM,GAAG,KAAK4F,oBAAL,CAA0BL,CAAC,GAAG,CAA9B,CAAT;;AAEA,cAAIzF,gBAAJ,EAAsB;AACpB2E,YAAAA,SAAS,GAAG,KAAKoB,kBAAL,CAAwBpB,SAAxB,EAAmCzE,MAAM,CAACG,CAA1C,EAA6CH,MAAM,CAACI,CAApD,CAAZ;AACD;;AAED,cAAIL,mBAAJ,EAAyB;AACvBiF,YAAAA,YAAY,GAAG,KAAKc,qBAAL,CAA2Bd,YAA3B,EAAyChF,MAAM,CAACG,CAAhD,EAAmDH,MAAM,CAACI,CAA1D,EAA6DqF,SAA7D,CAAf;AACD;AAEF;AACF;;AAED,aAAO;AACL1E,QAAAA,KAAK,EAAEA,KADF;AAEL0D,QAAAA,SAAS,EAAE1D,KAAK,GAAGlB,cAAR,GAAyB4E,SAAzB,GAAqCa,SAF3C;AAGLN,QAAAA,YAAY,EAAEA;AAHT,OAAP;AAKD;;;yCAEoBe,U,EAAY;AAC/B,aAAO;AACL5F,QAAAA,CAAC,EAAE4F,UAAU,GAAGtG,SADX;AAELW,QAAAA,CAAC,EAAEuF,IAAI,CAACK,KAAL,CAAWD,UAAU,GAAGtG,SAAxB;AAFE,OAAP;AAID;;;uCAEkBwG,gB,EAAkB9F,C,EAAGC,C,EAAG;AACzC;AACA,UAAIqE,SAAS,GAAGwB,gBAAgB,IAAI;AAClC9F,QAAAA,CAAC,EAAE;AACDyE,UAAAA,GAAG,EAAE5E,MAAM,CAACG,CADX;AAED0E,UAAAA,GAAG,EAAE1E;AAFJ,SAD+B;AAKlCC,QAAAA,CAAC,EAAE;AACDwE,UAAAA,GAAG,EAAE5E,MAAM,CAACI,CADX;AAEDyE,UAAAA,GAAG,EAAEzE;AAFJ;AAL+B,OAApC;AAWAqE,MAAAA,SAAS,CAACtE,CAAV,CAAYyE,GAAZ,GAAkBe,IAAI,CAACf,GAAL,CAASH,SAAS,CAACtE,CAAV,CAAYyE,GAArB,EAA0BzE,CAA1B,CAAlB;AACAsE,MAAAA,SAAS,CAACtE,CAAV,CAAY0E,GAAZ,GAAkBc,IAAI,CAACd,GAAL,CAASJ,SAAS,CAACtE,CAAV,CAAY0E,GAArB,EAA0B1E,CAA1B,CAAlB;AACAsE,MAAAA,SAAS,CAACrE,CAAV,CAAYwE,GAAZ,GAAkBe,IAAI,CAACf,GAAL,CAASH,SAAS,CAACrE,CAAV,CAAYwE,GAArB,EAA0BxE,CAA1B,CAAlB;AACAqE,MAAAA,SAAS,CAACrE,CAAV,CAAYyE,GAAZ,GAAkBc,IAAI,CAACd,GAAL,CAASJ,SAAS,CAACrE,CAAV,CAAYyE,GAArB,EAA0BzE,CAA1B,CAAlB;AAEA,aAAOqE,SAAP;AACD;;;0CAEqBO,Y,EAAc7E,C,EAAGC,C,EAAGqF,S,EAAW;AACnDT,MAAAA,YAAY,CAAC7E,CAAD,CAAZ,GAAkB6E,YAAY,CAAC7E,CAAD,CAAZ,IAAmB,EAArC;AACA6E,MAAAA,YAAY,CAAC7E,CAAD,CAAZ,CAAgBC,CAAhB,IAAqB,IAArB;AAEA,aAAO4E,YAAP;AACD;;;kCAEaf,gB,EAAkB;AAC9B;AACArF,MAAAA,cAAc,CAAC4F,YAAf,CAA4BP,gBAA5B,EAA8C,CAA9C,EAAiD,CAAjD;AACA,aAAOtF,aAAa,CAACuH,SAAd,EAAP;AACD;;;qCAEgBlB,Y,EAAc7E,C,EAAGC,C,EAAG;AACnC,aAAO4E,YAAY,IAAIA,YAAY,CAAC7E,CAAD,CAA5B,IAAmC6E,YAAY,CAAC7E,CAAD,CAAZ,CAAgBC,CAAhB,CAA1C;AACD;;;4CAEuB;AACtB,aAAOR,kBAAP;AACD;;;0CAEqBuG,G,EAAK;AACzBvG,MAAAA,kBAAkB,GAAGuG,GAArB;AACD;;;wCAEmB;AAClB,aAAOtG,cAAP;AACD;;;sCAEiBsG,G,EAAK;AACrBtG,MAAAA,cAAc,GAAGsG,GAAjB;AACD;;;6BACO;AACNzE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKzB,KAAhC;AACA,UAAMkG,UAAU,GAAE;AAChB3F,QAAAA,GAAG,EAAE,CADW;AAEhBF,QAAAA,IAAI,EAAE,CAFU;AAGhB4C,QAAAA,QAAQ,EAAE,UAHM;AAIhBkD,QAAAA,MAAM,EAAE,CAJQ,CAKhB;;AALgB,OAAlB;AAQA,UAAMC,WAAW,GAAE;AACjB7F,QAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWO,GADC;AAEjBF,QAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IAFA;AAGjB4C,QAAAA,QAAQ,EAAE,UAHO;AAIjBkD,QAAAA,MAAM,EAAE,CAAC,CAJQ,CAKjB;;AALiB,OAAnB;AAQA,UAAME,SAAS,GAAE;AACf9F,QAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWO,GADD;AAEfF,QAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IAFF;AAGf4C,QAAAA,QAAQ,EAAE,UAHK;AAIfkD,QAAAA,MAAM,EAAE,CAJO;AAKfG,QAAAA,UAAU,EAAE;AALG,OAAjB;AAQA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,KAAK,EAAEJ,UAAzB;AAAqC,QAAA,KAAK,EAAE,KAAKlG,KAAL,CAAWQ,KAAvD;AAA8D,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWI,MAAjF;AAAyF,QAAA,QAAQ,MAAjG;AAAkG,QAAA,GAAG,EAAC,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,KAAK,EAAEgG,WAA3B;AAAwC,QAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWQ,KAA1D;AAAiE,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWI,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAEiG,SAAzB;AAAoC,QAAA,KAAK,EAAE,KAAKrG,KAAL,CAAWQ,KAAtD;AAA6D,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWI,MAAhF;AAAwF,QAAA,GAAG,EAAC,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAQ,QAAA,GAAG,EAAC,mDAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EAnYiBrC,S;;AAsYpB,SAASwI,eAAT,CAAyBvG,KAAzB,EAAgC;AAC9B,SAAO;AACLuC,IAAAA,aAAa,EAAEvC,KAAK,CAACyC,MAAN,CAAaF;AADvB,GAAP;AAGD;;AAED,SAASiE,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO,EAAP;AACD;;AAED,eAAezI,OAAO,CAACuI,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzG,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../redux/actions';\n// import { changeSprite } from '../actions/sprite'\n// import Konva from 'konva';\nimport { Stage, Layer } from 'react-konva';\nimport SpriteList from './SpriteList'\nimport ControlBar from './ControlBar'\nimport UploadSound from './UploadSound'\nimport { DiffCamEngine } from './diff-cam-engine'\n// import * from './adapter-1.0.7'\n\n  var stream;\t\t\t\t\t// stream obtained from webcam\n\tvar video;\t\t\t\t\t// shows stream\n\tvar captureCanvas;\t\t\t// internal canvas for capturing full images from video\n\tvar captureContext;\t\t\t// context for capture canvas\n\tvar diffCanvas;\t\t\t\t// internal canvas for diffing downscaled captures\n\tvar diffContext;\t\t\t// context for diff canvas\n\tvar motionCanvas;\t\t\t// receives processed diff images\n\tvar motionContext;\t\t\t// context for motion canvas\n\n\tvar initSuccessCallback;\t// called when init succeeds\n\tvar initErrorCallback;\t\t// called when init fails\n\tvar startCompleteCallback;\t// called when start is complete\n\tvar captureCallback;\t\t// called when an image has been captured and diffed\n\n\tvar captureInterval;\t\t// interval for continuous captures\n\tvar captureIntervalTime;\t// time between captures, in ms\n\tvar captureWidth;\t\t\t// full captured image width\n\tvar captureHeight;\t\t\t// full captured image height\n\tvar diffWidth;\t\t\t\t// downscaled width for diff/motion\n\tvar diffHeight;\t\t\t\t// downscaled height for diff/motion\n\tvar isReadyToDiff;\t\t\t// has a previous capture been made to diff against?\n\tvar pixelDiffThreshold;\t\t// min for a pixel to be considered significant\n\tvar scoreThreshold;\t\t\t// min for an image to be considered significant\n\tvar includeMotionBox;\t\t// flag to calculate and draw motion bounding box\n\tvar includeMotionPixels;\t// flag to create object denoting pixels with motion\n  var coords;\n\nclass Video extends Component {\n  state = {\n    x: 0,\n    y: 0,\n    bottom: 0,\n    height: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    width: 0,\n    captureInterval: null,\n    // video: document.getElementById('video'),\n    // motionCanvas : document.createElement('canvas'),\n    captureIntervalTime: 100,\n    captureWidth: 640,\n    captureHeight: 480,\n    diffWidth: 64,\n    diffHeight: 48,\n    pixelDiffThreshold: 32,\n    scoreThreshold: 16,\n    includeMotionBox: false,\n    includeMotionPixels: false,\n    // test : document.createElement('canvas'),\n    // startCompleteCallback : options.startCompleteCallback || function() {},\n    // captureCallback : function() {},\n\n    // // non-configurable\n    // captureCanvas : document.createElement('canvas'),\n    // diffCanvas : document.createElement('canvas'),\n    // isReadyToDiff : false,\n    //\n    // // prep video\n    // video.autoplay : true,\n    //\n    // // prep capture canvas\n    // captureCanvas.width : captureWidth,\n    // captureCanvas.height : captureHeight,\n    // captureContext : captureCanvas.getContext('2d'),\n    //\n    // // prep diff canvas\n    // diffCanvas.width : diffWidth,\n    // diffCanvas.height : diffHeight,\n    // diffContext : diffCanvas.getContext('2d'),\n    //\n    // // prep motion canvas\n    // motionCanvas.width : diffWidth,\n    // motionCanvas.height : diffHeight,\n    // motionContext : motionCanvas.getContext('2d'),\n    //\n    // //test canvas\n    // test.width : diffWidth,\n    // test.height : diffHeight\n    // testContext : test.getContext('2d')\n\n  }\n\n  componentDidMount() {\n    let spriteCanvas = document.getElementsByClassName('konvajs-content')[0].getBoundingClientRect()\n    const captureCanvas = document.createElement('canvas');\n    captureCanvas.width = spriteCanvas.width\n    captureCanvas.height = spriteCanvas.height\n    const diffCanvas = document.createElement('canvas');\n    diffCanvas.width = spriteCanvas.width\n    diffCanvas.height = spriteCanvas.height\n\n    this.setState({\n      x: spriteCanvas.x,\n      y: spriteCanvas.y,\n      bottom: spriteCanvas.bottom,\n      height: spriteCanvas.height,\n      left: spriteCanvas.left,\n      right: spriteCanvas.right,\n      top: spriteCanvas.top,\n      width: spriteCanvas.width\n    })\n\n    const canvas = this.refs.test\n    const ctx = canvas.getContext('2d')\n\n    const drawSprites = () => {\n      return this.props.canvasSprites.map(sprite => {\n        const image = new window.Image();\n        image.src = sprite.sprite.url\n        image.onload = () => {\n          ctx.drawImage(image, sprite.position.x, sprite.position.y, 60, 60)\n        }\n      })\n    }\n\n    drawSprites()\n    this.requestWebcam();\n  }\n\n  componentDidUpdate() {\n    // const canvas = this.refs.test\n    // const ctx = canvas.getContext('2d')\n    // ctx.drawImage(this.state.video,0,0)\n    // this.props.canvasSprites.map(sprite =>{\n    //   const image = new window.Image();\n    //     image.src = sprite.sprite.url\n    //     image.onload = () =>{\n    //       ctx.drawImage(image,sprite.position.x,sprite.position.y, 60, 60)\n    //     }\n    //   }\n    // )\n\n  }\n\n\n\n  getMotion = () => {\n    var canvas = document.getElementById('motion');\n    var video = document.getElementById('video');\n    var score = document.getElementById('score');\n    var test = document.getElementById('test')\n    // var canvas = this.refs.motion;\n    // var video = this.refs.video\n    // var score = document.getElementById('score');\n    // var test = this.refs.test\n\n    // let captureInterval = setInterval(DiffCamEngine.capture, 100);\n    // console.log('captureinterval',captureInterval)\n    // this.setState({\n    //   captureInterval: captureInterval\n    // })\n\n    function initSuccess() {\n      DiffCamEngine.start();\n    }\n\n    function initError() {\n      alert('Something went wrong.');\n    }\n\n    function capture(payload) {\n      score.textContent = payload.score;\n    }\n\n    DiffCamEngine.init({\n      video: video,\n      test: test,\n      motionCanvas: canvas,\n      initSuccessCallback: initSuccess,\n      initErrorCallback: initError,\n      captureCallback: capture\n    });\n    // this.requestWebcam();\n  }\n  // captureCallback(payload) {\n  //   score.textContent = payload.score;\n  // }\n\n  requestWebcam() {\n    debugger\n    var constraints = {\n      audio: false,\n      video: {\n        width: this.state.captureWidth,\n        height: this.state.captureHeight\n      }\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(this.initSuccess)\n      .catch(this.initError);\n  }\n\n  initSuccess = (requestedStream) => {\n    console.log(requestedStream)\n    stream = requestedStream\n    // console.log(initSuccessCallback)\n    // initSuccessCallback();\n    this.start();\n  }\n\n  initError(error) {\n    console.log(error);\n    // initErrorCallback();\n    alert('Something went wrong.');\n  }\n\n  start = () => {\n    video = document.getElementById('video');\n\n    if (!stream) {\n      throw 'Cannot start after init fail';\n    }\n\n    // streaming takes a moment to start\n    video.addEventListener('canplay', this.startComplete);\n    video.srcObject = stream;\n  }\n\n  startComplete() {\n    video.removeEventListener('canplay', this.startComplete);\n    motionCanvas = document.getElementById('motion')\n    test = document.getElementById('test')\n    captureInterval = setInterval(this.capture, 100);\n  }\n\n  stop() {\n    clearInterval(captureInterval);\n    video.src = '';\n    motionContext.clearRect(0, 0, diffWidth, diffHeight);\n    isReadyToDiff = false;\n  }\n\n  capture() {\n    // save a full-sized copy of capture\n    captureContext.drawImage(video, 0, 0, captureWidth, captureHeight);\n    var captureImageData = captureContext.getImageData(0, 0, captureWidth, captureHeight);\n\n    test.drawImage(video, 0, 0, captureWidth, captureHeight);\n    // diff current capture over previous capture, leftover from last time\n    diffContext.globalCompositeOperation = 'difference';\n    diffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n    var diffImageData = diffContext.getImageData(0, 0, diffWidth, diffHeight);\n    console.log(diffImageData)\n    test.drawImage(video, 0, 0, diffWidth, diffHeight);\n    var zimage = document.getElementById('source');\n    test.drawImage(zimage, 33, 71, 104, 124, 21, 20, 87, 104);\n\n    if (isReadyToDiff) {\n      var diff = this.processDiff(diffImageData);\n\n      motionContext.putImageData(diffImageData, 0, 0);\n      if (diff.motionBox) {\n        motionContext.strokeStyle = '#fff';\n        motionContext.strokeRect(\n          diff.motionBox.x.min + 0.5,\n          diff.motionBox.y.min + 0.5,\n          diff.motionBox.x.max - diff.motionBox.x.min,\n          diff.motionBox.y.max - diff.motionBox.y.min\n        );\n      }\n      captureCallback({\n        imageData: captureImageData,\n        score: diff.score,\n        hasMotion: diff.score >= scoreThreshold,\n        motionBox: diff.motionBox,\n        motionPixels: diff.motionPixels,\n        getURL: function() {\n          return this.getCaptureUrl(this.imageData);\n        },\n        checkMotionPixel: function(x, y) {\n          return this.checkMotionPixel(this.motionPixels, x, y)\n        }\n      });\n    }\n\n    // draw current capture normally over diff, ready for next time\n    diffContext.globalCompositeOperation = 'source-over';\n    diffContext.drawImage(video, 0, 0, diffWidth, diffHeight);\n    isReadyToDiff = true;\n  }\n\n  processDiff(diffImageData) {\n    var rgba = diffImageData.data;\n\n    // pixel adjustments are done by reference directly on diffImageData\n    var score = 0;\n    var motionPixels = includeMotionPixels ? [] : undefined;\n    var motionBox = undefined;\n    for (var i = 0; i < rgba.length; i += 4) {\n      var pixelDiff = rgba[i] * 0.3 + rgba[i + 1] * 0.6 + rgba[i + 2] * 0.1;\n      var normalized = Math.min(255, pixelDiff * (255 / pixelDiffThreshold));\n      rgba[i] = 0;\n      rgba[i + 1] = normalized;\n      rgba[i + 2] = 0;\n\n      if (pixelDiff >= pixelDiffThreshold) {\n        score++;\n        coords = this.calculateCoordinates(i / 4);\n\n        if (includeMotionBox) {\n          motionBox = this.calculateMotionBox(motionBox, coords.x, coords.y);\n        }\n\n        if (includeMotionPixels) {\n          motionPixels = this.calculateMotionPixels(motionPixels, coords.x, coords.y, pixelDiff);\n        }\n\n      }\n    }\n\n    return {\n      score: score,\n      motionBox: score > scoreThreshold ? motionBox : undefined,\n      motionPixels: motionPixels\n    };\n  }\n\n  calculateCoordinates(pixelIndex) {\n    return {\n      x: pixelIndex % diffWidth,\n      y: Math.floor(pixelIndex / diffWidth)\n    };\n  }\n\n  calculateMotionBox(currentMotionBox, x, y) {\n    // init motion box on demand\n    var motionBox = currentMotionBox || {\n      x: {\n        min: coords.x,\n        max: x\n      },\n      y: {\n        min: coords.y,\n        max: y\n      }\n    };\n\n    motionBox.x.min = Math.min(motionBox.x.min, x);\n    motionBox.x.max = Math.max(motionBox.x.max, x);\n    motionBox.y.min = Math.min(motionBox.y.min, y);\n    motionBox.y.max = Math.max(motionBox.y.max, y);\n\n    return motionBox;\n  }\n\n  calculateMotionPixels(motionPixels, x, y, pixelDiff) {\n    motionPixels[x] = motionPixels[x] || [];\n    motionPixels[x][y] = true;\n\n    return motionPixels;\n  }\n\n  getCaptureUrl(captureImageData) {\n    // may as well borrow captureCanvas\n    captureContext.putImageData(captureImageData, 0, 0);\n    return captureCanvas.toDataURL();\n  }\n\n  checkMotionPixel(motionPixels, x, y) {\n    return motionPixels && motionPixels[x] && motionPixels[x][y];\n  }\n\n  getPixelDiffThreshold() {\n    return pixelDiffThreshold;\n  }\n\n  setPixelDiffThreshold(val) {\n    pixelDiffThreshold = val;\n  }\n\n  getScoreThreshold() {\n    return scoreThreshold;\n  }\n\n  setScoreThreshold(val) {\n    scoreThreshold = val;\n  }\n  render(){\n    console.log('VIDEO STATE', this.state)\n    const videoStyle= {\n      top: 0,\n      left: 0,\n      position: 'absolute',\n      zIndex: 4,\n      // background: 'gray',\n    }\n\n    const motionStyle= {\n      top: this.state.top,\n      left: this.state.left,\n      position: 'absolute',\n      zIndex: -1,\n      // background: 'gray',\n    }\n\n    const testStyle= {\n      top: this.state.top,\n      left: this.state.left,\n      position: 'absolute',\n      zIndex: 4,\n      background: 'red'\n    }\n\n    return(\n      <div>\n        <video id=\"video\" style={videoStyle} width={this.state.width} height={this.state.height} autoPlay ref='video'></video>\n        <canvas id='motion' style={motionStyle} width={this.state.width} height={this.state.height}/>\n        <canvas id='test' style={testStyle} width={this.state.width} height={this.state.height} ref='test'/>\n        <span id=\"score\"></span>\n        <script src=\"https://webrtc.github.io/adapter/adapter-1.0.7.js\"></script>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    canvasSprites: state.sprite.canvasSprites\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);\n"]},"metadata":{},"sourceType":"module"}