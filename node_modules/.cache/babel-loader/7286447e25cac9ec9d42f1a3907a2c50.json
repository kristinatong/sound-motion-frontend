{"ast":null,"code":"// import { API_ENDPOINT } from '../adapters/index'\nexport var\n/*FUNCTION*/\nloginUser = function loginUser(email, password) {\n  debugger;\n  return (\n    /*FUNCTION*/\n    function (dispatch) {\n      //thunk\n      // console.log(process.env.REACT_APP_API_ENDPOINT)\n      // dispatch({ type: 'AUTHENTICATING_USER' })\n      dispatch(authenticatingUser()); // fetch(`${process.env.REACT_APP_API_ENDPOINT}/api/v1/login`)\n\n      fetch(\"http://localhost:4000/api/v1/login\", {\n        //TODO: move this to an adapter\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            email: email,\n            password: password\n          }\n        })\n      }).then(function (response) {\n        if (response.ok) {\n          //was the HTTP status code < 400\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      /* { user:\n        { email: 'chandler bing', bio: '', avatar: '' },\n        jwt: 'aaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbbbb.ccccccccccccccccccc'\n      } */\n      .then(function (JSONResponse) {\n        debugger;\n        console.log('%c INSIDE YE OLDE .THEN', 'color: navy');\n        localStorage.setItem('jwt', JSONResponse.jwt); // dispatch({ type: 'SET_CURRENT_USER', payload: JSONResponse.user })\n\n        dispatch(setCurrentUser(JSONResponse.user));\n      }).catch(function (r) {\n        return r.json().then(function (e) {\n          return dispatch({\n            type: 'FAILED_LOGIN',\n            payload: e.message\n          });\n        });\n      }); // .then((jsonResponse) => {\n      //   localStorage.setItem('jwt', jsonResponse.jwt)\n      //   dispatch(setCurrentUser(jsonResponse.user))\n      // })\n    }\n  );\n};\nexport var fetchCurrentUser = function fetchCurrentUser() {\n  // takes the token in localStorage and finds out who it belongs to\n  return function (dispatch) {\n    dispatch(authenticatingUser()); //tells the app we are fetching\n\n    fetch(\"http://localhost:4000/api/v1/profile\", {\n      method: 'GET',\n      headers: {\n        Authorization: \"Bearer \".concat(localStorage.getItem('jwt'))\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (JSONResponse) {\n      return dispatch(setCurrentUser(JSONResponse.user));\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(userData) {\n  debugger;\n}; // ({\n//   type: 'SET_CURRENT_USER',\n//   payload: userData\n// })\n\nexport var logOut = function logOut() {\n  localStorage.removeItem('jwt');\n  return {\n    type: 'LOG_OUT'\n  };\n};\nexport var failedLogin = function failedLogin(errorMsg) {\n  return {\n    type: 'FAILED_LOGIN',\n    payload: errorMsg\n  };\n}; // tell our app we're currently fetching\n\nexport var authenticatingUser = function authenticatingUser() {\n  return {\n    type: 'AUTHENTICATING_USER'\n  };\n};","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/actions/user.js"],"names":["loginUser","email","password","dispatch","authenticatingUser","fetch","method","headers","Accept","body","JSON","stringify","user","then","response","ok","json","JSONResponse","console","log","localStorage","setItem","jwt","setCurrentUser","catch","r","e","type","payload","message","fetchCurrentUser","Authorization","getItem","userData","logOut","removeItem","failedLogin","errorMsg"],"mappings":"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","sourcesContent":["// import { API_ENDPOINT } from '../adapters/index'\n\nexport const /*FUNCTION*/ loginUser = (email, password) => {\n  debugger\n  return /*FUNCTION*/ (dispatch) => { //thunk\n    // console.log(process.env.REACT_APP_API_ENDPOINT)\n    // dispatch({ type: 'AUTHENTICATING_USER' })\n    dispatch(authenticatingUser())\n    // fetch(`${process.env.REACT_APP_API_ENDPOINT}/api/v1/login`)\n    fetch(`http://localhost:4000/api/v1/login`, { //TODO: move this to an adapter\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: email,\n          password: password\n        }\n      })\n    })\n      .then(response => {\n        if (response.ok) { //was the HTTP status code < 400\n          return response.json()\n        } else {\n          throw response\n        }\n      })\n      /* { user:\n        { email: 'chandler bing', bio: '', avatar: '' },\n        jwt: 'aaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbbbb.ccccccccccccccccccc'\n      } */\n      .then(JSONResponse => {\n        debugger\n        console.log('%c INSIDE YE OLDE .THEN', 'color: navy')\n        localStorage.setItem('jwt', JSONResponse.jwt)\n        // dispatch({ type: 'SET_CURRENT_USER', payload: JSONResponse.user })\n        dispatch(setCurrentUser(JSONResponse.user))\n      })\n      .catch(r => r.json().then(e => dispatch({ type: 'FAILED_LOGIN', payload: e.message })))\n      // .then((jsonResponse) => {\n      //   localStorage.setItem('jwt', jsonResponse.jwt)\n      //   dispatch(setCurrentUser(jsonResponse.user))\n      // })\n  }\n}\n\nexport const fetchCurrentUser = () => {\n  // takes the token in localStorage and finds out who it belongs to\n  return (dispatch) => {\n    dispatch(authenticatingUser()) //tells the app we are fetching\n    fetch(`http://localhost:4000/api/v1/profile`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`\n      }\n    })\n      .then(response => response.json())\n      .then((JSONResponse) => dispatch(setCurrentUser(JSONResponse.user)))\n  }\n}\n\nexport const setCurrentUser = (userData) => {\n  debugger\n}\n// ({\n//   type: 'SET_CURRENT_USER',\n//   payload: userData\n// })\n\nexport const logOut = () => {\n  localStorage.removeItem('jwt')\n  return {\n    type: 'LOG_OUT'\n  }\n}\n\nexport const failedLogin = (errorMsg) => ({\n  type: 'FAILED_LOGIN',\n  payload: errorMsg\n})\n\n// tell our app we're currently fetching\nexport const authenticatingUser = () => ({ type: 'AUTHENTICATING_USER' })\n"]},"metadata":{},"sourceType":"module"}