{"ast":null,"code":"import _toConsumableArray from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar defaultSpriteState = {\n  // sprites: [\n  //   {id:1, name: 'guitar', url: 'https://image.flaticon.com/icons/png/128/26/26843.png'},\n  //   {id:2, name: 'drums', url: 'https://image.flaticon.com/icons/svg/27/27328.svg'},\n  //   {id:3, name: 'piano', url: 'https://image.flaticon.com/icons/svg/27/27066.svg'},\n  //   {id:4, name: 'drums2', url: 'https://image.flaticon.com/icons/svg/26/26995.svg'}\n  // ],\n  sprites: [],\n  canvasSprites: [],\n  selectedSprite: {}\n};\nexport default function spriteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSpriteState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index;\n  var sprite;\n\n  switch (action.type) {\n    case 'SET_SPRITES':\n      return _objectSpread({}, state, {\n        sprites: action.sprites\n      });\n\n    case 'ADD_SPRITE':\n      return _objectSpread({}, state, {\n        canvasSprites: _toConsumableArray(state.canvasSprites).concat([action.sprite]),\n        selectedSprite: action.sprite\n      });\n\n    case 'SELECT_SPRITE':\n      var findSprite = state.canvasSprites.find(function (sprite) {\n        return sprite.uniqueKey === action.uniqueKey;\n      });\n      return _objectSpread({}, state, {\n        selectedSprite: findSprite\n      });\n\n    case 'SELECT_SOUND':\n      index = state.canvasSprites.findIndex(function (sprite) {\n        return sprite.uniqueKey === action.payload.uniqueKey;\n      });\n      sprite = state.canvasSprites[index];\n      return _objectSpread({}, state, {\n        selectedSprite: _objectSpread({}, state.selectedSprite, {\n          sound: _objectSpread({}, action.payload.selectedSound, {\n            url: action.payload.url,\n            loop: action.payload.loop\n          })\n        }),\n        canvasSprites: _toConsumableArray(state.canvasSprites.slice(0, index)).concat([Object.assign({}, sprite, {\n          sound: _objectSpread({}, action.payload.selectedSound, {\n            url: action.payload.url,\n            loop: action.payload.loop\n          })\n        })], _toConsumableArray(state.canvasSprites.slice(index + 1)))\n      });\n\n    case 'LOOP_SOUND':\n      index = state.canvasSprites.findIndex(function (sprite) {\n        return sprite.uniqueKey === state.selectedSprite.uniqueKey;\n      });\n      sprite = state.canvasSprites[index];\n      return _objectSpread({}, state, {\n        selectedSprite: _objectSpread({}, state.selectedSprite, {\n          sound: _objectSpread({}, state.selectedSprite.sound, {\n            loop: !state.selectedSprite.sound.loop\n          })\n        }),\n        canvasSprites: _toConsumableArray(state.canvasSprites.slice(0, index)).concat([Object.assign({}, sprite, {\n          sound: _objectSpread({}, state.selectedSprite.sound, {\n            loop: !state.selectedSprite.sound.loop\n          })\n        })], _toConsumableArray(state.canvasSprites.slice(index + 1)))\n      });\n\n    case 'CLEAR_SELECTED':\n      return _objectSpread({}, state, {\n        selectedSprite: {}\n      });\n\n    case 'CHANGE_DJ_MODE':\n      debugger;\n      state.canvasSprites.map(function (sprite) {\n        debugger;\n\n        if (document.getElementById(sprite.uniqueKey)) {\n          var player = document.getElementById(sprite.uniqueKey);\n          player.pause();\n          player.currentTime = 0;\n        } else {\n          var _player = document.createElement(\"AUDIO\");\n\n          _player.id = sprite.uniqueKey;\n\n          _player.setAttribute(\"src\", sprite.sound.url); // player.autoplay = true\n\n\n          _player.loop = sprite.sound.loop;\n\n          _player.load();\n\n          document.body.appendChild(_player);\n        }\n      });\n      return {\n        state: state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/redux/reducers/spriteReducer.js"],"names":["defaultSpriteState","sprites","canvasSprites","selectedSprite","spriteReducer","state","action","index","sprite","type","findSprite","find","uniqueKey","findIndex","payload","sound","selectedSound","url","loop","slice","Object","assign","map","document","getElementById","player","pause","currentTime","createElement","id","setAttribute","load","body","appendChild"],"mappings":"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","sourcesContent":["const defaultSpriteState = {\n  // sprites: [\n  //   {id:1, name: 'guitar', url: 'https://image.flaticon.com/icons/png/128/26/26843.png'},\n  //   {id:2, name: 'drums', url: 'https://image.flaticon.com/icons/svg/27/27328.svg'},\n  //   {id:3, name: 'piano', url: 'https://image.flaticon.com/icons/svg/27/27066.svg'},\n  //   {id:4, name: 'drums2', url: 'https://image.flaticon.com/icons/svg/26/26995.svg'}\n  // ],\n  sprites: [],\n  canvasSprites: [],\n  selectedSprite: {}\n};\n\nexport default function spriteReducer(state = defaultSpriteState, action) {\n  let index\n  let sprite\n  switch (action.type) {\n    case 'SET_SPRITES':\n      return { ...state,\n        sprites: action.sprites\n      }\n    case 'ADD_SPRITE':\n      return { ...state,\n        canvasSprites: [...state.canvasSprites, action.sprite],\n        selectedSprite: action.sprite\n      }\n    case 'SELECT_SPRITE':\n      const findSprite = state.canvasSprites.find(sprite => sprite.uniqueKey === action.uniqueKey)\n      return { ...state,\n        selectedSprite: findSprite\n      }\n    case 'SELECT_SOUND':\n      index = state.canvasSprites.findIndex(sprite => sprite.uniqueKey === action.payload.uniqueKey)\n      sprite = state.canvasSprites[index]\n      return {\n        ...state,\n        selectedSprite: { ...state.selectedSprite,\n          sound: { ...action.payload.selectedSound,\n            url: action.payload.url,\n            loop: action.payload.loop\n          }\n        },\n        canvasSprites: [\n          ...state.canvasSprites.slice(0, index),\n          Object.assign({}, sprite, {\n            sound: { ...action.payload.selectedSound,\n              url: action.payload.url,\n              loop: action.payload.loop\n            }\n          }),\n          ...state.canvasSprites.slice(index + 1)\n        ]\n      }\n    case 'LOOP_SOUND':\n      index = state.canvasSprites.findIndex(sprite => sprite.uniqueKey === state.selectedSprite.uniqueKey)\n      sprite = state.canvasSprites[index]\n      return { ...state,\n        selectedSprite: { ...state.selectedSprite,\n          sound: { ...state.selectedSprite.sound,\n            loop: !state.selectedSprite.sound.loop\n          }\n        },\n        canvasSprites: [\n          ...state.canvasSprites.slice(0, index),\n          Object.assign({}, sprite, {\n            sound: { ...state.selectedSprite.sound,\n              loop: !state.selectedSprite.sound.loop\n            }\n          }),\n          ...state.canvasSprites.slice(index + 1)\n        ]\n      }\n    case 'CLEAR_SELECTED':\n      return {...state,selectedSprite:{}}\n    case 'CHANGE_DJ_MODE':\n      debugger\n      state.canvasSprites.map(sprite => {\n        debugger\n        if(document.getElementById(sprite.uniqueKey)){\n          let player = document.getElementById(sprite.uniqueKey)\n          player.pause();\n          player.currentTime = 0;\n        }else{\n          let player = document.createElement(\"AUDIO\");\n          player.id = sprite.uniqueKey\n          player.setAttribute(\"src\",sprite.sound.url)\n          // player.autoplay = true\n          player.loop = sprite.sound.loop\n          player.load()\n          document.body.appendChild(player)\n        }})\n      return {state}\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}