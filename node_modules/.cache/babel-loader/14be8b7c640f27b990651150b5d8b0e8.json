{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Player.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player';\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Player, _Component);\n\n  function Player() {\n    _classCallCheck(this, Player);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Player).apply(this, arguments));\n  }\n\n  _createClass(Player, [{\n    key: \"render\",\n    value: function render() {\n      console.log('PLAYER PROPS', this.props);\n      var playerStyle = {\n        position: 'absolute',\n        bottom: '30px',\n        left: '40%',\n        border: '1px dotted'\n      };\n\n      if (this.props.selectedSprite.sound) {\n        return React.createElement(ReactPlayer, {\n          style: playerStyle,\n          width: 300,\n          height: 50,\n          url: this.props.selectedSprite.selectedSound.url,\n          playing: true,\n          controls: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Player;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Player.js"],"names":["React","Component","connect","ReactPlayer","Player","console","log","props","playerStyle","position","bottom","left","border","selectedSprite","sound","selectedSound","url","mapStateToProps","state","sprite","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;IAEMC,M;;;;;;;;;;;;;6BAEI;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKC,KAAhC;AACA,UAAMC,WAAW,GAAI;AACnBC,QAAAA,QAAQ,EAAE,UADS;AAEnBC,QAAAA,MAAM,EAAC,MAFY;AAGnBC,QAAAA,IAAI,EAAC,KAHc;AAInBC,QAAAA,MAAM,EAAE;AAJW,OAArB;;AAOA,UAAG,KAAKL,KAAL,CAAWM,cAAX,CAA0BC,KAA7B,EAAmC;AACjC,eACI,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAEN,WAApB;AAAiC,UAAA,KAAK,EAAE,GAAxC;AAA6C,UAAA,MAAM,EAAE,EAArD;AAAyD,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWM,cAAX,CAA0BE,aAA1B,CAAwCC,GAAtG;AAA2G,UAAA,OAAO,MAAlH;AAAmH,UAAA,QAAQ,EAAE,IAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,OAJD,MAIK;AACH,eAAO,IAAP;AACD;AACF;;;;EAlBkBf,S;;AAqBrB,SAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLL,IAAAA,cAAc,EAAEK,KAAK,CAACC,MAAN,CAAaN;AADxB,GAAP;AAGD;;AAED,SAASO,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO,EAAP;AAGD;;AAED,eAAenB,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport ReactPlayer from 'react-player'\n\nclass Player extends Component{\n\n  render(){\n    console.log('PLAYER PROPS',this.props)\n    const playerStyle =  {\n      position: 'absolute',\n      bottom:'30px',\n      left:'40%',\n      border: '1px dotted'\n    }\n\n    if(this.props.selectedSprite.sound){\n      return(\n          <ReactPlayer style={playerStyle} width={300} height={50} url={this.props.selectedSprite.selectedSound.url} playing controls={true}/>\n      )\n    }else{\n      return null\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\n"]},"metadata":{},"sourceType":"module"}