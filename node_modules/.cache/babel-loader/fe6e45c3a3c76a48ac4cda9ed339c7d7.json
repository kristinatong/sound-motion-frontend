{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/ControlBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Stage, Layer, Text, Image } from 'react-konva';\nimport Player from './Player';\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App';\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ControlBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ControlBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ctrlImage: null,\n      imageStatus: null,\n      url: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ControlBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var image = new window.Image();\n      image.src = this.props.selectedSprite.sprite.url;\n      image.width = 100;\n      image.height = 100;\n\n      image.onload = function () {\n        _this2.setState({\n          ctrlImage: image\n        });\n      };\n    }\n  }, {\n    key: \"handleImageLoaded\",\n    value: function handleImageLoaded() {\n      this.setState({\n        imageStatus: \"loaded\"\n      });\n    }\n  }, {\n    key: \"handleImageErrored\",\n    value: function handleImageErrored() {\n      this.setState({\n        imageStatus: \"failed to load\"\n      });\n    }\n  }, {\n    key: \"handlePlay\",\n    value: function handlePlay() {// this.setState({ imageStatus: \"failed to load\" });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"controlbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Stage, {\n        className: \"control-canvas\",\n        width: 200,\n        height: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Image, {\n        image: this.state.ctrlImage,\n        x: 0,\n        y: 0,\n        width: 80,\n        height: 80,\n        stroke: \"red\",\n        strokeWidth: 2,\n        strokeEnabled: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(Player, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(MuiThemeProvider, {\n        theme: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handlePlay,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"DJ MODE\")));\n    }\n  }]);\n\n  return ControlBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/ControlBar.js"],"names":["React","Component","connect","Stage","Layer","Text","Image","Player","Button","MuiThemeProvider","colors","ControlBar","state","ctrlImage","imageStatus","url","image","window","src","props","selectedSprite","sprite","width","height","onload","setState","handlePlay","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,aAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,WAAW,EAAE,IAFP;AAGNC,MAAAA,GAAG,EAAE;AAHC,K;;;;;;yCAMa;AAAA;;AACnB,UAAMC,KAAK,GAAG,IAAIC,MAAM,CAACX,KAAX,EAAd;AACAU,MAAAA,KAAK,CAACE,GAAN,GAAY,KAAKC,KAAL,CAAWC,cAAX,CAA0BC,MAA1B,CAAiCN,GAA7C;AACAC,MAAAA,KAAK,CAACM,KAAN,GAAc,GAAd;AACAN,MAAAA,KAAK,CAACO,MAAN,GAAe,GAAf;;AACAP,MAAAA,KAAK,CAACQ,MAAN,GAAe,YAAM;AACnB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZZ,UAAAA,SAAS,EAAEG;AADC,SAAd;AAGD,OAJD;AAKD;;;wCAEmB;AAClB,WAAKS,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;;;yCAEoB;AACnB,WAAKW,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;;;iCAEY,CACX;AACD;;;6BAEO;AACN,aACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,KAAK,EAAE,GAAzC;AAA8C,QAAA,MAAM,EAAE,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,SAAzB;AACI,QAAA,CAAC,EAAE,CADP;AAEI,QAAA,CAAC,EAAE,CAFP;AAGI,QAAA,KAAK,EAAE,EAHX;AAII,QAAA,MAAM,EAAE,EAJZ;AAKI,QAAA,MAAM,EAAC,KALX;AAMI,QAAA,WAAW,EAAE,CANjB;AAOI,QAAA,aAAa,EAAE,KAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADJ,EAaI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,EAcI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEH,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKgB,UAAtB;AAAkC,QAAA,OAAO,EAAC,WAA1C;AAAsD,QAAA,KAAK,EAAC,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAdJ,CADF;AAuBD;;;;EAvDsBzB,S;;AA0DzB,SAAS0B,eAAT,CAAyBf,KAAzB,EAAgC;AAC9B,SAAO;AACLQ,IAAAA,cAAc,EAAER,KAAK,CAACS,MAAN,CAAaD;AADxB,GAAP;AAGD;;AAED,SAASQ,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO,EAAP;AAGD;;AAED,eAAe3B,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Stage, Layer, Text, Image } from 'react-konva';\nimport Player from './Player'\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App'\n\nclass ControlBar extends Component{\n  state = {\n    ctrlImage: null,\n    imageStatus: null,\n    url: \"\"\n  }\n\n  componentDidUpdate() {\n    const image = new window.Image();\n    image.src = this.props.selectedSprite.sprite.url\n    image.width = 100\n    image.height = 100\n    image.onload = () => {\n      this.setState({\n        ctrlImage: image\n      });\n    };\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageStatus: \"loaded\" });\n  }\n\n  handleImageErrored() {\n    this.setState({ imageStatus: \"failed to load\" });\n  }\n\n  handlePlay() {\n    // this.setState({ imageStatus: \"failed to load\" });\n  }\n\n  render(){\n    return(\n      <div id='controlbar'>\n          <Stage className='control-canvas' width={200} height={100}>\n            <Layer>\n              <Image image={this.state.ctrlImage}\n                  x={0}\n                  y={0}\n                  width={80}\n                  height={80}\n                  stroke='red'\n                  strokeWidth={2}\n                  strokeEnabled={false}/>\n            </Layer>\n          </Stage>\n          <Player/>\n          <MuiThemeProvider theme={colors}>\n            <Button onClick={this.handlePlay} variant=\"contained\" color=\"secondary\">\n            DJ MODE\n            </Button>\n          </MuiThemeProvider>\n      </div>\n    )\n\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);\n"]},"metadata":{},"sourceType":"module"}