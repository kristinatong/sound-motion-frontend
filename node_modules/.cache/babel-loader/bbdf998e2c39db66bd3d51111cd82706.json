{"ast":null,"code":"import _objectSpread from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar defaultUserState = {\n  user: null,\n  loggedIn: false,\n  authenticatingUser: false,\n  failedLogin: false,\n  error: null\n};\n\nvar usersReducer =\n/*FUNCTION*/\nfunction usersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultUserState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // TODO: move to types\n    case 'SET_CURRENT_USER':\n      debugger; //action.payload { username: 'Chandler Bing', bio: 'my user bio', avatar: 'some image url' }\n\n      return _objectSpread({}, state, {\n        user: action.payload,\n        loggedIn: true,\n        authenticatingUser: false\n      });\n\n    case 'AUTHENTICATING_USER':\n      //tells the app we're fetching\n      return _objectSpread({}, state, {\n        authenticatingUser: true\n      });\n\n    case 'AUTHENTICATED_USER':\n      return _objectSpread({}, state, {\n        authenticatingUser: false\n      });\n\n    case 'FAILED_LOGIN':\n      //for error handling\n      return _objectSpread({}, state, {\n        failedLogin: true,\n        error: action.payload,\n        authenticatingUser: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/redux/reducers/userReducer.js"],"names":["defaultUserState","user","loggedIn","authenticatingUser","failedLogin","error","usersReducer","state","action","type","payload"],"mappings":";AAAA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,IADiB;AAEvBC,EAAAA,QAAQ,EAAE,KAFa;AAGvBC,EAAAA,kBAAkB,EAAE,KAHG;AAIvBC,EAAAA,WAAW,EAAE,KAJU;AAKvBC,EAAAA,KAAK,EAAE;AALgB,CAAzB;;AAQA,IAAMC,YAAY;AAAG;AAAa,SAA5BA,YAA4B,GAAoC;AAAA,MAAnCC,KAAmC,uEAA7BP,gBAA6B;AAAA,MAAXQ,MAAW;;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAK,kBAAL;AACE,eADF,CAEE;;AACA,+BAAYF,KAAZ;AAAmBN,QAAAA,IAAI,EAAEO,MAAM,CAACE,OAAhC;AAAyCR,QAAAA,QAAQ,EAAE,IAAnD;AAAyDC,QAAAA,kBAAkB,EAAE;AAA7E;;AACF,SAAK,qBAAL;AAA4B;AAC1B,+BAAYI,KAAZ;AAAmBJ,QAAAA,kBAAkB,EAAE;AAAvC;;AACF,SAAK,oBAAL;AACE,+BAAYI,KAAZ;AAAmBJ,QAAAA,kBAAkB,EAAE;AAAvC;;AACF,SAAK,cAAL;AAAqB;AACnB,+BACKI,KADL;AAEEH,QAAAA,WAAW,EAAE,IAFf;AAGEC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAHhB;AAIEP,QAAAA,kBAAkB,EAAE;AAJtB;;AAMF;AACE,aAAOI,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,YAAf","sourcesContent":["const defaultUserState = {\n  user: null,\n  loggedIn: false,\n  authenticatingUser: false,\n  failedLogin: false,\n  error: null\n}\n\nconst usersReducer = /*FUNCTION*/ (state=defaultUserState, action) => {\n  switch (action.type) {\n    // TODO: move to types\n    case 'SET_CURRENT_USER':\n      debugger\n      //action.payload { username: 'Chandler Bing', bio: 'my user bio', avatar: 'some image url' }\n      return { ...state, user: action.payload, loggedIn: true, authenticatingUser: false }\n    case 'AUTHENTICATING_USER': //tells the app we're fetching\n      return { ...state, authenticatingUser: true }\n    case 'AUTHENTICATED_USER':\n      return { ...state, authenticatingUser: false }\n    case 'FAILED_LOGIN': //for error handling\n      return {\n        ...state,\n        failedLogin: true,\n        error: action.payload,\n        authenticatingUser: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default usersReducer\n"]},"metadata":{},"sourceType":"module"}