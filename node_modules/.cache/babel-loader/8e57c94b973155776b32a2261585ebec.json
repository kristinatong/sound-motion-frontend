{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SpriteBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/actions'; // import Konva from 'konva';\n// import { Stage, Layer, Image } from 'react-konva';\n\nvar SpriteBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpriteBar, _Component);\n\n  function SpriteBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SpriteBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SpriteBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedSprite: null // onDragStart = (ev, id) => {\n      //   ev.dataTransfer.setData(\"id\", id);\n      // }\n      //\n      // onDragOver = (ev) => {\n      //   ev.preventDefault();\n      // }\n      // sprites = () => {\n      //   const imgStyle={width:'100px', height:'100px'}\n      //   return this.props.sprites.map(sprite => {\n      //     return <img key={sprite.id} style={imgStyle} onDragStart = {(e) => this.onDragStart(e, sprite.url)}\n      //       draggable src={sprite.url}/>\n      //     })\n      //   }\n\n    };\n\n    _this.selectSprite = function (sprite) {\n      _this.setState({\n        selectedSprite: sprite\n      });\n    };\n\n    _this.addBorder = function () {\n      debugger;\n    };\n\n    _this.sprites = function () {\n      var imgStyle = {\n        width: '100px',\n        height: '100px'\n      };\n      return _this.props.sprites.map(function (sprite) {\n        return React.createElement(\"img\", {\n          key: sprite.id,\n          style: imgStyle,\n          src: sprite.url,\n          onClick: function onClick() {\n            return _this.selectSprite(sprite);\n          },\n          alt: sprite.name,\n          border: _this.addBorder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.addSprite = function () {\n      if (!!_this.state.selectedSprite) {\n        _this.props.addSprite(_this.state.selectedSprite);\n\n        _this.setState({\n          selectedSprite: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SpriteBar, [{\n    key: \"render\",\n    value: function render() {\n      console.log('spritebar state', this.state);\n      var divStyle = {\n        position: 'absolute',\n        width: '150px',\n        height: '100vh',\n        left: '0',\n        top: '10',\n        backgroundColor: '#EEEEEE',\n        borderRight: '1px dotted' // return(\n        //   <div style={divStyle} onDragOver={(e)=>this.onDragOver(e)}\n        //     onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\n        //     <h1>Sprite Bar</h1>\n        //     {this.sprites()}\n        //     <button onClick={this.props.addSprite}>Add Sprite</button>\n        //   </div>\n        // )\n\n      };\n      return React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Sprite Bar\"), this.sprites(), React.createElement(\"button\", {\n        onClick: this.addSprite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Add Sprite\"));\n    }\n  }]);\n\n  return SpriteBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites\n  };\n}\n\nexport default connect(mapStateToProps, actions)(SpriteBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SpriteBar.js"],"names":["React","Component","connect","actions","SpriteBar","state","selectedSprite","selectSprite","sprite","setState","addBorder","sprites","imgStyle","width","height","props","map","id","url","name","addSprite","console","log","divStyle","position","left","top","backgroundColor","borderRight","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB,C,CACA;AACA;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE,IADV,CAIR;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBQ,K;;UAoBRC,Y,GAAe,UAACC,MAAD,EAAY;AACzB,YAAKC,QAAL,CAAc;AACZH,QAAAA,cAAc,EAAEE;AADJ,OAAd;AAGD,K;;UAEDE,S,GAAY,YAAM;AAChB;AACD,K;;UAEDC,O,GAAU,YAAM;AACd,UAAMC,QAAQ,GAAC;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,MAAM,EAAC;AAAvB,OAAf;AACA,aAAO,MAAKC,KAAL,CAAWJ,OAAX,CAAmBK,GAAnB,CAAuB,UAAAR,MAAM,EAAI;AACtC,eAAO;AAAK,UAAA,GAAG,EAAEA,MAAM,CAACS,EAAjB;AAAqB,UAAA,KAAK,EAAEL,QAA5B;AAAsC,UAAA,GAAG,EAAEJ,MAAM,CAACU,GAAlD;AAAuD,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKX,YAAL,CAAkBC,MAAlB,CAAN;AAAA,WAAhE;AAAiG,UAAA,GAAG,EAAEA,MAAM,CAACW,IAA7G;AAAmH,UAAA,MAAM,EAAE,MAAKT,SAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACC,OAFI,CAAP;AAGC,K;;UAEHU,S,GAAY,YAAM;AAChB,UAAG,CAAC,CAAC,MAAKf,KAAL,CAAWC,cAAhB,EAA+B;AAC7B,cAAKS,KAAL,CAAWK,SAAX,CAAqB,MAAKf,KAAL,CAAWC,cAAhC;;AACA,cAAKG,QAAL,CAAc;AAACH,UAAAA,cAAc,EAAE;AAAjB,SAAd;AACD;AACF,K;;;;;;;6BAEO;AACNe,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKjB,KAAnC;AACA,UAAMkB,QAAQ,GAAG;AACfC,QAAAA,QAAQ,EAAE,UADK;AAEfX,QAAAA,KAAK,EAAE,OAFQ;AAGfC,QAAAA,MAAM,EAAE,OAHO;AAIfW,QAAAA,IAAI,EAAE,GAJS;AAKfC,QAAAA,GAAG,EAAE,IALU;AAMfC,QAAAA,eAAe,EAAE,SANF;AAOfC,QAAAA,WAAW,EAAE,YAPE,CASjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBiB,OAAjB;AAiBA,aACE;AAAK,QAAA,KAAK,EAAEL,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEG,KAAKZ,OAAL,EAFH,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKS,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CADF;AAOD;;;;EAvEqBnB,S;;AA0ExB,SAAS4B,eAAT,CAAyBxB,KAAzB,EAAgC;AAC9B,SAAO;AACLM,IAAAA,OAAO,EAAEN,KAAK,CAACG,MAAN,CAAaG;AADjB,GAAP;AAGD;;AAED,eAAeT,OAAO,CAAC2B,eAAD,EAAkB1B,OAAlB,CAAP,CAAkCC,SAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/actions';\n// import Konva from 'konva';\n// import { Stage, Layer, Image } from 'react-konva';\n\nclass SpriteBar extends Component{\n  state = {\n    selectedSprite: null\n  }\n\n  // onDragStart = (ev, id) => {\n  //   ev.dataTransfer.setData(\"id\", id);\n  // }\n  //\n  // onDragOver = (ev) => {\n  //   ev.preventDefault();\n  // }\n\n  // sprites = () => {\n  //   const imgStyle={width:'100px', height:'100px'}\n  //   return this.props.sprites.map(sprite => {\n  //     return <img key={sprite.id} style={imgStyle} onDragStart = {(e) => this.onDragStart(e, sprite.url)}\n  //       draggable src={sprite.url}/>\n  //     })\n  //   }\n\n  selectSprite = (sprite) => {\n    this.setState({\n      selectedSprite: sprite\n    })\n  }\n\n  addBorder = () => {\n    debugger\n  }\n\n  sprites = () => {\n    const imgStyle={width:'100px', height:'100px'}\n    return this.props.sprites.map(sprite => {\n      return <img key={sprite.id} style={imgStyle} src={sprite.url} onClick={() => this.selectSprite(sprite)} alt={sprite.name} border={this.addBorder}/>\n      })\n    }\n\n  addSprite = () => {\n    if(!!this.state.selectedSprite){\n      this.props.addSprite(this.state.selectedSprite)\n      this.setState({selectedSprite: null})\n    }\n  }\n\n  render(){\n    console.log('spritebar state',this.state)\n    const divStyle = {\n      position: 'absolute',\n      width: '150px',\n      height: '100vh',\n      left: '0',\n      top: '10',\n      backgroundColor: '#EEEEEE',\n      borderRight: '1px dotted'}\n\n    // return(\n    //   <div style={divStyle} onDragOver={(e)=>this.onDragOver(e)}\n    //     onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\n    //     <h1>Sprite Bar</h1>\n    //     {this.sprites()}\n    //     <button onClick={this.props.addSprite}>Add Sprite</button>\n    //   </div>\n    // )\n    return(\n      <div style={divStyle}>\n        <h1>Sprite Bar</h1>\n        {this.sprites()}\n        <button onClick={this.addSprite}>Add Sprite</button>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites\n  }\n}\n\nexport default connect(mapStateToProps, actions)(SpriteBar);\n"]},"metadata":{},"sourceType":"module"}