{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/UploadSound.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { setSounds } from '../actions/sound';\nimport { Button, Form, Segment, Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar'; // import Button from '@material-ui/core/Button';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { withRouter, Redirect } from 'react-router';\nvar soundTypes = [{\n  id: 1,\n  name: 'guitar'\n}, {\n  id: 2,\n  name: 'drums'\n}, {\n  id: 3,\n  name: 'piano'\n}];\n\nvar styles = function styles(theme) {\n  return {\n    main: _defineProperty({\n      width: 'auto',\n      display: 'block',\n      // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3\n    }, theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2), {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }),\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: \"\".concat(theme.spacing.unit * 2, \"px \").concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 3, \"px\")\n    },\n    avatar: {\n      // margin: theme.spacing.unit,\n      // backgroundColor: theme.palette.secondary.main,\n      backgroundColor: '#915c75'\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing.unit\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar UploadSound =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadSound, _Component);\n\n  function UploadSound() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadSound);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadSound)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      file: null,\n      imageUrl: \"\",\n      soundType: \"\"\n    };\n\n    _this.renderTypes = function () {\n      return soundTypes.map(function (sound) {\n        return React.createElement(FormControlLabel, {\n          kaye: sound.id,\n          name: sound.name,\n          value: sound.name,\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }),\n          label: sound.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var data = new FormData();\n      data.append(\"name\", _this.state.name);\n      data.append(\"file\", _this.state.file);\n      data.append(\"sound_type\", _this.state.soundType);\n      data.append(\"image_url\", _this.state.imageUrl);\n      fetch(\"http://localhost:3000/api/v1/sounds\", {\n        method: \"POST\",\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        // this.setState({ url: data[data.length-1].url });\n        _this.props.setSounds(data);\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFileUpload = function (event) {\n      console.log(event.nativeEvent, event.target.files, event.target.files[0]);\n\n      _this.setState({\n        file: event.target.files[0]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadSound, [{\n    key: \"render\",\n    // <form onSubmit={this.handleSubmit}>\n    //   Name: <input\n    //     name=\"name\"\n    //     type=\"text\"\n    //     value={this.state.name}\n    //     onChange={this.handleChange}\n    //   />\n    //\n    //   Type: {this.renderTypes()}\n    //   <input type=\"file\" onChange={this.handleFileUpload} />\n    //   <input type=\"submit\" value=\"Upload\" />\n    // </form>\n    //\n    // {this.state.imageURL ? (\n    //   <img src={this.state.imageURL} alt=\"img\" />\n    // ) : null}\n    //\n    value: function render() {\n      var classes = this.props.classes;\n      console.log('upload sound state', this.state); // return (\n      //     <MuiThemeProvider theme={colors}>\n      //   <main className={styles.main}>\n      //     <CssBaseline />\n      //     <Paper className={styles.paper}>\n      //       <Avatar className={styles.avatar} >\n      //         <LockIcon color=\"secondary\"/>\n      //       </Avatar>\n      //       <Typography component=\"h1\" variant=\"h5\">\n      //         Upload Sound\n      //       </Typography>\n      //       <form className={styles.form} onSubmit={this.handleSubmit}>\n      //         {this.props.failedLogin ? <Message error header={this.props.error} /> : null}\n      //         <FormControl margin=\"normal\" required fullWidth>\n      //           <InputLabel htmlFor=\"name\">Name</InputLabel>\n      //           <Input id=\"name\" name=\"name\" autoComplete=\"name\" autoFocus onChange={this.handleChange} value={this.state.name}/>\n      //         </FormControl>\n      //\n      //         <FormControl margin=\"normal\" required fullWidth>\n      //           <FormLabel>Sound File</FormLabel>\n      //           <Input id=\"file\" type=\"file\" name=\"file\" autoComplete=\"file\" autoFocus onChange={this.handleFileUpload} />\n      //         </FormControl>\n      //\n      //         <FormControl component=\"fieldset\">\n      //           <FormLabel component=\"legend\">Sound Type</FormLabel>\n      //           <RadioGroup\n      //             aria-label=\"Type\"\n      //             name=\"soundType\"\n      //             value={this.state.soundType}\n      //             onChange={this.handleChange}\n      //           >\n      //             {this.renderTypes()}\n      //           </RadioGroup>\n      //         </FormControl>\n      //\n      //         <FormControl margin=\"normal\" fullWidth>\n      //           <InputLabel htmlFor=\"imageUrl\">Image URL</InputLabel>\n      //           <Input id=\"imageUrl\" name=\"imageUrl\" autoComplete=\"imageUrl\" autoFocus onChange={this.handleChange} value={this.state.imageUrl}/>\n      //         </FormControl>\n      //\n      //         <Button\n      //           type=\"submit\"\n      //           fullWidth\n      //           variant=\"contained\"\n      //           color=\"secondary\"\n      //         >\n      //           Upload\n      //         </Button>\n      //       </form>\n      //     </Paper>\n      //   </main>\n      //   </MuiThemeProvider>\n      // );\n\n      return React.createElement(MuiThemeProvider, {\n        theme: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: classes.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(LockIcon, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"form\", {\n        className: classes.form,\n        onSubmit: this.handleLoginSubmit,\n        loading: this.props.authenticatingUser,\n        error: this.props.failedLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.props.failedLogin ? React.createElement(Message, {\n        error: true,\n        header: this.props.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }) : null, React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Input, {\n        id: \"email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        name: \"password\",\n        type: \"password\",\n        id: \"password\",\n        onChange: this.handleChange,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Sign in\")))));\n    }\n  }]);\n\n  return UploadSound;\n}(Component);\n\nUploadSound.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds\n  };\n} //\n// function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n//\n// export default connect(mapStateToProps, { setSounds })(UploadSound);\n// export default UploadSound\n\n\nvar connectedToReduxHOC = connect(mapStateToProps, {\n  setSounds: setSounds\n});\nvar connectedMenu = connectedToReduxHOC(UploadSound);\nvar withStylesMenu = withStyles(styles)(connectedMenu);\nexport default withStylesMenu;","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/UploadSound.js"],"names":["React","Component","Fragment","connect","setSounds","Button","Form","Segment","Message","PropTypes","Avatar","CssBaseline","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockIcon","Paper","Typography","withStyles","MuiThemeProvider","colors","TextField","Radio","RadioGroup","FormHelperText","FormLabel","withRouter","Redirect","soundTypes","id","name","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","backgroundColor","form","submit","UploadSound","state","file","imageUrl","soundType","renderTypes","map","sound","handleSubmit","event","preventDefault","data","FormData","append","fetch","method","body","then","res","json","props","handleChange","setState","target","value","handleFileUpload","console","log","nativeEvent","files","classes","handleLoginSubmit","authenticatingUser","failedLogin","error","email","password","propTypes","object","isRequired","mapStateToProps","sounds","connectedToReduxHOC","connectedMenu","withStylesMenu"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport { setSounds } from '../actions/sound'\nimport { Button, Form, Segment, Message } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\n// import Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App'\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { withRouter, Redirect } from 'react-router'\n\nconst soundTypes = [{id:1, name: 'guitar'}, {id:2, name: 'drums'}, {id:3, name: 'piano'}]\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    // margin: theme.spacing.unit,\n    // backgroundColor: theme.palette.secondary.main,\n    backgroundColor: '#915c75'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nclass UploadSound extends Component{\n  state = {\n    name: \"\",\n    file: null,\n    imageUrl: \"\",\n    soundType: \"\"\n  };\n\n  // renderTypes = () => {\n  //   return soundTypes.map(sound => {\n  //     return (<Fragment key={sound.id}><input type=\"radio\" id={sound.name} name=\"soundType\" value={sound.name} onChange={this.handleChange}/><label>{sound.name}</label><br/></Fragment>)\n  //   })\n  // }\n\n  renderTypes = () => {\n    return soundTypes.map(sound => <FormControlLabel kaye={sound.id} name={sound.name} value={sound.name} control={<Radio />} label={sound.name} />)\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"name\", this.state.name);\n    data.append(\"file\", this.state.file);\n    data.append(\"sound_type\", this.state.soundType)\n    data.append(\"image_url\", this.state.imageUrl)\n    fetch(\"http://localhost:3000/api/v1/sounds\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then(res => res.json())\n      .then(data => {\n        // this.setState({ url: data[data.length-1].url });\n        this.props.setSounds(data)\n      });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleFileUpload = event => {\n    console.log(event.nativeEvent, event.target.files, event.target.files[0]);\n    this.setState({\n      file: event.target.files[0],\n    });\n  };\n\n  // <form onSubmit={this.handleSubmit}>\n  //   Name: <input\n  //     name=\"name\"\n  //     type=\"text\"\n  //     value={this.state.name}\n  //     onChange={this.handleChange}\n  //   />\n  //\n  //   Type: {this.renderTypes()}\n  //   <input type=\"file\" onChange={this.handleFileUpload} />\n  //   <input type=\"submit\" value=\"Upload\" />\n  // </form>\n  //\n  // {this.state.imageURL ? (\n  //   <img src={this.state.imageURL} alt=\"img\" />\n  // ) : null}\n  //\n  render(){\n    const { classes } = this.props;\n    console.log('upload sound state', this.state)\n    // return (\n    //     <MuiThemeProvider theme={colors}>\n    //   <main className={styles.main}>\n    //     <CssBaseline />\n    //     <Paper className={styles.paper}>\n    //       <Avatar className={styles.avatar} >\n    //         <LockIcon color=\"secondary\"/>\n    //       </Avatar>\n    //       <Typography component=\"h1\" variant=\"h5\">\n    //         Upload Sound\n    //       </Typography>\n    //       <form className={styles.form} onSubmit={this.handleSubmit}>\n    //         {this.props.failedLogin ? <Message error header={this.props.error} /> : null}\n    //         <FormControl margin=\"normal\" required fullWidth>\n    //           <InputLabel htmlFor=\"name\">Name</InputLabel>\n    //           <Input id=\"name\" name=\"name\" autoComplete=\"name\" autoFocus onChange={this.handleChange} value={this.state.name}/>\n    //         </FormControl>\n    //\n    //         <FormControl margin=\"normal\" required fullWidth>\n    //           <FormLabel>Sound File</FormLabel>\n    //           <Input id=\"file\" type=\"file\" name=\"file\" autoComplete=\"file\" autoFocus onChange={this.handleFileUpload} />\n    //         </FormControl>\n    //\n    //         <FormControl component=\"fieldset\">\n    //           <FormLabel component=\"legend\">Sound Type</FormLabel>\n    //           <RadioGroup\n    //             aria-label=\"Type\"\n    //             name=\"soundType\"\n    //             value={this.state.soundType}\n    //             onChange={this.handleChange}\n    //           >\n    //             {this.renderTypes()}\n    //           </RadioGroup>\n    //         </FormControl>\n    //\n    //         <FormControl margin=\"normal\" fullWidth>\n    //           <InputLabel htmlFor=\"imageUrl\">Image URL</InputLabel>\n    //           <Input id=\"imageUrl\" name=\"imageUrl\" autoComplete=\"imageUrl\" autoFocus onChange={this.handleChange} value={this.state.imageUrl}/>\n    //         </FormControl>\n    //\n    //         <Button\n    //           type=\"submit\"\n    //           fullWidth\n    //           variant=\"contained\"\n    //           color=\"secondary\"\n    //         >\n    //           Upload\n    //         </Button>\n    //       </form>\n    //     </Paper>\n    //   </main>\n    //   </MuiThemeProvider>\n    // );\n    return (\n      <MuiThemeProvider theme={colors}>\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar} >\n          <LockIcon color=\"secondary\"/>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={this.handleLoginSubmit} loading={this.props.authenticatingUser} error={this.props.failedLogin}>\n          {this.props.failedLogin ? <Message error header={this.props.error} /> : null}\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={this.handleChange} value={this.state.email}/>\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input name=\"password\" type=\"password\" id=\"password\" onChange={this.handleChange} value={this.state.password} />\n          </FormControl>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Sign in\n          </Button>\n        </form>\n      </Paper>\n    </main>\n    </MuiThemeProvider>\n  )\n  }\n}\n\nUploadSound.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds\n  }\n}\n//\n// function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n//\n\n// export default connect(mapStateToProps, { setSounds })(UploadSound);\n// export default UploadSound\n\nconst connectedToReduxHOC = connect(mapStateToProps, { setSounds })\nconst connectedMenu = connectedToReduxHOC(UploadSound)\nconst withStylesMenu = withStyles(styles)(connectedMenu)\nexport default withStylesMenu\n"]},"metadata":{},"sourceType":"module"}