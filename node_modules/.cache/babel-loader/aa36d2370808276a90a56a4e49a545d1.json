{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/ControlBar.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Stage, Layer, Text, Image } from 'react-konva';\nimport Player from './Player';\nimport Video from './Video';\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App';\nimport { changeDJMode } from '../actions/sound';\nimport { clearSelected } from '../actions/sprite';\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ControlBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ControlBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ctrlImage: null,\n      imageStatus: null,\n      url: \"\"\n    };\n\n    _this.handleDJ = function (djMode) {\n      _this.props.changeDJMode();\n\n      _this.props.clearSelected();\n    };\n\n    return _this;\n  }\n\n  _createClass(ControlBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      if (Object.keys(this.props.selectedSprite).length != 0) {\n        var image = new window.Image();\n        image.src = this.props.selectedSprite.sprite.url;\n        image.width = 100;\n        image.height = 100;\n\n        image.onload = function () {\n          _this2.setState({\n            ctrlImage: image\n          });\n        };\n      }\n    }\n  }, {\n    key: \"handleImageLoaded\",\n    value: function handleImageLoaded() {\n      this.setState({\n        imageStatus: \"loaded\"\n      });\n    }\n  }, {\n    key: \"handleImageErrored\",\n    value: function handleImageErrored() {\n      this.setState({\n        imageStatus: \"failed to load\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        id: \"controlbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, !this.props.djMode ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Stage, {\n        className: \"control-canvas\",\n        width: 200,\n        height: 80,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Image, {\n        image: Object.keys(this.props.selectedSprite).length === 0 ? null : this.state.ctrlImage,\n        x: 0,\n        y: 0,\n        width: 80,\n        height: 80,\n        stroke: \"red\",\n        strokeWidth: 2,\n        strokeEnabled: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), this.props.selectedSprite ? React.createElement(Player, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : null) : React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Video, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(MuiThemeProvider, {\n        theme: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !this.props.canvasSprites.length > 0 ? true : false,\n        onClick: function onClick() {\n          return _this3.handleDJ(_this3.props.djMode);\n        },\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"DJ MODE\")));\n    }\n  }]);\n\n  return ControlBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite,\n    djMode: state.sound.djMode,\n    canvasSprites: state.sprite.canvasSprites,\n    stopVideo: state.sound.stopVideo\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n\n\nexport default connect(mapStateToProps, {\n  changeDJMode: changeDJMode,\n  clearSelected: clearSelected\n})(ControlBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/ControlBar.js"],"names":["React","Component","Fragment","connect","Stage","Layer","Text","Image","Player","Video","Button","MuiThemeProvider","colors","changeDJMode","clearSelected","ControlBar","state","ctrlImage","imageStatus","url","handleDJ","djMode","props","Object","keys","selectedSprite","length","image","window","src","sprite","width","height","onload","setState","canvasSprites","mapStateToProps","sound","stopVideo"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport { Stage, Layer, Text, Image } from 'react-konva';\nimport Player from './Player'\nimport Video from './Video'\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App'\nimport { changeDJMode } from '../actions/sound'\nimport { clearSelected } from '../actions/sprite'\n\n\nclass ControlBar extends Component{\n  state = {\n    ctrlImage: null,\n    imageStatus: null,\n    url: \"\"\n  }\n\n  componentDidUpdate() {\n    if(Object.keys(this.props.selectedSprite).length != 0){\n      const image = new window.Image();\n      image.src = this.props.selectedSprite.sprite.url\n      image.width = 100\n      image.height = 100\n      image.onload = () => {\n        this.setState({\n          ctrlImage: image\n        });\n      };\n    }\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageStatus: \"loaded\" });\n  }\n\n  handleImageErrored() {\n    this.setState({ imageStatus: \"failed to load\" });\n  }\n\n  handleDJ = (djMode) => {\n    this.props.changeDJMode()\n    this.props.clearSelected()\n  }\n\n  render(){\n    return(\n      <div id='controlbar'>\n        {!this.props.djMode ? (\n          <Fragment><Stage className='control-canvas' width={200} height={80}>\n          <Layer>\n            <Image image={Object.keys(this.props.selectedSprite).length === 0 ? null : this.state.ctrlImage}\n                x={0}\n                y={0}\n                width={80}\n                height={80}\n                stroke='red'\n                strokeWidth={2}\n                strokeEnabled={false}/>\n          </Layer>\n        </Stage>\n        {this.props.selectedSprite ? <Player/> : null}\n        </Fragment>\n      ) : (\n          <Fragment>\n            <Video/>\n          </Fragment>\n        )}\n\n        <MuiThemeProvider theme={colors}>\n          <Button disabled={!this.props.canvasSprites.length > 0 ? true : false} onClick={() => this.handleDJ(this.props.djMode)} variant=\"contained\" color=\"secondary\">\n          DJ MODE\n          </Button>\n        </MuiThemeProvider>\n\n      </div>\n    )\n\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite,\n    djMode: state.sound.djMode,\n    canvasSprites: state.sprite.canvasSprites,\n    stopVideo: state.sound.stopVideo\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n\nexport default connect(mapStateToProps, { changeDJMode, clearSelected })(ControlBar);\n"]},"metadata":{},"sourceType":"module"}