{"ast":null,"code":"import _toConsumableArray from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SpriteBar.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'; // import Konva from 'konva';\n// import { Stage, Layer, Image, Text } from 'react-konva';\n// import { addSprite } from '../actions/sprite'\n\nimport * as actions from '../actions/sprite';\nimport UUID from 'uuid';\nimport { API_ENDPOINT } from '../adapters/index';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; // import {List, ListItem} from 'material-ui/List';\n// import {Paper} from 'material-ui/Paper'\n\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { colors } from '../App'; // import { Icon, Popup } from 'semantic-ui-react'\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    grow: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20\n    },\n    title: _defineProperty({\n      display: 'none'\n    }, theme.breakpoints.up('sm'), {\n      display: 'block'\n    }),\n    search: _defineProperty({\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }),\n    searchIcon: {\n      width: theme.spacing.unit * 9,\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit',\n      width: '100%'\n    },\n    inputInput: _defineProperty({\n      paddingTop: theme.spacing.unit,\n      paddingRight: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      paddingLeft: theme.spacing.unit * 10,\n      transition: theme.transitions.create('width'),\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    })\n  };\n};\n\nvar SpriteBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpriteBar, _Component);\n\n  function SpriteBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SpriteBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SpriteBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedSpriteBar: null,\n      filterBy: 'all',\n      hover: false\n    };\n\n    _this.selectSprite = function (sprite) {\n      _this.setState({\n        selectedSpriteBar: sprite\n      });\n    };\n\n    _this.hover = function () {\n      _this.setState({\n        hover: !_this.state.hover\n      });\n    };\n\n    _this.sprites = function () {\n      var sprites;\n\n      if (_this.state.filterBy === 'all') {\n        sprites = _this.props.sprites;\n      } else {\n        sprites = _this.props.sprites.filter(function (sprite) {\n          return sprite.sprite_type === _this.state.filterBy;\n        });\n      }\n\n      return sprites.map(function (sprite) {\n        return React.createElement(Fragment, {\n          key: sprite.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: _this.state.hover ? 'hover01-hover' : 'hover01',\n          onHover: _this.hover,\n          style: _this.state.selectedSpriteBar === sprite ? {\n            width: '60px',\n            height: '60px',\n            border: \"3px solid black\"\n          } : {\n            width: '60px',\n            height: '60px'\n          },\n          src: sprite.url,\n          onClick: function onClick() {\n            return _this.selectSprite(sprite);\n          },\n          alt: sprite.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }));\n      });\n    };\n\n    _this.getSpriteTypes = function () {\n      return ['all'].concat(_toConsumableArray(new Set(_this.props.sprites.map(function (item) {\n        return item.sprite_type;\n      })))).map(function (type) {\n        return React.createElement(MenuItem, {\n          value: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, type.toUpperCase());\n      });\n    };\n\n    _this.filterSprites = function (e) {\n      _this.setState({\n        filterBy: e.target.value\n      });\n    };\n\n    _this.addSpriteMethod = function () {\n      var uniqueKey = UUID();\n\n      _this.props.addSprite({\n        sprite: _this.state.selectedSpriteBar,\n        uniqueKey: uniqueKey\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SpriteBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(API_ENDPOINT, \"/api/v1/sprites\")).then(function (r) {\n        return r.json();\n      }).then(function (sprites) {\n        _this2.props.setSprites(sprites);\n      });\n    }\n  }, {\n    key: \"render\",\n    //   <FormControl className=\"filter\">\n    //   <InputLabel shrink htmlFor=\"filterBy\">\n    //       IMAGES\n    //     </InputLabel>\n    //     <Select\n    //       value={this.state.filterBy}\n    //       onChange={this.filterSprites}\n    //       input={<Input name=\"filterBy\" id=\"filterBy\" />}\n    //       displayEmpty\n    //       name=\"age\"\n    //     >\n    //       {this.getSpriteTypes()}\n    //     </Select>\n    // </FormControl>\n    value: function render() {\n      console.log(this.props.sprites);\n      return React.createElement(\"div\", {\n        id: \"spritebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"dropbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"IMAGES\"), React.createElement(\"div\", {\n        class: \"dropdown-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Link 1\"), React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Link 2\"), React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Link 3\")))), React.createElement(\"div\", {\n        id: \"sprite-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, this.sprites()), React.createElement(MuiThemeProvider, {\n        theme: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: this.props.djMode ? true : false,\n        onClick: this.addSpriteMethod,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"ADD\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SpriteBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites,\n    selectedSprite: state.sprite.selectedSprite,\n    djMode: state.sound.djMode\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//     addSprite: (selectedSprite) => {\n//       dispatch(addSprite(selectedSprite))\n//     }\n//   }\n// }\n\n\nexport default connect(mapStateToProps, actions)(SpriteBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SpriteBar.js"],"names":["React","Component","Fragment","connect","actions","UUID","API_ENDPOINT","PropTypes","AppBar","Toolbar","IconButton","Typography","InputBase","fade","withStyles","MenuIcon","SearchIcon","Input","OutlinedInput","FilledInput","InputLabel","MenuItem","FormHelperText","FormControl","Select","Button","MuiThemeProvider","createMuiTheme","colors","styles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","palette","common","white","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","SpriteBar","state","selectedSpriteBar","filterBy","hover","selectSprite","sprite","setState","sprites","props","filter","sprite_type","map","id","border","url","name","getSpriteTypes","Set","item","type","toUpperCase","filterSprites","e","target","value","addSpriteMethod","uniqueKey","addSprite","fetch","then","r","json","setSprites","console","log","djMode","mapStateToProps","selectedSprite","sound"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\n// import Konva from 'konva';\n// import { Stage, Layer, Image, Text } from 'react-konva';\n// import { addSprite } from '../actions/sprite'\nimport * as actions from '../actions/sprite'\nimport UUID from 'uuid'\nimport { API_ENDPOINT } from '../adapters/index'\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n// import {List, ListItem} from 'material-ui/List';\n// import {Paper} from 'material-ui/Paper'\nimport Button from '@material-ui/core/Button';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { colors } from '../App'\n// import { Icon, Popup } from 'semantic-ui-react'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  }\n});\n\nclass SpriteBar extends Component{\n  state = {\n    selectedSpriteBar: null,\n    filterBy: 'all',\n    hover: false\n  }\n\n  componentDidMount(){\n    fetch(`${API_ENDPOINT}/api/v1/sprites`)\n      .then(r => r.json())\n      .then(sprites => {\n        this.props.setSprites(sprites)\n      })\n  }\n\n  selectSprite = (sprite) => {\n    this.setState({\n      selectedSpriteBar: sprite\n    })\n  }\n\n  hover = () =>{\n    this.setState({\n      hover: !this.state.hover\n    })\n  }\n\n  sprites = () => {\n    let sprites;\n    if(this.state.filterBy === 'all'){\n      sprites = this.props.sprites\n    }else{\n      sprites = this.props.sprites.filter(sprite => sprite.sprite_type === this.state.filterBy)\n    }\n    return sprites.map(sprite => {\n      return (\n        <Fragment key={sprite.id}>\n          <img className={this.state.hover ? 'hover01-hover' : 'hover01'} onHover={this.hover} style={this.state.selectedSpriteBar === sprite ? {width:'60px', height:'60px', border:\"3px solid black\"} : {width:'60px', height:'60px'}} src={sprite.url} onClick={() => this.selectSprite(sprite)} alt={sprite.name} /><br/>\n        </Fragment>\n      )\n      })\n    }\n\n    getSpriteTypes = () => {\n      return (\n        ['all',...new Set(this.props.sprites.map(item => item.sprite_type))].map(type => {\n          return <MenuItem value={type}>{type.toUpperCase()}</MenuItem>\n        })\n      )\n    }\n\n    filterSprites = (e) => {\n      this.setState({\n        filterBy: e.target.value\n      })\n    }\n\n  addSpriteMethod = () => {\n    const uniqueKey = UUID()\n    this.props.addSprite({sprite:this.state.selectedSpriteBar, uniqueKey: uniqueKey})\n  }\n//   <FormControl className=\"filter\">\n//   <InputLabel shrink htmlFor=\"filterBy\">\n//       IMAGES\n//     </InputLabel>\n//     <Select\n//       value={this.state.filterBy}\n//       onChange={this.filterSprites}\n//       input={<Input name=\"filterBy\" id=\"filterBy\" />}\n//       displayEmpty\n//       name=\"age\"\n//     >\n//       {this.getSpriteTypes()}\n//     </Select>\n// </FormControl>\n  render(){\n    console.log(this.props.sprites)\n    return(\n      <div id=\"spritebar\">\n        <div className=\"sidebar-nav\">\n\n      <div class=\"dropdown\">\n        <button class=\"dropbtn\">IMAGES</button>\n        <div class=\"dropdown-content\">\n          <a href=\"#\">Link 1</a>\n          <a href=\"#\">Link 2</a>\n          <a href=\"#\">Link 3</a>\n        </div>\n      </div>\n        </div>\n        <div id='sprite-scroll'>\n        {this.sprites()}\n        </div>\n        <MuiThemeProvider theme={colors}>\n        <Button disabled={this.props.djMode ? true : false} onClick={this.addSpriteMethod} variant=\"contained\" color=\"secondary\">\n        ADD\n      </Button>\n      </MuiThemeProvider>\n      <br/>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sprites: state.sprite.sprites,\n    selectedSprite: state.sprite.selectedSprite,\n    djMode: state.sound.djMode\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     addSprite: (selectedSprite) => {\n//       dispatch(addSprite(selectedSprite))\n//     }\n//   }\n// }\n\nexport default connect(mapStateToProps, actions)(SpriteBar);\n"]},"metadata":{},"sourceType":"module"}