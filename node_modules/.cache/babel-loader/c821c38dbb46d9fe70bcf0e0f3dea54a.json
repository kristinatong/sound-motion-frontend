{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SoundBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/sound'; // import { Stage, Layer, Text, Image } from 'react-konva';\n// import { selectSound, setSounds } from '../actions/sound'\n\nvar SoundBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SoundBar, _Component);\n\n  function SoundBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SoundBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SoundBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.selectSound = function (sound) {\n      debugger;\n      fetch(\"http://localhost:3000/api/v1/sounds/\".concat(sound.id)).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        // url: data.url\n        _this.props.selectSound(sound, _this.props.selectedSprite.uniqueKey, data.url);\n      }); // this.props.selectSound(sound, this.props.selectedSprite.uniqueKey)\n    };\n\n    _this.renderSounds = function () {\n      return _this.props.sounds.map(function (sound) {\n        return React.createElement(\"li\", {\n          key: sound.id,\n          onClick: function onClick() {\n            return _this.selectSound(sound);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, sound.name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SoundBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/sounds').then(function (r) {\n        return r.json();\n      }).then(function (sounds) {\n        _this2.props.setSounds(sounds);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('sound bar props', this.props);\n      var soundStyle = {\n        position: 'absolute',\n        right: '0',\n        top: '10',\n        width: '150px',\n        height: '100vh',\n        backgroundColor: '#EEEEEE',\n        borderLeft: '1px dotted'\n      };\n      return React.createElement(\"div\", {\n        style: soundStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Sound Bar\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.renderSounds()));\n    }\n  }]);\n\n  return SoundBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds,\n    selectedSound: state.sound.selectedSound,\n    selectedSprite: state.sprite.selectedSprite\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//     selectSound: (sound,uniqueKey) => {\n//       dispatch(selectSound(sound,uniqueKey))\n//     }\n//   }\n// }\n\n\nexport default connect(mapStateToProps, actions)(SoundBar);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/SoundBar.js"],"names":["React","Component","connect","actions","SoundBar","selectSound","sound","fetch","id","then","r","json","data","props","selectedSprite","uniqueKey","url","renderSounds","sounds","map","name","setSounds","console","log","soundStyle","position","right","top","width","height","backgroundColor","borderLeft","mapStateToProps","state","selectedSound","sprite"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB,C,CACA;AACA;;IAEMC,Q;;;;;;;;;;;;;;;;;;UASJC,W,GAAc,UAACC,KAAD,EAAW;AACvB;AACAC,MAAAA,KAAK,+CAAwCD,KAAK,CAACE,EAA9C,EAAL,CACGC,IADH,CACQ,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OADT,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ;AACA,cAAKC,KAAL,CAAWR,WAAX,CAAuBC,KAAvB,EAA8B,MAAKO,KAAL,CAAWC,cAAX,CAA0BC,SAAxD,EAAkEH,IAAI,CAACI,GAAvE;AACD,OALH,EAFuB,CAQvB;AACD,K;;UAEDC,Y,GAAe,YAAM;AACnB,aAAO,MAAKJ,KAAL,CAAWK,MAAX,CAAkBC,GAAlB,CAAsB,UAAAb,KAAK,EAAI;AACpC,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACE,EAAf;AAAmB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKH,WAAL,CAAiBC,KAAjB,CAAN;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4DA,KAAK,CAACc,IAAlE,CAAP;AACD,OAFM,CAAP;AAGD,K;;;;;;;wCAvBkB;AAAA;;AACjBb,MAAAA,KAAK,CAAC,qCAAD,CAAL,CACGE,IADH,CACQ,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OADT,EAEGF,IAFH,CAEQ,UAAAS,MAAM,EAAI;AACd,QAAA,MAAI,CAACL,KAAL,CAAWQ,SAAX,CAAqBH,MAArB;AACD,OAJH;AAKD;;;6BAmBO;AACNI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKV,KAAnC;AACA,UAAMW,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAE,UADO;AAEjBC,QAAAA,KAAK,EAAE,GAFU;AAGjBC,QAAAA,GAAG,EAAE,IAHY;AAIjBC,QAAAA,KAAK,EAAE,OAJU;AAKjBC,QAAAA,MAAM,EAAE,OALS;AAMjBC,QAAAA,eAAe,EAAE,SANA;AAOjBC,QAAAA,UAAU,EAAE;AAPK,OAAnB;AASA,aACE;AAAK,QAAA,KAAK,EAAEP,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,YAAL,EADH,CAFF,CADF;AAQD;;;;EA7CoBhB,S;;AAgDvB,SAAS+B,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLf,IAAAA,MAAM,EAAEe,KAAK,CAAC3B,KAAN,CAAYY,MADf;AAELgB,IAAAA,aAAa,EAAED,KAAK,CAAC3B,KAAN,CAAY4B,aAFtB;AAGLpB,IAAAA,cAAc,EAAEmB,KAAK,CAACE,MAAN,CAAarB;AAHxB,GAAP;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeZ,OAAO,CAAC8B,eAAD,EAAkB7B,OAAlB,CAAP,CAAkCC,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/sound';\n// import { Stage, Layer, Text, Image } from 'react-konva';\n// import { selectSound, setSounds } from '../actions/sound'\n\nclass SoundBar extends Component{\n  componentDidMount(){\n    fetch('http://localhost:3000/api/v1/sounds')\n      .then(r => r.json())\n      .then(sounds => {\n        this.props.setSounds(sounds)\n      })\n  }\n\n  selectSound = (sound) => {\n    debugger\n    fetch(`http://localhost:3000/api/v1/sounds/${sound.id}`)\n      .then(r => r.json())\n      .then(data => {\n        // url: data.url\n        this.props.selectSound(sound, this.props.selectedSprite.uniqueKey,data.url)\n      })\n    // this.props.selectSound(sound, this.props.selectedSprite.uniqueKey)\n  }\n\n  renderSounds = () => {\n    return this.props.sounds.map(sound => {\n      return <li key={sound.id} onClick={() => this.selectSound(sound)}>{sound.name}</li>\n    })\n  }\n\n  render(){\n    console.log('sound bar props',this.props)\n    const soundStyle = {\n      position: 'absolute',\n      right: '0',\n      top: '10',\n      width: '150px',\n      height: '100vh',\n      backgroundColor: '#EEEEEE',\n      borderLeft: '1px dotted'}\n\n    return(\n      <div style={soundStyle}>\n        <h1>Sound Bar</h1>\n        <ul>\n          {this.renderSounds()}\n        </ul>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds,\n    selectedSound: state.sound.selectedSound,\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     selectSound: (sound,uniqueKey) => {\n//       dispatch(selectSound(sound,uniqueKey))\n//     }\n//   }\n// }\n\nexport default connect(mapStateToProps, actions)(SoundBar);\n"]},"metadata":{},"sourceType":"module"}