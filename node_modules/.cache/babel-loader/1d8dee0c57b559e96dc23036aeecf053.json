{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Sprite.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../actions/actions';\n// import Konva from 'konva';\n\nimport { Image } from 'react-konva'; // import { selectSprite } from '../actions/sprite'\n\nimport * as actions from '../actions/sprite';\n\nvar Sprite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sprite, _Component);\n\n  function Sprite() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sprite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sprite)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image: null,\n      // isDragging: false,\n      // hover: false,\n      uniqueKey: null\n    };\n\n    _this.handleDragStart = function () {\n      _this.setState({\n        isDragging: true\n      });\n\n      _this.props.selectSprite(_this.props.sprite);\n    };\n\n    _this.handleDragEnd = function () {\n      _this.setState({\n        isDragging: false\n      });\n    };\n\n    _this.handleHover = function (e) {\n      _this.setState({\n        hover: true\n      });\n\n      document.body.style.cursor = 'pointer';\n    };\n\n    _this.handleHoverOut = function (e) {\n      _this.setState({\n        hover: false\n      });\n\n      document.body.style.cursor = 'default';\n    };\n\n    _this.handleSelect = function () {\n      console.log('handle select props', _this.props);\n      debugger;\n\n      _this.props.selectSprite(_this.props.sprite);\n    };\n\n    return _this;\n  }\n\n  _createClass(Sprite, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var image = new window.Image();\n      image.src = this.props.selectedSprite.sprite.url;\n\n      image.onload = function () {\n        _this2.setState({\n          image: image,\n          uniqueKey: _this2.props.selectedSprite.uniqueKey\n        });\n      };\n    } // componentDidUpdate() {\n    // const image = new window.Image();\n    // image.src = this.props.selectedSprite.sprite.url\n    // image.onload = () => {\n    //   this.setState({\n    //     image: image\n    //   });\n    // };\n    // }\n\n  }, {\n    key: \"render\",\n    //\n    //\n    //\n    value: function render() {\n      var _this3 = this;\n\n      console.log('SPRITE PROPS', this.props);\n      console.log('SPRITE STATE', this.state);\n      return React.createElement(Image, {\n        image: this.state.image,\n        x: 1,\n        y: 1,\n        width: 100,\n        height: 100,\n        stroke: \"red\",\n        strokeWidth: 5,\n        onClick: this.handleSelect,\n        onMouseOver: function onMouseOver(e) {\n          return _this3.handleHover(e);\n        },\n        onMouseOut: function onMouseOut(e) {\n          return _this3.handleHoverOut(e);\n        },\n        onDragEnd: this.handleDragEnd,\n        onDragStart: this.handleDragStart,\n        draggable: true,\n        strokeEnabled: this.state.hover ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Sprite;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  };\n} // function mapDispatchToProps(dispatch){\n//   return {\n//     selectSprite: (selectedSprite) => {\n//       dispatch(selectSprite(selectedSprite))\n//     }\n//   }\n// }\n\n\nexport default connect(mapStateToProps, actions)(Sprite);","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/Sprite.js"],"names":["React","Component","connect","Image","actions","Sprite","state","image","uniqueKey","handleDragStart","setState","isDragging","props","selectSprite","sprite","handleDragEnd","handleHover","e","hover","document","body","style","cursor","handleHoverOut","handleSelect","console","log","window","src","selectedSprite","url","onload","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n// import * as actions from '../actions/actions';\n// import Konva from 'konva';\nimport { Image } from 'react-konva';\n// import { selectSprite } from '../actions/sprite'\nimport * as actions from '../actions/sprite'\n\nclass Sprite extends Component{\n  state = {\n    image: null,\n    // isDragging: false,\n    // hover: false,\n    uniqueKey: null\n  }\n\n  componentDidMount() {\n    const image = new window.Image();\n    image.src = this.props.selectedSprite.sprite.url\n    image.onload = () => {\n      this.setState({\n        image: image,\n        uniqueKey: this.props.selectedSprite.uniqueKey\n      });\n    };\n  }\n\n  // componentDidUpdate() {\n    // const image = new window.Image();\n    // image.src = this.props.selectedSprite.sprite.url\n    // image.onload = () => {\n    //   this.setState({\n    //     image: image\n    //   });\n    // };\n  // }\n\n  handleDragStart = () => {\n    this.setState({\n      isDragging: true\n    })\n    this.props.selectSprite(this.props.sprite)\n  }\n\n  handleDragEnd = () => {\n    this.setState({\n      isDragging: false\n    })\n  }\n\n  handleHover = (e) => {\n    this.setState({\n      hover: true\n    })\n    document.body.style.cursor = 'pointer'\n  }\n\n  handleHoverOut = (e) => {\n    this.setState({\n      hover: false\n    })\n    document.body.style.cursor = 'default'\n  }\n\n  handleSelect = () => {\n    console.log('handle select props',this.props)\n    debugger\n    this.props.selectSprite(this.props.sprite)\n  }\n  //\n  //\n  //\n  render(){\n    console.log('SPRITE PROPS', this.props)\n    console.log('SPRITE STATE', this.state)\n    return(\n      <Image image={this.state.image}\n          x={1}\n          y={1}\n          width={100}\n          height={100}\n          stroke='red'\n          strokeWidth={5}\n          onClick={this.handleSelect}\n          onMouseOver={(e) => this.handleHover(e)}\n          onMouseOut={(e) => this.handleHoverOut(e)}\n          onDragEnd={this.handleDragEnd}\n          onDragStart={this.handleDragStart}\n          draggable\n          strokeEnabled={this.state.hover ? true : false}\n          />\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedSprite: state.sprite.selectedSprite\n  }\n}\n\n// function mapDispatchToProps(dispatch){\n//   return {\n//     selectSprite: (selectedSprite) => {\n//       dispatch(selectSprite(selectedSprite))\n//     }\n//   }\n// }\n\nexport default connect(mapStateToProps, actions)(Sprite);\n"]},"metadata":{},"sourceType":"module"}