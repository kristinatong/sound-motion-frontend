{"ast":null,"code":"import _classCallCheck from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/UploadSound.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { setSounds } from '../actions/sound';\nimport { Button, Form, Segment, Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar'; // import Button from '@material-ui/core/Button';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { withRouter, Redirect } from 'react-router';\nvar soundTypes = [{\n  id: 1,\n  name: 'guitar'\n}, {\n  id: 2,\n  name: 'drums'\n}, {\n  id: 3,\n  name: 'piano'\n}];\n\nvar styles = function styles(theme) {\n  return {\n    main: _defineProperty({\n      width: 'auto',\n      display: 'block',\n      // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3\n    }, theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2), {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }),\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: \"\".concat(theme.spacing.unit * 2, \"px \").concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 3, \"px\")\n    },\n    avatar: {\n      // margin: theme.spacing.unit,\n      // backgroundColor: theme.palette.secondary.main,\n      backgroundColor: '#915c75'\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing.unit\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar UploadSound =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadSound, _Component);\n\n  function UploadSound() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadSound);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadSound)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      file: null,\n      imageUrl: \"\",\n      soundType: \"\",\n      uploaded: false,\n      error: \"\"\n    };\n\n    _this.renderTypes = function () {\n      return soundTypes.map(function (sound) {\n        return React.createElement(FormControlLabel, {\n          kaye: sound.id,\n          name: sound.name,\n          value: sound.name,\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }),\n          label: sound.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var data = new FormData();\n      data.append(\"name\", _this.state.name);\n      data.append(\"file\", _this.state.file);\n      data.append(\"sound_type\", _this.state.soundType);\n      data.append(\"image_url\", _this.state.imageUrl);\n      fetch(\"http://localhost:3000/api/v1/sounds\", {\n        method: \"POST\",\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.status === 500) debugger;\n\n        _this.props.setSounds(data);\n      }); // this.setState({\n      //   uploaded: true\n      // })\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFileUpload = function (event) {\n      console.log(event.nativeEvent, event.target.files, event.target.files[0]);\n\n      _this.setState({\n        file: event.target.files[0]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadSound, [{\n    key: \"render\",\n    // <form onSubmit={this.handleSubmit}>\n    //   Name: <input\n    //     name=\"name\"\n    //     type=\"text\"\n    //     value={this.state.name}\n    //     onChange={this.handleChange}\n    //   />\n    //\n    //   Type: {this.renderTypes()}\n    //   <input type=\"file\" onChange={this.handleFileUpload} />\n    //   <input type=\"submit\" value=\"Upload\" />\n    // </form>\n    //\n    // {this.state.imageURL ? (\n    //   <img src={this.state.imageURL} alt=\"img\" />\n    // ) : null}\n    //\n    value: function render() {\n      var classes = this.props.classes;\n      console.log('upload sound state', this.state);\n      return React.createElement(MuiThemeProvider, {\n        theme: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: classes.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(LockIcon, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Upload Sound\"), React.createElement(\"form\", {\n        className: classes.form,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.state.uploaded ? React.createElement(Message, {\n        positive: true,\n        header: \"You have successfully uploaded a sound.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }) : React.createElement(Message, {\n        error: true,\n        header: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        id: \"name\",\n        name: \"name\",\n        autoComplete: \"name\",\n        autoFocus: true,\n        onChange: this.handleChange,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Sound File\"), React.createElement(Input, {\n        id: \"file\",\n        type: \"file\",\n        name: \"file\",\n        autoComplete: \"file\",\n        autoFocus: true,\n        onChange: this.handleFileUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Sound Type\"), React.createElement(RadioGroup, {\n        \"aria-label\": \"Type\",\n        name: \"soundType\",\n        value: this.state.soundType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.renderTypes())), React.createElement(FormControl, {\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"imageUrl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Image URL\"), React.createElement(Input, {\n        id: \"imageUrl\",\n        name: \"imageUrl\",\n        autoComplete: \"imageUrl\",\n        autoFocus: true,\n        onChange: this.handleChange,\n        value: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Upload\")))));\n    }\n  }]);\n\n  return UploadSound;\n}(Component);\n\nUploadSound.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds\n  };\n} //\n// function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n//\n// export default connect(mapStateToProps, { setSounds })(UploadSound);\n\n\nvar connectedToReduxHOC = connect(mapStateToProps, {\n  setSounds: setSounds\n});\nvar connectedMenu = connectedToReduxHOC(UploadSound);\nvar withStylesMenu = withStyles(styles)(connectedMenu);\nexport default withStylesMenu;","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/components/UploadSound.js"],"names":["React","Component","Fragment","connect","setSounds","Button","Form","Segment","Message","PropTypes","Avatar","CssBaseline","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockIcon","Paper","Typography","withStyles","MuiThemeProvider","colors","TextField","Radio","RadioGroup","FormHelperText","FormLabel","withRouter","Redirect","soundTypes","id","name","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","backgroundColor","form","submit","UploadSound","state","file","imageUrl","soundType","uploaded","error","renderTypes","map","sound","handleSubmit","event","preventDefault","data","FormData","append","fetch","method","body","then","res","json","status","props","handleChange","setState","target","value","handleFileUpload","console","log","nativeEvent","files","classes","propTypes","object","isRequired","mapStateToProps","sounds","connectedToReduxHOC","connectedMenu","withStylesMenu"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport { setSounds } from '../actions/sound'\nimport { Button, Form, Segment, Message } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\n// import Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { colors } from '../App'\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { withRouter, Redirect } from 'react-router'\n\nconst soundTypes = [{id:1, name: 'guitar'}, {id:2, name: 'drums'}, {id:3, name: 'piano'}]\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    // margin: theme.spacing.unit,\n    // backgroundColor: theme.palette.secondary.main,\n    backgroundColor: '#915c75'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nclass UploadSound extends Component{\n  state = {\n    name: \"\",\n    file: null,\n    imageUrl: \"\",\n    soundType: \"\",\n    uploaded: false,\n    error: \"\"\n  };\n\n  // renderTypes = () => {\n  //   return soundTypes.map(sound => {\n  //     return (<Fragment key={sound.id}><input type=\"radio\" id={sound.name} name=\"soundType\" value={sound.name} onChange={this.handleChange}/><label>{sound.name}</label><br/></Fragment>)\n  //   })\n  // }\n\n  renderTypes = () => {\n    return soundTypes.map(sound => <FormControlLabel kaye={sound.id} name={sound.name} value={sound.name} control={<Radio />} label={sound.name} />)\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"name\", this.state.name);\n    data.append(\"file\", this.state.file);\n    data.append(\"sound_type\", this.state.soundType)\n    data.append(\"image_url\", this.state.imageUrl)\n    fetch(\"http://localhost:3000/api/v1/sounds\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then(res => res.json())\n      .then(data => {\n        if(data.status === 500)\n        debugger\n        this.props.setSounds(data)\n\n      });\n    // this.setState({\n    //   uploaded: true\n    // })\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleFileUpload = event => {\n    console.log(event.nativeEvent, event.target.files, event.target.files[0]);\n    this.setState({\n      file: event.target.files[0],\n    });\n  };\n\n  // <form onSubmit={this.handleSubmit}>\n  //   Name: <input\n  //     name=\"name\"\n  //     type=\"text\"\n  //     value={this.state.name}\n  //     onChange={this.handleChange}\n  //   />\n  //\n  //   Type: {this.renderTypes()}\n  //   <input type=\"file\" onChange={this.handleFileUpload} />\n  //   <input type=\"submit\" value=\"Upload\" />\n  // </form>\n  //\n  // {this.state.imageURL ? (\n  //   <img src={this.state.imageURL} alt=\"img\" />\n  // ) : null}\n  //\n  render(){\n    const { classes } = this.props;\n    console.log('upload sound state', this.state)\n    return (\n        <MuiThemeProvider theme={colors}>\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar} >\n            <LockIcon color=\"secondary\"/>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Upload Sound\n          </Typography>\n          <form className={classes.form} onSubmit={this.handleSubmit}>\n            {this.state.uploaded ? <Message positive header=\"You have successfully uploaded a sound.\" /> : <Message error header={this.state.error} />}\n            <FormControl margin=\"normal\" fullWidth>\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\n              <Input id=\"name\" name=\"name\" autoComplete=\"name\" autoFocus onChange={this.handleChange} value={this.state.name}/>\n            </FormControl>\n\n            <FormControl margin=\"normal\" fullWidth>\n              <FormLabel>Sound File</FormLabel>\n              <Input id=\"file\" type=\"file\" name=\"file\" autoComplete=\"file\" autoFocus onChange={this.handleFileUpload} />\n            </FormControl>\n\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Sound Type</FormLabel>\n              <RadioGroup\n                aria-label=\"Type\"\n                name=\"soundType\"\n                value={this.state.soundType}\n                onChange={this.handleChange}\n              >\n                {this.renderTypes()}\n              </RadioGroup>\n            </FormControl>\n\n            <FormControl margin=\"normal\" fullWidth>\n              <InputLabel htmlFor=\"imageUrl\">Image URL</InputLabel>\n              <Input id=\"imageUrl\" name=\"imageUrl\" autoComplete=\"imageUrl\" autoFocus onChange={this.handleChange} value={this.state.imageUrl}/>\n            </FormControl>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Upload\n            </Button>\n          </form>\n        </Paper>\n      </main>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nUploadSound.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    sounds: state.sound.sounds\n  }\n}\n//\n// function mapDispatchToProps(dispatch){\n//   return {\n//\n//   }\n// }\n//\n\n// export default connect(mapStateToProps, { setSounds })(UploadSound);\n\nconst connectedToReduxHOC = connect(mapStateToProps, { setSounds })\nconst connectedMenu = connectedToReduxHOC(UploadSound)\nconst withStylesMenu = withStyles(styles)(connectedMenu)\nexport default withStylesMenu\n"]},"metadata":{},"sourceType":"module"}