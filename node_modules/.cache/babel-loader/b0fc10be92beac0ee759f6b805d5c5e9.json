{"ast":null,"code":"import _toConsumableArray from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/kristinatong/projects/sound-motion/sound-motion-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialSpriteState = {\n  sprites: [{\n    id: 1,\n    name: 'guitar',\n    url: 'https://image.flaticon.com/icons/png/128/26/26843.png'\n  }, {\n    id: 2,\n    name: 'drums',\n    url: 'https://image.flaticon.com/icons/svg/27/27328.svg'\n  }, {\n    id: 3,\n    name: 'piano',\n    url: 'https://image.flaticon.com/icons/svg/27/27066.svg'\n  }, {\n    id: 4,\n    name: 'drums2',\n    url: 'https://image.flaticon.com/icons/svg/26/26995.svg'\n  }, {\n    id: 5,\n    name: 'headphones',\n    url: 'https://image.flaticon.com/icons/svg/26/26834.svg'\n  }],\n  canvasSprites: [],\n  selectedSprite: {}\n};\nexport default function spriteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSpriteState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index;\n  var sprite;\n\n  switch (action.type) {\n    // case 'CHANGE_SPRITE':\n    //   return {...state, sprites: [...state.sprites, action.payload] };\n    case 'ADD_SPRITE':\n      return _objectSpread({}, state, {\n        canvasSprites: _toConsumableArray(state.canvasSprites).concat([action.sprite]),\n        selectedSprite: action.sprite\n      });\n\n    case 'SELECT_SPRITE':\n      var findSprite = state.canvasSprites.find(function (sprite) {\n        return sprite.uniqueKey === action.uniqueKey;\n      });\n      return _objectSpread({}, state, {\n        selectedSprite: findSprite\n      });\n\n    case 'SELECT_SOUND':\n      debugger;\n      index = state.canvasSprites.findIndex(function (sprite) {\n        return sprite.uniqueKey === action.payload.uniqueKey;\n      });\n      sprite = state.canvasSprites[index];\n      return _objectSpread({}, state, {\n        selectedSprite: _objectSpread({}, state.selectedSprite, {\n          sound: _objectSpread({}, action.payload.selectedSound, {\n            url: action.payload.url\n          })\n        }),\n        canvasSprites: _toConsumableArray(state.canvasSprites.splice(0, index)).concat([Object.assign({}, sprite, {\n          sound: action.payload.selectedSound\n        })], _toConsumableArray(state.canvasSprites.splice(index + 1)))\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kristinatong/projects/sound-motion/sound-motion-frontend/src/redux/reducers/spriteReducer.js"],"names":["initialSpriteState","sprites","id","name","url","canvasSprites","selectedSprite","spriteReducer","state","action","index","sprite","type","findSprite","find","uniqueKey","findIndex","payload","sound","selectedSound","splice","Object","assign"],"mappings":";;AAAA,IAAMA,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAE,CACP;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,QAAb;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GADO,EAEP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,OAAb;AAAsBC,IAAAA,GAAG,EAAE;AAA3B,GAFO,EAGP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,OAAb;AAAsBC,IAAAA,GAAG,EAAE;AAA3B,GAHO,EAIP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,QAAb;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GAJO,EAKP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE,YAAb;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GALO,CADgB;AAQzBC,EAAAA,aAAa,EAAE,EARU;AASzBC,EAAAA,cAAc,EAAE;AATS,CAA3B;AAYA,eAAe,SAASC,aAAT,GAA2D;AAAA,MAApCC,KAAoC,uEAA5BR,kBAA4B;AAAA,MAARS,MAAQ;AACxE,MAAIC,KAAJ;AACA,MAAIC,MAAJ;;AACA,UAAOF,MAAM,CAACG,IAAd;AACE;AACA;AACA,SAAK,YAAL;AACE,+BAAWJ,KAAX;AAAkBH,QAAAA,aAAa,qBAAMG,KAAK,CAACH,aAAZ,UAA2BI,MAAM,CAACE,MAAlC,EAA/B;AAA0EL,QAAAA,cAAc,EAACG,MAAM,CAACE;AAAhG;;AACF,SAAK,eAAL;AACE,UAAME,UAAU,GAAGL,KAAK,CAACH,aAAN,CAAoBS,IAApB,CAAyB,UAAAH,MAAM;AAAA,eAAIA,MAAM,CAACI,SAAP,KAAqBN,MAAM,CAACM,SAAhC;AAAA,OAA/B,CAAnB;AACA,+BAAWP,KAAX;AAAkBF,QAAAA,cAAc,EAAEO;AAAlC;;AACF,SAAK,cAAL;AACE;AACAH,MAAAA,KAAK,GAAGF,KAAK,CAACH,aAAN,CAAoBW,SAApB,CAA+B,UAAAL,MAAM;AAAA,eAAIA,MAAM,CAACI,SAAP,KAAqBN,MAAM,CAACQ,OAAP,CAAeF,SAAxC;AAAA,OAArC,CAAR;AACAJ,MAAAA,MAAM,GAAGH,KAAK,CAACH,aAAN,CAAoBK,KAApB,CAAT;AACA,+BACKF,KADL;AAEEF,QAAAA,cAAc,oBAAME,KAAK,CAACF,cAAZ;AAA4BY,UAAAA,KAAK,oBAAMT,MAAM,CAACQ,OAAP,CAAeE,aAArB;AAAoCf,YAAAA,GAAG,EAAEK,MAAM,CAACQ,OAAP,CAAeb;AAAxD;AAAjC,UAFhB;AAGEC,QAAAA,aAAa,qBACVG,KAAK,CAACH,aAAN,CAAoBe,MAApB,CAA2B,CAA3B,EAA8BV,KAA9B,CADU,UAEbW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,MAAlB,EAA0B;AAAEO,UAAAA,KAAK,EAAET,MAAM,CAACQ,OAAP,CAAeE;AAAxB,SAA1B,CAFa,sBAGVX,KAAK,CAACH,aAAN,CAAoBe,MAApB,CAA2BV,KAAK,GAAG,CAAnC,CAHU;AAHf;;AAQF;AACE,aAAOF,KAAP;AArBJ;AAuBD","sourcesContent":["const initialSpriteState = {\n  sprites: [\n    {id:1, name: 'guitar', url: 'https://image.flaticon.com/icons/png/128/26/26843.png'},\n    {id:2, name: 'drums', url: 'https://image.flaticon.com/icons/svg/27/27328.svg'},\n    {id:3, name: 'piano', url: 'https://image.flaticon.com/icons/svg/27/27066.svg'},\n    {id:4, name: 'drums2', url: 'https://image.flaticon.com/icons/svg/26/26995.svg'},\n    {id:5, name: 'headphones', url: 'https://image.flaticon.com/icons/svg/26/26834.svg'}\n  ],\n  canvasSprites: [],\n  selectedSprite: {}\n};\n\nexport default function spriteReducer(state = initialSpriteState, action) {\n  let index\n  let sprite\n  switch(action.type) {\n    // case 'CHANGE_SPRITE':\n    //   return {...state, sprites: [...state.sprites, action.payload] };\n    case 'ADD_SPRITE':\n      return {...state, canvasSprites: [...state.canvasSprites, action.sprite], selectedSprite:action.sprite}\n    case 'SELECT_SPRITE':\n      const findSprite = state.canvasSprites.find(sprite => sprite.uniqueKey === action.uniqueKey)\n      return {...state, selectedSprite: findSprite}\n    case 'SELECT_SOUND':\n      debugger\n      index = state.canvasSprites.findIndex( sprite => sprite.uniqueKey === action.payload.uniqueKey)\n      sprite = state.canvasSprites[index]\n      return {\n        ...state,\n        selectedSprite: {...state.selectedSprite, sound: {...action.payload.selectedSound, url: action.payload.url}},\n        canvasSprites: [\n        ...state.canvasSprites.splice(0, index),\n        Object.assign({}, sprite, { sound: action.payload.selectedSound }),\n        ...state.canvasSprites.splice(index + 1)\n      ]}\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}